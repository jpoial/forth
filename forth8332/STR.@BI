SOURCE$ C:\RELPASS\STR.MOD IMODULE$ Str MODTAB$ Str SET-IMPL M$ Str NO-IMPORT FALSE CID-TYPE BENUM CONST$ StrictRealConv PRTAB$ InCharSet 0PNUM! VALUE-SECT CHAR TYPE-DUP VAR$ s INCPNUM&!TAB TYPE-DROP VAR-SECT CHARSET TYPE-DUP VAR$ cset INCPNUM&!TAB TYPE-DROP BOOLEAN $FUNCT NOOP ~ : &C:\R001 BODY-BEGIN SV0 [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ MaxSet ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 14 ] BIN-OP SV+ [ cset ] IDENTIFIER M-ARRAY SV0 [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ MaxSet ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 13 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ 15 ] BIN-OP SV+ RETURN BODY-END ; BLBODY$ &C:\R001 END-BLOCK NPAIRS$ InCharSet InCharSet PRTAB$ InclChar 0PNUM! VALUE-SECT CHAR TYPE-DUP VAR$ s INCPNUM&!TAB TYPE-DROP VAR-SECT CHARSET TYPE-DUP VAR$ cset INCPNUM&!TAB TYPE-DROP NOOP ~ BITSET TYPE-DUP VAR$ SetPart TYPE-DROP : &C:\R002 BODY-BEGIN A-STACK-0 SV0 [ cset ] IDENTIFIER M-ARRAY SV0 [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ MaxSet ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 13 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ SetPart ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  addr SetPart DUP @                 1 addr s C@ 31 AND <-L OR SWAP !  FORTHEND A-STACK-0 SV0 [ SetPart ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ cset ] IDENTIFIER M-ARRAY SV0 [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ MaxSet ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 13 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R002 END-BLOCK NPAIRS$ InclChar InclChar PRTAB$ EmptyCharSet 0PNUM! VAR-SECT CHARSET TYPE-DUP VAR$ cset INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DROP : &C:\R003 BODY-BEGIN SV0 [ CSWords ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH LIMITEXP SV0 [ 0 I/C ] CONSTTABLE STARTEXP DO &I [ i ] IDENTIFIER LOOPINDEX ! A-STACK-0 SV0 [ BITSET ] IDENTIFIER RES-CONTEXT REC-CHECK [ CSROOT SET9 ] CONSTTABLE AGR-ADDR [ cset ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN LOOP BODY-END ; BLBODY$ &C:\R003 END-BLOCK NPAIRS$ EmptyCharSet EmptyCharSet PRTAB$ AddChars 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ string INCPNUM&!TAB TYPE-DROP VAR-SECT CHARSET TYPE-DUP VAR$ cset INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DROP : &C:\R004 BODY-BEGIN SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ string ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND LIMITEXP SV0 [ 0 I/C ] CONSTTABLE STARTEXP DO &I [ i ] IDENTIFIER LOOPINDEX ! [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ string ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ cset ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND LOOP BODY-END ; BLBODY$ &C:\R004 END-BLOCK NPAIRS$ AddChars AddChars PRTAB$ Delete 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ P INCPNUM&!TAB TYPE-DUP VAR$ L INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ Le TYPE-DUP VAR$ I TYPE-DROP : &C:\R005 BODY-BEGIN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ Le ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ Le ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ BOOLEAN? WHILE A-STACK-0 SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT CASE SV0 [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BODY-END ; BLBODY$ &C:\R005 END-BLOCK NPAIRS$ Delete Delete PRTAB$ Insert 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S1 INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S2 INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ P INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ I TYPE-DUP VAR$ J TYPE-DUP VAR$ C TYPE-DUP VAR$ L TYPE-DROP : &C:\R006 BODY-BEGIN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S2 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ C ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ C ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ C ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ P ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ C ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND SV0 [ 0 I/C ] CONSTTABLE LIMITEXP SV0 [ C ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH STARTEXP DO &I [ J ] IDENTIFIER LOOPINDEX ! CASE SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP SV+ BOOLEAN? => A-STACK-0 SV0 [ S1 ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ S1 ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC [ 1 I/C 2 C-UN-OP BENUM ] STEPCONST +LOOP A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ J ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ S2 ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ S1 ] IDENTIFIER M-ARRAY SV0 [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT BODY-END ; BLBODY$ &C:\R006 END-BLOCK NPAIRS$ Insert Insert PRTAB$ Item 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ R INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT CHARSET TYPE-DUP VAR$ T INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ N INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ I TYPE-DUP VAR$ J TYPE-DROP CARDINAL TYPE-DUP VAR$ HR TYPE-DUP VAR$ L TYPE-DROP : &C:\R007 BEGIN BEGIN SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ InCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ T ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 8 ] BIN-OP BOOLEAN? WHILE [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT CASE SV0 [ N ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP SV+ [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ N ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND BEGIN SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ InCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ T ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND COMPILE-NOT [ 8 ] BIN-OP BOOLEAN? WHILE [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT AGAIN ; : &C:\R008 BODY-BEGIN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &C:\R007 A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ J ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ R ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ HR ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ InCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ T ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND COMPILE-NOT [ 8 ] BIN-OP [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ R ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT CASE SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP SV+ BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ R ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BODY-END ; BLBODY$ &C:\R008 END-BLOCK NPAIRS$ Item Item PRTAB$ ItemS 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ R INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ T INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ N INCPNUM&!TAB TYPE-DROP NOOP ~ CHARSET TYPE-DUP VAR$ CS TYPE-DROP CARDINAL TYPE-DUP VAR$ I TYPE-DROP : &C:\R009 BODY-BEGIN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ T ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ EmptyCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CS ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BEGIN SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP BOOLEAN? WHILE [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ T ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ CS ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND REPEAT [ Item ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ R ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ CS ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ N ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &C:\R009 END-BLOCK NPAIRS$ ItemS ItemS PRTAB$ Match 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Source INCPNUM&!TAB TYPE-DUP VAR$ Pattern INCPNUM&!TAB TYPE-DROP BOOLEAN $FUNCT NOOP ~ PRTAB$ Rmatch 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ s INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ i INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ p INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ j INCPNUM&!TAB TYPE-DROP BOOLEAN $FUNCT NOOP ~ BOOLEAN TYPE-DUP VAR$ matched TYPE-DROP CARDINAL TYPE-DUP VAR$ k TYPE-DROP STR' * ' SYS-STR$ &C:\R010 STR' ? ' SYS-STR$ &C:\R011 : &C:\R012 BEGIN CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP SV+ [ s ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP SV+ [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP SV+ [ p ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? => SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP SV+ [ p ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP SV+ BOOLEAN? => SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF SV0 [ p ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R010 ] $STRINGCONST [ 1 ] BIN-OP SV+ BOOLEAN? => A-STACK-0 SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ k ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 1 ] BIN-OP SV+ [ p ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 9 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP SV+ BOOLEAN? => SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF BEGIN A-STACK-0 SV0 [ Rmatch ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ k ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 9 ] BIN-OP NEXTCOMP AGREND AGR-ADDR [ matched ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ k ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND SV0 [ matched ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ k ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP SV+ [ 7 ] BIN-OP [ s ] IDENTIFIER M-ARRAY SV0 [ k ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? UNTIL SV0 [ matched ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ESAC ENDOF SV0 [ p ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R011 ] $STRINGCONST [ 2 ] BIN-OP SV+ [ CAP ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ p ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ CAP ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 2 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? => SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND ESAC AGAIN ; : &C:\R013 BODY-BEGIN CASE SV0 [ p ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP BOOLEAN? => SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF ESAC &C:\R012 BODY-END ; BLBODY$ &C:\R013 END-BLOCK NPAIRS$ Rmatch Rmatch : &C:\R014 BODY-BEGIN SV0 [ Rmatch ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Source ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP SV0 [ Pattern ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND RETURN BODY-END ; BLBODY$ &C:\R014 END-BLOCK NPAIRS$ Match Match STR' 0 ' ALLOT-STR BENUM STR' F ' ALLOT-STR BENUM CRROOT RANGE-TAB CARDINAL ARRAY-TAB TYPE$ ConvIntType 0 I/C BENUM 1 I/C BENUM CRROOT RANGE-TAB CARDINAL ARRAY-TAB TYPE$ BA 0 I/C BENUM 15 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE$ ConvStrType BOOLEAN TYPE-DUP VAR$ FloatUse TYPE-DROP ConvIntType TYPE-DUP VAR$ ConvInt TYPE-DROP BA TYPE-DUP VAR$ Div TYPE-DROP ConvStrType TYPE-DUP VAR$ ConvStr TYPE-DROP PRTAB$ CheckBase 0PNUM! VAR-SECT CARDINAL TYPE-DUP VAR$ b INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R015 BODY-BEGIN CASE SV0 [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 I/C ] CONSTTABLE [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ 2 I/C ] CONSTTABLE AGR-ADDR [ b ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC CASE SV0 [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 16 I/C ] CONSTTABLE [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ 16 I/C ] CONSTTABLE AGR-ADDR [ b ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BODY-END ; BLBODY$ &C:\R015 END-BLOCK NPAIRS$ CheckBase CheckBase PRTAB$ Reverse 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ s INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ l INCPNUM&!TAB TYPE-DUP VAR$ h INCPNUM&!TAB TYPE-DROP NOOP ~ CHAR TYPE-DUP VAR$ T TYPE-DROP : &C:\R016 BODY-BEGIN BEGIN SV0 [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ s ] IDENTIFIER M-ARRAY SV0 [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ T ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ s ] IDENTIFIER M-ARRAY SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ s ] IDENTIFIER M-ARRAY SV0 [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ T ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ s ] IDENTIFIER M-ARRAY SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT BODY-END ; BLBODY$ &C:\R016 END-BLOCK NPAIRS$ Reverse Reverse PRTAB$ IntToStr 0PNUM! VALUE-SECT INTEGER TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Base INCPNUM&!TAB TYPE-DROP VAR-SECT BOOLEAN TYPE-DUP VAR$ OK INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ l TYPE-DROP CARDINAL TYPE-DUP VAR$ b TYPE-DROP STR' - ' SYS-STR$ &C:\R017 STR' + ' SYS-STR$ &C:\R018 : &C:\R019 BEGIN CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN EXIT ENDOF ESAC A-STACK-0 SV0 [ ConvStr ] IDENTIFIER M-ARRAY SV0 [ CARDINAL ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 14 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND A-STACK-0 SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 13 ] BIN-OP AGR-ADDR [ V ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC AGAIN ; STR' 0 ' SYS-STR$ &C:\R020 : &C:\R021 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ l ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ CheckBase ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Base ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ Base ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ b ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ &C:\R017 ] $STRINGCONST AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 1 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 ] UN-OP AGR-ADDR [ V ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF SV0 [ FloatUse ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => A-STACK-0 SV0 [ &C:\R018 ] $STRINGCONST AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 1 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ESAC &C:\R019 CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC CASE SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R020 ] $STRINGCONST [ 3 ] BIN-OP BOOLEAN? => [ Reverse ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP NEXTCOMP PROCEND ENDOF [ Reverse ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP NEXTCOMP PROCEND ESAC BODY-END ; BLBODY$ &C:\R021 END-BLOCK NPAIRS$ IntToStr IntToStr PRTAB$ CardToStr 0PNUM! VALUE-SECT CARDINAL TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Base INCPNUM&!TAB TYPE-DROP VAR-SECT BOOLEAN TYPE-DUP VAR$ OK INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ l TYPE-DROP CARDINAL TYPE-DUP VAR$ b TYPE-DROP : &C:\R022 BEGIN CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN EXIT ENDOF ESAC A-STACK-0 SV0 [ ConvStr ] IDENTIFIER M-ARRAY SV0 [ CARDINAL ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 14 ] BIN-OP NEXTCOMP AGREND MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND A-STACK-0 SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 13 ] BIN-OP AGR-ADDR [ V ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC AGAIN ; : &C:\R023 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ l ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ CheckBase ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Base ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ Base ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ b ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &C:\R022 CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC [ Reverse ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP NEXTCOMP PROCEND BODY-END ; BLBODY$ &C:\R023 END-BLOCK NPAIRS$ CardToStr CardToStr PRTAB$ StrToCI 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Base INCPNUM&!TAB TYPE-DROP VAR-SECT BOOLEAN TYPE-DUP VAR$ OK INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ l TYPE-DROP CARDINAL TYPE-DUP VAR$ b TYPE-DUP VAR$ t TYPE-DUP VAR$ y TYPE-DROP CHAR TYPE-DUP VAR$ c TYPE-DROP CARDINAL TYPE-DUP VAR$ x TYPE-DROP STR' - ' SYS-STR$ &C:\R024 STR' + ' SYS-STR$ &C:\R025 STR' 0 ' SYS-STR$ &C:\R026 STR' F ' SYS-STR$ &C:\R027 : &C:\R028 BODY-BEGIN [ CheckBase ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Base ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ Base ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ b ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ l ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R024 ] $STRINGCONST [ 1 ] BIN-OP SV+ [ S ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R025 ] $STRINGCONST [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ 1 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ t ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BEGIN SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ l ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP SV+ [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 2 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ c ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R026 ] $STRINGCONST [ 3 ] BIN-OP SV+ [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R027 ] $STRINGCONST [ 5 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC A-STACK-0 SV0 [ ConvInt ] IDENTIFIER M-ARRAY SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ x ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ x ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP [ 5 ] BIN-OP SV+ [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 11 ] BIN-OP [ x ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP [ 5 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC A-STACK-0 SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 11 ] BIN-OP [ x ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP AGR-ADDR [ t ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &C:\R028 END-BLOCK NPAIRS$ StrToCI StrToCI PRTAB$ StrToInt 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Base INCPNUM&!TAB TYPE-DROP VAR-SECT BOOLEAN TYPE-DUP VAR$ OK INCPNUM&!TAB TYPE-DROP INTEGER $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ t TYPE-DROP STR' - ' SYS-STR$ &C:\R029 : &C:\R030 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ StrToCI ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Base ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ t ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HEX$ 7FFFFFFF I/C ] CONSTTABLE [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC CASE SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R029 ] $STRINGCONST [ 1 ] BIN-OP BOOLEAN? => SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 2 ] UN-OP RETURN ENDOF SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN ESAC BODY-END ; BLBODY$ &C:\R030 END-BLOCK NPAIRS$ StrToInt StrToInt PRTAB$ StrToCard 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Base INCPNUM&!TAB TYPE-DROP VAR-SECT BOOLEAN TYPE-DUP VAR$ OK INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ t TYPE-DROP STR' - ' SYS-STR$ &C:\R031 : &C:\R032 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ StrToCI ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Base ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ t ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R031 ] $STRINGCONST [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &C:\R032 END-BLOCK NPAIRS$ StrToCard StrToCard PRTAB$ Caps 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ I TYPE-DROP : &C:\R033 BODY-BEGIN SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND LIMITEXP SV0 [ 0 I/C ] CONSTTABLE STARTEXP DO &I [ I ] IDENTIFIER LOOPINDEX ! A-STACK-0 SV0 [ CAP ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN LOOP BODY-END ; BLBODY$ &C:\R033 END-BLOCK NPAIRS$ Caps CapS PRTAB$ Compare 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S1 INCPNUM&!TAB TYPE-DUP VAR$ S2 INCPNUM&!TAB TYPE-DROP INTEGER $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ L1 TYPE-DUP VAR$ L2 TYPE-DUP VAR$ L TYPE-DUP VAR$ Index TYPE-DROP : &C:\R034 BODY-BEGIN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L1 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S2 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L2 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ L1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L2 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ L1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF A-STACK-0 SV0 [ L2 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ESAC FORTHBEGIN  addr  S1 addr  S2 addr  L @ COMPS   addr  Index !                      FORTHEND CASE SV0 [ Index ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ BOOLEAN? => CASE SV0 [ S1 ] IDENTIFIER M-ARRAY SV0 [ Index ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ S2 ] IDENTIFIER M-ARRAY SV0 [ Index ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP BOOLEAN? => SV0 [ 1 I/C ] CONSTTABLE [ 2 ] UN-OP RETURN ENDOF SV0 [ 1 I/C ] CONSTTABLE RETURN ESAC ENDOF SV0 [ L1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L2 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP SV+ BOOLEAN? => SV0 [ 0 I/C ] CONSTTABLE RETURN ENDOF SV0 [ L1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L2 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ BOOLEAN? => SV0 [ 1 I/C ] CONSTTABLE [ 2 ] UN-OP RETURN ENDOF SV0 [ 1 I/C ] CONSTTABLE RETURN ESAC BODY-END ; BLBODY$ &C:\R034 END-BLOCK NPAIRS$ Compare Compare PRTAB$ Length 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S1 INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ I TYPE-DROP : &C:\R035 BODY-BEGIN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  addr  S1 addr  I @ 1+ 0 SCANS       FORTHEND BODY-END ; BLBODY$ &C:\R035 END-BLOCK NPAIRS$ Length Length PRTAB$ Append 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Ns INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ I TYPE-DUP VAR$ J TYPE-DROP CHAR TYPE-DUP VAR$ c TYPE-DROP : &C:\R036 BODY-BEGIN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Ns ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ J ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Ns ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP SV+ [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP SV+ [ 8 ] BIN-OP [ S ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 2 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Ns ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT CASE SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Ns ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ Ns ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BODY-END ; BLBODY$ &C:\R036 END-BLOCK NPAIRS$ Append Append PRTAB$ Copy 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Ns INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ H TYPE-DUP VAR$ L TYPE-DROP : &C:\R037 BODY-BEGIN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Ns ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 1 I/C ] CONSTTABLE [ 9 ] BIN-OP AGR-ADDR [ H ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ H ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ H ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC FORTHBEGIN  addr  S addr  Ns addr  L @ CMOVE  FORTHEND CASE SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ H ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ Ns ] IDENTIFIER M-ARRAY SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BODY-END ; BLBODY$ &C:\R037 END-BLOCK NPAIRS$ Copy Copy PRTAB$ Concat 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Ns INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S1 INCPNUM&!TAB TYPE-DUP VAR$ S2 INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ I TYPE-DUP VAR$ J TYPE-DROP : &C:\R038 BEGIN CASE SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Ns ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP SV+ BOOLEAN? => EXIT ENDOF ESAC CASE SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S2 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP SV+ BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ Ns ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN EXIT ENDOF ESAC A-STACK-0 SV0 [ S2 ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Ns ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ S2 ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND AGAIN ; : &C:\R039 BODY-BEGIN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ J ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Ns ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP SV+ [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S1 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP SV+ [ 8 ] BIN-OP [ S1 ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHAR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 2 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ S1 ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Ns ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &C:\R038 BODY-END ; BLBODY$ &C:\R039 END-BLOCK NPAIRS$ Concat Concat PRTAB$ Pos 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DUP VAR$ P INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ I TYPE-DUP VAR$ J TYPE-DUP VAR$ K TYPE-DUP VAR$ HP TYPE-DUP VAR$ HS TYPE-DROP : &C:\R040 BEGIN CASE SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HP ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP SV+ [ P ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF ESAC CASE SV0 [ K ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HS ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => SV0 [ MAX ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ CARDINAL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN ENDOF ESAC CASE SV0 [ S ] IDENTIFIER M-ARRAY SV0 [ K ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ P ] IDENTIFIER M-ARRAY SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ J ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ K ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND AGAIN ; : &C:\R041 BEGIN CASE SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HS ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP SV+ [ S ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => SV0 [ MAX ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ CARDINAL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN ENDOF ESAC A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ J ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ K ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &C:\R040 [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND AGAIN ; : &C:\R042 BODY-BEGIN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ P ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ HP ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ HS ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &C:\R041 BODY-END ; BLBODY$ &C:\R042 END-BLOCK NPAIRS$ Pos Pos CHAR TYPE-DUP VAR$ t TYPE-DROP STR' 0 ' SYS-STR$ &C:\R043 STR' 9 ' SYS-STR$ &C:\R044 STR' 0 ' SYS-STR$ &C:\R045 STR' : ' SYS-STR$ &C:\R046 STR' @ ' SYS-STR$ &C:\R047 STR' A ' SYS-STR$ &C:\R048 STR' F ' SYS-STR$ &C:\R049 STR' A ' SYS-STR$ &C:\R050 STR' 0123456789ABCDEF ' SYS-STR$ &C:\R051 : &C:\R052 BODY-BEGIN A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ FloatUse ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ &C:\R044 ] $STRINGCONST LIMITEXP SV0 [ &C:\R043 ] $STRINGCONST STARTEXP DO &I [ t ] IDENTIFIER LOOPINDEX ! A-STACK-0 SV0 [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ &C:\R045 ] $STRINGCONST NEXTCOMP AGREND [ 10 ] BIN-OP AGR-ADDR [ ConvInt ] IDENTIFIER M-ARRAY SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN LOOP SV0 [ &C:\R047 ] $STRINGCONST LIMITEXP SV0 [ &C:\R046 ] $STRINGCONST STARTEXP DO &I [ t ] IDENTIFIER LOOPINDEX ! A-STACK-0 SV0 [ 255 I/C ] CONSTTABLE AGR-ADDR [ ConvInt ] IDENTIFIER M-ARRAY SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN LOOP SV0 [ &C:\R049 ] $STRINGCONST LIMITEXP SV0 [ &C:\R048 ] $STRINGCONST STARTEXP DO &I [ t ] IDENTIFIER LOOPINDEX ! A-STACK-0 SV0 [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ &C:\R050 ] $STRINGCONST NEXTCOMP AGREND [ 10 ] BIN-OP [ 10 I/C ] CONSTTABLE [ 9 ] BIN-OP AGR-ADDR [ ConvInt ] IDENTIFIER M-ARRAY SV0 [ t ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN LOOP A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ Div ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 4 I/C ] CONSTTABLE AGR-ADDR [ Div ] IDENTIFIER M-ARRAY SV0 [ 1 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &C:\R051 ] $STRINGCONST AGR-ADDR [ ConvStr ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R052 END-BLOCK NPAIRS$ Str Str CUNIT$ Str ;S NOSOURCE   