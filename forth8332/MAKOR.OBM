SOURCE$ MAKOR.MOD MMODULE$ MAKOR MODTAB$ MAKOR SET-MAIN IMPORT-ON FROM$ DBF IMPORT$ GetByKey IMPORT$ ClearRecord IMPORT$ InitDBFs IMPORT$ OpenDBFro IMPORT$ MBase FROM-OFF IMPORT$ MKOR IMPORT$ KUNDE IMPORT-OFF WORD TYPE-DUP VAR$ KFail TYPE-DROP KUNDE MOD-ID KLIENT RES-CONTEXT TYPE-DUP VAR$ klient TYPE-DROP MKOR MOD-ID MKORTYYP RES-CONTEXT TYPE-DUP VAR$ maks TYPE-DROP PRTAB$ Maksja NOOP ~ : &MAKO001 BODY-BEGIN FORTHBEGIN  DIA-PARA @ F+P ! addr maks BUF->REC   PRINTER KIRJE @ 100 DUMP addr maks 100 DUMP  FORTHEND A-STACK-0 SV0 [ maks ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ MaksjaNr ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ klient ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ KUNDENUMBER ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  addr klient 100 DUMP addr KFail 140 DUMP  FORTHEND CASE SV0 [ GetByKey ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ KFail ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ klient ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND BOOLEAN? => [ ClearRecord ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ maks ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  PRINTER addr maks 200 DUMP addr klient 200 DUMP CONSOLE  FORTHEND A-STACK-0 SV0 [ klient ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ NIMETUS ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ maks ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ MaksjaNimetus ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ klient ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ NJATK ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ maks ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ MNimetuseJatk ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ klient ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ KOOD ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ maks ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ MaksjaKood ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ klient ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ PANGANIMI ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ maks ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ MaksjaPangaNimi ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ klient ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ PANGALINN ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ maks ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ MaksjaPangaLinn ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ klient ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ ARVEKOOD ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ maks ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ MaksjaPKood ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ klient ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ ARVENR ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ maks ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ MaksjaArveNr ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC FORTHBEGIN  DIA-PARA @ F+P !         addr maks KIRJE @ MEST   PRINTER addr maks 200 DUMP addr klient 200 DUMP CONSOLE  FORTHEND BODY-END ; BLBODY$ &MAKO001 END-BLOCK NPAIRS$ Maksja Maksja PRTAB$ INITS NOOP ~ 1 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ T1 TYPE-DUP VAR$ T2 TYPE-DUP VAR$ T3 TYPE-DUP VAR$ T4 TYPE-DUP VAR$ T5 TYPE-DUP VAR$ T6 TYPE-DUP VAR$ T7 TYPE-DUP VAR$ T8 TYPE-DUP VAR$ T9 TYPE-DUP VAR$ T10 TYPE-DUP VAR$ T11 TYPE-DUP VAR$ T12 TYPE-DUP VAR$ T13 TYPE-DUP VAR$ T14 TYPE-DUP VAR$ T15 TYPE-DUP VAR$ T16 TYPE-DUP VAR$ T17 TYPE-DUP VAR$ T18 TYPE-DUP VAR$ T19 TYPE-DROP 1 I/C BENUM 5 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ KIRJELDUS TYPE-DROP STR' MKOR ' SYS-STR$ &MAKO002 STR' Maksekorraldus Nr.  ' SYS-STR$ &MAKO003 STR' . ' SYS-STR$ &MAKO004 STR' .a. ' SYS-STR$ &MAKO005 STR' Maksja ' SYS-STR$ &MAKO006 STR' DEEBET       Summa ' SYS-STR$ &MAKO007 STR' Kood ' SYS-STR$ &MAKO008 STR' ----------------------------------------------------------------- ' SYS-STR$ &MAKO009 STR' . ' SYS-STR$ &MAKO010 STR' Maksja pank                   Linn       Kood       Arve Nr. ' SYS-STR$ &MAKO011 STR' ------------------------------------------------------------------------------ ' SYS-STR$ &MAKO012 STR' Saaja ' SYS-STR$ &MAKO013 STR' KREEDIT ' SYS-STR$ &MAKO014 STR' Saaja pank                    Linn       Kood       Arve Nr. ' SYS-STR$ &MAKO015 STR' Summa sonadega ' SYS-STR$ &MAKO016 STR' Makse eesmark ' SYS-STR$ &MAKO017 STR' P.K.                Kliendi allkirjad              Panga allkirjad ' SYS-STR$ &MAKO018 : &MAKO019 BODY-BEGIN A-STACK-0 SV0 [ &MAKO002 ] $STRINGCONST AGR-ADDR [ KIRJELDUS ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO003 ] $STRINGCONST AGR-ADDR [ T1 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO004 ] $STRINGCONST AGR-ADDR [ T2 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO005 ] $STRINGCONST AGR-ADDR [ T3 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO006 ] $STRINGCONST AGR-ADDR [ T4 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO007 ] $STRINGCONST AGR-ADDR [ T5 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO008 ] $STRINGCONST AGR-ADDR [ T6 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO009 ] $STRINGCONST AGR-ADDR [ T7 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO010 ] $STRINGCONST AGR-ADDR [ T8 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO011 ] $STRINGCONST AGR-ADDR [ T9 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO012 ] $STRINGCONST AGR-ADDR [ T10 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO013 ] $STRINGCONST AGR-ADDR [ T11 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO014 ] $STRINGCONST AGR-ADDR [ T12 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ T7 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ T13 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO015 ] $STRINGCONST AGR-ADDR [ T14 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ T10 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ T15 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO016 ] $STRINGCONST AGR-ADDR [ T16 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ T10 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ T17 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO017 ] $STRINGCONST AGR-ADDR [ T18 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &MAKO018 ] $STRINGCONST AGR-ADDR [ T19 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  ['] MKOR.MKORTYYP EXECUTE 12 + @ KIRJETYYP !        addr KIRJELDUS DEFNAME !                       7 #KOMPLEKT !   ['] MKOR.KEY1TYYP EXECUTE 12 + @ KEY.ARRAY @ !        ['] MKOR.KEY2TYYP EXECUTE 12 + @ KEY.ARRAY @  4 + !   ['] MKOR.KEY3TYYP EXECUTE 12 + @ KEY.ARRAY @  8 + !   ['] MKOR.KEY4TYYP EXECUTE 12 + @ KEY.ARRAY @ 12 + !   ['] MKOR.KEY5TYYP EXECUTE 12 + @ KEY.ARRAY @ 16 + !   ['] MKOR.KEY6TYYP EXECUTE 12 + @ KEY.ARRAY @ 20 + !   ['] MKOR.KEY7TYYP EXECUTE 12 + @ KEY.ARRAY @ 24 + !   19 #VABA !    addr T1  TEXT.ARRAY @ !    addr T2  TEXT.ARRAY @  4 + !   addr T3  TEXT.ARRAY @  8 + !   addr T4  TEXT.ARRAY @ 12 + !   addr T5  TEXT.ARRAY @ 16 + !   addr T6  TEXT.ARRAY @ 20 + !   addr T7  TEXT.ARRAY @ 24 + !   addr T8  TEXT.ARRAY @ 28 + !   addr T9  TEXT.ARRAY @ 32 + !   addr T10 TEXT.ARRAY @ 36 + !   addr T11 TEXT.ARRAY @ 40 + !   addr T12 TEXT.ARRAY @ 44 + !   addr T13 TEXT.ARRAY @ 48 + !   addr T14 TEXT.ARRAY @ 52 + !   addr T15 TEXT.ARRAY @ 56 + !   addr T16 TEXT.ARRAY @ 60 + !   addr T17 TEXT.ARRAY @ 64 + !   addr T18 TEXT.ARRAY @ 68 + !   addr T19 TEXT.ARRAY @ 72 + !   [']  Maksja >BODY 8 + @ 4 + @ PROCED.ARRAY @ !   FORTHEND BODY-END ; BLBODY$ &MAKO019 END-BLOCK NPAIRS$ INITS INITS STR' KUNDE ' SYS-STR$ &MAKO020 STR' KUNDED.MDB ' SYS-STR$ &MAKO021 : &MAKO022 BODY-BEGIN [ INITS ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND [ InitDBFs ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND CASE SV0 [ OpenDBFro ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ &MAKO020 ] $STRINGCONST NEXTCOMP SV0 [ &MAKO021 ] $STRINGCONST NEXTCOMP SV0 [ KFail ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND BOOLEAN? => ENDOF ESAC FORTHBEGIN  PRINTER F+P @ 140 DUMP CONSOLE  FORTHEND [ MBase ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND BODY-END ; BLBODY$ &MAKO022 END-BLOCK NPAIRS$ MAKOR MAKOR CUNIT$ MAKOR ;S NOSOURCE   