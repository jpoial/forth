 MODULA-2                                                       Compilerompiler: Compatibility test.                  09/26/89 ) (  Common specification for this screen:                           >type1 >type2 --- >type >type' flag                          where {type,type'}={type1,type2},               if flag=false   type IN {type1,type2} and type' is result type, if flag=true  ) : COMPN3 SWAP true ;                                            : COMP3N SWAP true ;                                            : COMPN5 OVER OVER ?BASETYPE = ;                                : COMP5N SWAP COMPN5 ;                                          : COMP53 SWAP ?BASETYPE IS-INT/CARD? ;                          : COMP35 SWAP COMP53 ;                                          : COMP55 OVER ?BASETYPE OVER ?BASETYPE = ;                      -->                                                                                                                                                                                                                                                             \ #3  Compiler: Compatibility test.                  09/26/89 ) 5 5 2ARRAY COMP-TABLE                                           : SETTABLE ( --- )                                                 6 0 DO 6 0 DO ['] false J I COMP-TABLE ! LOOP LOOP ;         SETTABLE                                                                                                                        ' COMPN3 1 3 COMP-TABLE !      ' COMP35 1 5 COMP-TABLE !        ' COMPN3 2 3 COMP-TABLE !      ' COMP35 2 5 COMP-TABLE !        ' true   3 1 COMP-TABLE !      ' true   3 2 COMP-TABLE !        ' COMP35 3 5 COMP-TABLE !      ' COMPN5 4 5 COMP-TABLE !        ' COMP53 5 1 COMP-TABLE !      ' COMP53 5 2 COMP-TABLE !        ' COMP53 5 3 COMP-TABLE !      ' COMP5N 5 4 COMP-TABLE !        ' COMP55 5 5 COMP-TABLE !                                       -->                                                                                                                                                                                             \ #4  Compiler: Compatibility test.                  06/18/90 ) : COMP-CODE ( >type --- cc )                                       CASE IS-INT/CARD? => ?T           ENDOF                              IS-CHAR?     => DROP 4       ENDOF                              IS-ENUM?     => DROP 4       ENDOF                              IS-SUBR?     => DROP 5       ENDOF                                              DROP 0                                     ESAC ;                                                       : SUBR-COMP? ( >type1 >type2 --- >type >type' flag )              DUP COMP-CODE >R OVER COMP-CODE R>                              COMP-TABLE @ EXECUTE ;                                        : ADR-POINTER? ( >type1 >type2 --- >type >type' flag )             IS-ADDRESSTYPE? IF SWAP IS-POINTER?                                     ELSE SWAP IS-ADDRESSTYPE?                                            IF SWAP IS-POINTER? ELSE false THEN                        THEN ; -->                                           \ #5  Compiler: Compatibility test.                  06/18/90 ) : PROC-COMP? ( >type1 >type2 --- >type >type' flag )               IS-PROCTYPE? ROT IS-PROCTYPE? ROT AND                           IF 2DUP 16 S= >R                                                   OVER 12 TAB@ OVER 12 TAB@ = R> AND                              IF OVER 8 TAB@ OVER 8 TAB@ AR-OF-COMP?                             IF DUP 4 TAB@ true SWAP 0                                          ?DO DROP OVER I 4 * 16 + TAB@                                       OVER I 4 * 16 + TAB@                                            AR-OF-COMP?                                                     IF true ELSE false LEAVE THEN                                LOOP                                                        ELSE false THEN                                              ELSE false THEN                                              ELSE false THEN ;                                            -->                                                             \ #6  Compiler: Compatibility test.                  09/26/89 ) :  1AR? ( >type --- flag | true if ARRAY OF CHAR length 1 )        DUP ?L DUP 8 = SWAP 9 = OR >R                                   DUP ?T 12 = R> AND                                              IF ?TSIZE 1 = ELSE DROP false THEN ;                         : CH-ARR? ( >type1 >type2 --- >type type' flag  )                  IS-CHAR?                                                        IF OVER 1AR?                                                    ELSE SWAP IS-CHAR?                                                 IF OVER 1AR? ELSE false THEN                                 THEN ;                                                       -->                                                                                                                                                                                                                                                                                                                             \ #7  Compiler: COMPATIBLE?                          09/26/89 ) : COMPATIBLE? ( >type1 >type2 --- >type >type' flag )              CASE IS-IDENTICAL? => true  ENDOF                                    SUBR-COMP?    => true  ENDOF                                    ADR-POINTER?  => true  ENDOF                                    CH-ARR?       => true  ENDOF                                    PROC-COMP?    => true  ENDOF                                                     falseompiler: ?MOdE                                12/14/90 ) ( mode: 0=UNCOMPATIBLE   1=INTEGER           2=CARDINAL                 3=CHAR, enumeration, subrange        4=POINTER                  5=SET     6=BOOLEAN    7=REAL    8=LONGREAL )           : ?MOdE ( >type --- mode )                                       CASE IS-INT?      => DROP 1 ENDOF IS-CARD?     => DROP 2 ENDOF       IS-INT/CARD? => DROP 2 ENDOF IS-BOOL?     => DROP 6 ENDOF       IS-CHAR?     => DROP 3 ENDOF IS-ENUM?     => DROP 3 ENDOF       IS-SUBR?     => DROP 3 ENDOF IS-POINTER?  => DROP 4 ENDOF       IS-SET?      => DROP 5 ENDOF IS-PROCTYPE? => DROP 9 ENDOF       IS-REAL?     => DROP 7 ENDOF IS-LONGREAL? => DROP 8 ENDOF       IS-WORD-TYPE? => DROP 10 ENDOF                                                  DROP 0                                         ESAC ; -->                                                                                                                                                                                 \ #9  Compiler: Assignment compatibility test.       09/26/89 ) : MASTER12? ( >type --- flag )                                     DUP COMP-CODE DUP 4 < OVER 0 > AND                              IF 2DROP true                                                   ELSE 5 = IF ?BASETYPE MYSELF ELSE DROP false THEN THEN ;     : NUMBER-SUBR? ( >type1 >type2 --- >type >type' flag )             DUP MASTER12? >R OVER MASTER12? R> AND ;                     : WORD-ASSIGN? ( >type1 >type2 --- >type >type' flag )             IS-WORD-TYPE? ROT IS-WORD-TYPE? ROT OR                          IF OVER ?TSIZE B/WORD = ELSE false THEN ;                    -->                                                                                                                                                                                                                                                                                                                                                                                             \ #10 Compiler: ASSIGN-COMP                          09/18/90 ) : STRING-ASSIGN? ( >type1 >type2 --- >type >type' flag )           IS-CHARARR?                                                     IF OVER CASE IS-CHARARR?     => ?TSIZE OVER ?TSIZE >= ENDOF                  IS-CHAR?        => DROP true             ENDOF                                     false                                   ESAC                                                    ELSE false THEN ;                                            : ASSIGN-COMP? ( >type1 >type2 --- flag )                          CASE COMPATIBLE?    => DROP DROP true  ENDOF                         NUMBER-SUBR?   => DROP DROP true  ENDOF                         STRING-ASSIGN? => DROP DROP true  ENDOF                         WORD-ASSIGN?   => DROP DROP true  ENDOF                                           DROP DROP false                          ESAC ;                                                       -->                                                             \ #11                                                11/16/90 ) -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ #12 Compiler: Address compiling - variable.        09/27/89 ) : BASEADDR ( >table --- >table )                                (  DUP ?PROCNUMBER B/WORD * BASETABLE + [COMPILE] LITERAL ; )   (  DUP ?PROCNUMBER [COMPILE] PLITERAL B/WORD [COMPILE] LITERAL     COMPILE * BASETABLE [COMPILE] LITERAL COMPILE + ; )             BAAS [COMPILE] LITERAL ;                                     : OFFSADDR ( >table --- >table ) DUP ?TARG [COMPILE] LITERAL ;  : MAKEADDR ( --- ) COMPILE @ COMPILE + ;                        : VARPARM-ADDR ( >table --- >table )                               OFFSADDR BASEADDR MAKEADDR                                      IS-FLEXARRAY? 0= IF COMPILE @ THEN ;                         : LOCVAR-ADDR ( >table --- >table )                                OFFSADDR BASEADDR MAKEADDR ;                                 : GLOBVAR-ADDR ( >table --- >table )                               DUP ?TARG MODBASE @ + [COMPILE] GLITERAL ; ( GLITERAL ) -->                                                                  \ #13 Compiler: Address compiling - variable.        02/15/90 ) : RECIPIENT? ( --- )                                               $VAR @ 0= 58 ?PRINTERROR ; IMMEDIATE                         : VAR-ADDR ( >table --- >type )                                    true $VAR !                                                     CASE IS-VARFORMPARM? => VARPARM-ADDR  ENDOF                          IS-RECFIELD?    => RECFIELD-ADDR ENDOF                          IS-LOCVAR?      => LOCVAR-ADDR   ENDOF                          IS-GLOBVAR?     => GLOBVAR-ADDR  ENDOF                     ESAC ?TYPE ;                                                 -->                                                                                                                                                                                                                                                                                                                                                                                             \ #14 Compiler: Address compiling - FORTH address    02/12/88 ) : addr ( --- | used addr xxx ,compiles LIT addr[xxx] - compiling         --- addr[XXX] | used addr XXX - executing )               BL word FIND                                                    IF >BODY 4 +                                                       STATE @                                                         IF CASE IS-VARFORMPARM? => VARPARM-ADDR  ENDOF                          IS-LOCVAR?      => LOCVAR-ADDR   ENDOF                          IS-GLOBVAR?     => GLOBVAR-ADDR  ENDOF                                             67 PRINTERROR                           ESAC IS-FLEXARRAY? IF COMPILE @ THEN DROP                    ELSE IS-GLOBVAR?                                                   IF ?TARG MODBASE @ + ELSE 68 PRINTERROR THEN                 THEN                                                         ELSE 61 PRINTERROR                                              THEN ; IMMEDIATE -->                                         \ #15 Compiler: FORTHBEGIN FORTHEND                  12/09/89 ) VARIABLE SAVESP                                                 : FORTHBEGIN SP@ SAVESP ! ; IMMEDIATE                           : FORTHEND DECIMAL SP@ SAVESP @ -                                       IF 90 .MSG ABORT THEN ; IMMEDIATE                       VAR DPSAVE                                                      : MCODE HERE DPSAVE ! ALIMIT ADP @ - 200 <                              IF 91 .MSG ABORT                                                THEN ADP @ DP !  [COMPILE] CODE  ;                       ASSEMBLER DEFINITIONS                                          : MEND-CODE FORTH                                                       ADP @ ALIMIT >                                                  IF 91 .MSG ABORT                                                THEN   ASSEMBLER   NEXT,   [COMPILE] END-CODE                   DP @ ADP ! DPSAVE @ DP ! ;                               FORTH DEFINITIONS   -->                                        \ #16 Compiler: Address compiling - array.           11/14/90 ) : MINDEX ( >ar-type >ind-type --- >el-type                                compiles commands for calculating el-addr )              OVER ?INDEXTYPE ASSIGN-COMP?                                    IF IS-ARRAYTYPE?                                                   IF DUP ?INDEXTYPE IS-SUBR?                                         IF 12 POINTER GETCONST ?DUP                                        IF [COMPILE] LITERAL COMPILE - THEN                          ELSE DROP THEN                                                  ?ELTYPE DUP ?TSIZE DUP 1 =                                      IF DROP ELSE [COMPILE] LITERAL COMPILE * THEN                   COMPILE +                                                    ELSE 55 PRINTERROR THEN                                      ELSE 56 PRINTERROR THEN ; IMMEDIATE                          -->                                                                                                                             \ #17 Compiler: Built-in procedures                  11/19/90 ) : M-ARRAY ( >table --- >type )                                     IS-FLEXARRAYTYPE? IF COMPILE @ THEN                             true $VAR ! [COMPILE] +LEVEL ; IMMEDIATE                     : ENUM-MAX ( >type --- >type )                                     DUP 4 TAB@ 1 - [COMPILE] LITERAL ;                           : SUBR-MAX ( >type --- >type )                                     DUP 16 POINTER 4 TAB@                                           [COMPILE] LITERAL ;                                          : USERMAX ( >type --- >type )                                      DUP ?T CASE 10 OF ENUM-MAX ENDOF                                            11 OF SUBR-MAX ENDOF                                                  51 PRINTERROR                                        ENDCASE ;                                             -->                                                                                                                             \ #18 Compiler: Built-in procedures                  11/16/90 ) : STANDMAX ( >type --- >type )                                     [ HEX ] DUP ?T CASE 1 OF 7FFFFFFF [COMPILE] LITERAL ENDOF                           2 OF FFFFFFFF [COMPILE] LITERAL ENDOF                           6 OF       FF [COMPILE] LITERAL ENDOF                           [ DECIMAL ] 51 PRINTERROR                                  ENDCASE ;                DECIMAL              : max ( >type --- >type )                                          ?1PARM IS-TYPE? 0= 51 ?PRINTERROR DUP ?L                        CASE 8 OF USERMAX  ENDOF                                             9 OF USERMAX  ENDOF                                            11 OF STANDMAX ENDOF                                                  51 PRINTERROR                                         ENDCASE ;                                                    -->                                                                                                                             \ #19 Compiler: Built-in procedures                  10/22/89 ) : ENUM-MIN ( >type --- >type )                                     0 [COMPILE] LITERAL ;                                        : SUBR-MIN ( >type --- >type )                                     DUP 12 POINTER 4 TAB@                                           [COMPILE] LITERAL ;                                          : USERMIN ( >type --- >type )                                      DUP ?T CASE 10 OF ENUM-MIN ENDOF                                            11 OF SUBR-MIN ENDOF                                                  51 PRINTERROR                                        ENDCASE ;                                             -->                                                                                                                                                                                                                                                                                                                             \ #20 Compiler: Built-in procedures                  11/16/90 ) : STANDMIN ( >type --- >type )                                     [ HEX ] DUP ?T CASE 1 OF 80000000 [COMPILE] LITERAL ENDOF                           2 OF        0 [COMPILE] LITERAL ENDOF                           6 OF        0 [COMPILE] LITERAL ENDOF                           [ DECIMAL ] 51 PRINTERROR                                  ENDCASE ;         DECIMAL                     : min ( >type --- >type )                                          ?1PARM IS-TYPE? 0= 51 ?PRINTERROR DUP ?L                        CASE 8 OF USERMIN  ENDOF                                             9 OF USERMIN  ENDOF                                            11 OF STANDMIN ENDOF                                                  51 PRINTERROR                                         ENDCASE ;                                                    -->                                                                                                                             \ #21 Compiler: Built-in procedures                  03/17/91 ) : tsize ( >table --- >CARDINAL ) ?1PARM                            IS-TYPE? 0= 51 ?PRINTERROR                                      ?TSIZE [COMPILE] LITERAL CARDINAL ;                          : val ( >type >type --- >CARDINAL )                                ?2PARM CARDINAL COMPATIBLE? 0= 51 ?PRINTERROR 2DROP ;        : abs ( >type --- >type )                                          ?1PARM IS-TYPE? 0= 51 ?PRINTERROR INTEGER IS-IDENTICAL?         IF DROP IABS THEN ;                                          : float ." float isn't included" ;                              : trunc ." trunc isn't included " ;                             : odd ( >type --- >BOOLEAN )                                       ?1PARM COMPILE *ODD DROP BOOLEAN ;                           : adr ( >type --- >ADDRESS )                                       0 $VAR ! DROP ADDRESS ;                                      -->                                                             \ #22 Compiler: Built-in procedures                  12/10/90 ) : ord ( >type --- >CARDINAL ) ?1PARM DROP CARDINAL ;            : cap ( >CHAR --- >CHAR )                                          ?1PARM IS-CHAR? 0= 51 ?PRINTERROR COMPILE *CAP ;             : high ( >type --- >indextype ) ?1PARM IS-ARRAYTYPE?               IF IS-FLEXARRAYTYPE?                                             IF DROP B/WORD [COMPILE] LITERAL COMPILE + COMPILE @               1 [COMPILE] LITERAL COMPILE - CARDINAL                       ELSE ?INDEXTYPE max                                             THEN                                                           ELSE 51 PRINTERROR THEN ;                                    : excl ( >settype >eltype --- ) ?2PARM                           OVER IS-SET? 0= 51 ?PRINTERROR ?ELTYPE DUP >R COMPATIBLE?         IF 2DROP R> USERMIN DROP COMPILE - COMPILE *EXCL DROP           ELSE R> DROP 51 PRINTERROR                                      THEN ; -->                                                   \ #23 Compiler: Built-in procedures                  11/16/90 ) : incl ( >settype >eltype --- ) ?2PARM                             OVER IS-SET? 0= 51 ?PRINTERROR ?ELTYPE DUP >R COMPATIBLE?       IF 2DROP R> USERMIN COMPILE - DROP COMPILE *INCL DROP           ELSE R> DROP 51 PRINTERROR                                      THEN ;                                                       : inc-dec ( >vartype / >vartype >type --- >vartype )               PARMNUMBER @    CASE 2 OF 1 [COMPILE] LITERAL CARDINAL ENDOF                         3 OF                              ENDOF    52 PRINTERROR   ENDCASE COMPATIBLE? 0= 59 ?PRINTERROR           2DROP COMPILE SWAP STANDNR @ 15 =                               IF COMPILE -! ELSE COMPILE +! THEN ;                         : halt ( --- ) PARMNUMBER @ 1 <> 52 ?PRINTERROR COMPILE ABORT ; : totype ( >type --- >restype ) ?1PARM DROP $TYPE @ ;           : tochar ( >type --- CHAR ) ?1PARM COMPILE *CHR DROP CHAR ;     -->                                                             \ #24 Compiler: Built-in procedures                  03/17/91 ) : STFUNCCALL ( parmtables --- >restable )                          STANDNR @ CASE  1 OF max     ENDOF                                              2 OF min     ENDOF                                              3 OF tsize   ENDOF                                              4 OF val     ENDOF                                              5 OF abs     ENDOF                                              6 OF tochar  ENDOF                                              7 OF float   ENDOF                                              8 OF odd     ENDOF                                              9 OF ord     ENDOF                                             10 OF trunc   ENDOF                                             11 OF cap     ENDOF                                             12 OF high    ENDOF                                             18 OF adr     ENDOF                              24 OF totype  ENDOF 53 PRINTERROR ENDCASE ;  -->             \ #25 Compiler: Built-in procedures                  11/16/90 ) : STPROCCALL ( parmtables --- )                                    STANDNR @ CASE 13 OF excl    ENDOF                                             14 OF incl    ENDOF                                             15 OF inc-dec ENDOF                                             16 OF inc-dec ENDOF                                             17 OF halt    ENDOF                                                   54 PRINTERROR                                        ENDCASE ;                                          -->                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ #26 Compiler: MOVEVALUE                            09/20/91 ) : MOVEVALUE ( >val-type >var-type --- )                            IS-FLEXARRAYTYPE? 2 PICK IS-FLEXARRAYTYPE? SWAP DROP            OR 57 ?PRINTERROR IS-CHARARR?                                   IF SWAP IS-CHAR?                                                   IF DROP ?TSIZE [COMPILE] LITERAL                                   COMPILE MOVECHAR                                             ELSE ?TSIZE [COMPILE] LITERAL                                        ?TSIZE [COMPILE] LITERAL                                        COMPILE MOVESTRN                                           THEN                                                         ELSE DROP ?TSIZE [COMPILE] LITERAL                                   COMPILE CMOVE                                              THEN ;                                                       -->                                                                                                                             \ #27 Compiler: COMPILE-ASSIGN                       04/02/91 ) : PUTVALUE ( >val-type >var-type --- | compiles "store" )          IS-CHAR? IF COMPILE C! ELSE COMPILE ! THEN DROP DROP ;       : COMPILE-MOVE ( >val-type >var-type --- )                               DUP ?MOdE                                                       IF PUTVALUE                                                     ELSE MOVEVALUE                                                  THEN ;                                                 : COMPILE-ASSIGN ( >val-type >var-type --- )                       2DUP ASSIGN-COMP?                                                  IF COMPILE-MOVE                                                 ELSE 57 PRINTERROR                                              THEN ; IMMEDIATE                                          -->                                                                                                                                                                                             \ #28 Compiler: Actual parameters.                   02/15/90 ) : GETPARM ( --- >parmtype )                                        CURR-PROC @ ?TYPE                                               PARMNUMBER @                                                    4 * 12 + POINTER ;                                           : GETVAR ( --- 1 if var/0 if value )                               CURR-PROC @ ?TYPE                                               PARMNUMBER @                                                    ?PARMMODE ;                                                  : GETVALUE ( >type --- >type  )                                    $VAR @ IF IS-CHAR?                                                        IF COMPILE C@ ELSE COMPILE @ THEN                            THEN ;                                                -->                                                                                                                                                                                             \ #29 Compiler: Actual parameters.                   12/10/90 ) : SET-ARRLEN ( >type --- >type )                                   CURR-PROC @                                                     IF GETPARM IS-FLEXARRAYTYPE?                ( formal param.)       IF DROP IS-FLEXARRAYTYPE?                 ( fact. param.)             IF COMPILE DUP COMPILE @ COMPILE SWAP                              B/WORD [COMPILE] LITERAL                                        COMPILE + COMPILE @                                          ELSE CASE IS-CHARARR? => DUP ?TSIZE  ENDOF                                IS-CHAR?    => 1           ENDOF                                               DUP ?ELEM#                                  ESAC [COMPILE] LITERAL                                     THEN                                                      ELSE DROP THEN                                               THEN ; -->                                                                                                                   \ #30 Compiler: Actual parameters.                   12/10/90 ) : AGR-ADDR ( --- ) A-STACK C@                                      IF COMPILE GET-CONSTADDR 0 A-STACK C! THEN ; IMMEDIATE       : NEXTPARM ( >type --- >type )                                     CURR-PROC @ PARM# ( number of parameters )                      PARMNUMBER @ < 52 ?PRINTERROR                                   GETVAR IF SV @                                                            IF 50 PRINTERROR                                                ELSE GETPARM IS-IDENTICAL? 0=  49 ?PRINTERROR DROP              THEN                                                         ELSE A-STACK C@                                                    IF [COMPILE] AGR-ADDR THEN                                       DUP GETPARM ASSIGN-COMP? 0=  51 ?PRINTERROR                 THEN                                                     SET-ARRLEN [COMPILE] SV0 ; -->                                                                                               \ #31 Compiler:                                      04/02/91 ) : SAVE-ELEM ( >type1 >type2 --- )                                  IS-AGREGATE-TYPE?                                               IF IS-IDENTICAL? 0= 59 ?PRINTERROR 2DROP                        ELSE COMPILE DHERE DUP ?TSIZE ROT ROT 2DUP ASSIGN-COMP?            0= 57 ?PRINTERROR COMPILE-MOVE                                    [COMPILE] LITERAL COMPILE DALLOT                           THEN ;                                                       : ARRELEM ( >type --- )                                            IS-FLEXARRAYTYPE? IF COMPILE @ THEN                             CURR-PROC @ ?ELTYPE SAVE-ELEM ;                              : RECELEM ( >type --- )                                            IS-TYPE? DROP IS-FLEXARRAYTYPE? IF COMPILE @ THEN               CURR-PROC @ IS-TYPE? DROP PARMNUMBER @                          ?FIELDTYPE 0= 77 ?PRINTERROR                                    SAVE-ELEM ; -->                                              \ #32 Compiler:                                      04/24/91 ) : NEWTYPE ( >type --- >restype )                                   IS-FLEXARRAYTYPE? IF COMPILE @ THEN                             DROP CURR-PROC @ IS-TYPE? DROP ;                             : NEXTCOMP ( >type --- >type )                                     AGRTYPE @ CASE 1 OF NEXTPARM       ENDOF                                       3 OF RECELEM        ENDOF                                       4 OF ARRELEM        ENDOF                                   ENDCASE 1 PARMNUMBER +! [COMPILE] SV0 ; IMMEDIATE : ONECOMP ( >type --- >type )                                      AGRTYPE @ CASE 1 OF NEXTPARM       ENDOF                                       3 OF NEWTYPE        ENDOF                                       4 OF NEWTYPE        ENDOF                                   ENDCASE 1 PARMNUMBER +! [COMPILE] SV0 ; IMMEDIATE -->                                                                                                                             \ #33 Compiler: COMPILE-FETCH                        03/04/90 ) : IS-VARFACTPARM? ( --- flag )                                     AGRTYPE @                                                       CASE 1 OF CURR-PROC @ IF GETVAR 1 = ELSE false THEN    ENDOF         2 OF PARMNUMBER @ 1 = IF STAND-VARPARM?                                               ELSE false THEN ENDOF                       false  SWAP                                              ENDCASE ;                                                    : COMPILE-FETCH ( >type --- >type )                                DUP ?MOdE                                                       IF LEVEL @                                                         IF IS-VARFACTPARM? 0=                                              IF GETVALUE THEN                                             ELSE GETVALUE THEN                                           THEN ; IMMEDIATE                                             -->                                                             \ #34 Compiler:                                      04/02/91 ) : ARR-AGR-END ( --- >restype )                                     PARMNUMBER @ 2 <>                                               IF CURR-PROC @ ?INDEXTYPE 4 TAB@ PARMNUMBER @ 1 - <>               77 ?PRINTERROR                                               ELSE 0 A-STACK C! DROP                                          THEN CURR-PROC @ ;                                           : REC-AGR-END ( --- >restype )                                     PARMNUMBER @ 2 <>                                               IF CURR-PROC @ IS-TYPE? DROP 4 TAB@ PARMNUMBER @ 1 - <>            77 ?PRINTERROR                                               ELSE 0 A-STACK C! DROP                                          THEN CURR-PROC @ ;                                           -->                                                                                                                                                                                             \ #35 Compilerompiler: Address compiling - constant.        12/10/90 ) : STR-LIT ( >table --- >table )                                    COMPILE (LIT") DUP 4 TABC@ 1+                                   OVER 4 + INFO + HERE ROT                                        DUP ALLOT CMOVE COMPILE 1+ ;                                 : 32B-LIT ( >table --- >table )                                    DUP 4 TAB@ [COMPILE] LITERAL ;                               : 8B-LIT ( >table --- >table )                                     DUP 5 TABC@ [COMPILE] LITERAL ;                              : 64B-LIT ( >table --- >table )                                    DUP 4 + INFO + 2@ [COMPILE] DLITERAL ;                       -->                                                                                                                                                                                                                                                                                                                             \ #37 Compiler: Address compiling - constant.        12/13/90 ) : COMPILECONST ( >table --- >type )                                [COMPILE] SV+ DUP ?T 15 =                                       IF 4 POINTER THEN                                               CASE IS-32BIT?  => 32B-LIT ENDOF                                     IS-8BIT?   => 8B-LIT  ENDOF                                     IS-STRING? => STR-LIT ENDOF                                     IS-64BIT?  => 64B-LIT ENDOF                                ENDCASE ?TYPE ;                                              : ENUM-VALUE ( >table --- >type )                                  [COMPILE] SV+ DUP 4 TAB@ [COMPILE] LITERAL ?TYPE ;           : PROC-VALUE ( >table --- >type )                                  DUP 4 TAB@ [COMPILE] PLITERAL  ( PLITERAL ) ?TYPE ;          : MOD-VOC ( >table --- >table | compiles 0 )                       MODFLAG @ 66 ?PRINTERROR                                        DUP [COMPILE] MOD-ID COMPILE 0 ; -->                         \ #38 Compiler: Address compiling - identifier.      02/01/90 ) : IDENTIFIER ( >table --- >table/>type )                           DUP SETNAME DUP $IDTABLE ! false $VAR !                              CASE IS-VARIABLE?      => VAR-ADDR     ENDOF                         IS-CONSTNAME?     => COMPILECONST ENDOF                         IS-ENUMID?        => ENUM-VALUE   ENDOF                         IS-USER-PROC?     => PROC-VALUE   ENDOF                         IS-STAND-PROC?    =>              ENDOF                         IS-STANDARD-TYPE? =>              ENDOF                         IS-TYPE?          =>              ENDOF                         IS-MODULE?        => MOD-VOC      ENDOF                                            61 PRINTERROR                           ESAC ; IMMEDIATE                                        -->                                                                                                                                                                                             \ #39 Compiler: konstandid                           03/21/91 ) : $STRINGCONST ( >table --- >type )                                IS-8BIT?                                                        IF 8B-LIT                                                       ELSE STR-LIT                                                    THEN ?TYPE ; IMMEDIATE                                       -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ #40 Compiler: CONSTTABLE                           02/01/90 ) : CONSTTABLE ( c t --- >type )                                     [COMPILE] SV+                                                   CASE 2 OF  [COMPILE] LITERAL CARDINAL    ENDOF                       3 OF  [COMPILE] LITERAL INT/CARD    ENDOF                       5 OF  [COMPILE] LITERAL REAL        ENDOF                       8 OF  0 [COMPILE] LITERAL ?TYPE     ENDOF   ( NIL )             9 OF  DUP 4 TAB@ [COMPILE] LITERAL                                    ?TYPE                         ENDOF   ( set )            12 OF [COMPILE] DLITERAL LONGREAL    ENDOF                  ENDCASE ; IMMEDIATE                                          -->                                                                                                                                                                                                                                                                                                                             \ #41 Compiler: Actual parameters.                   02/18/90 ) : PARAMETER ( >factparm-type >formparm-type parmnr --- )           CURR-PROC @ ?TYPE SWAP ?PARMMODE                                IF IS-FLEXARRAYTYPE?                                               IF COMPILE 2! ELSE COMPILE ! THEN 2DROP                      ELSE IS-FLEXARRAYTYPE?                                             IF ?ELTYPE IS-WORD-TYPE?                                           IF 2DROP B/WORD [COMPILE] LITERAL COMPILE FLEXPARMMOV           ELSE DROP   IS-CHAR?                                               IF COMPILE FLEXCHARMOV DROP                                     ELSE ?ELTYPE ?TSIZE [COMPILE] LITERAL                              COMPILE FLEXPARMMOV THEN                                  THEN                                                         ELSE COMPILE-MOVE                                               THEN                                                         THEN ; -->                                                   \ #42 Compiler: Actual parameters.                   12/14/90 ) : PARAMETERS ( >factparm-type1 .. >factparm-typeN --- )            CURR-PROC @ IS-PROCID?                                          IF DUP PARM# DUP 0<>                                               IF 1 SWAP                                                            DO SWAP OVER I ?PARMTABLE LOCVAR-ADDR                              ?TYPE I PARAMETER                                        -1 +LOOP                                                       ELSE DROP THEN                                               ELSE DUP PARM# DUP 0<>                                             IF 1 SWAP                                                            DO SWAP OVER VAR-ADDR COMPILE @ DROP                               I 2 + B/WORD * [COMPILE] LITERAL COMPILE PARMADDR               OVER ?TYPE I 4 * 12 + POINTER I PARAMETER                -1 +LOOP THEN                                               THEN DROP ; -->                                              \ #43 Compiler: Actual parameters. CALL              12/14/90 ) : CALL ( --- >proc-type )                                          CURR-PROC @ DUP ?TYPE DUP >R                                    4 TAB@                 ( number of parameters )                 PARMNUMBER @ 1 - =                                              IF IS-VARIABLE?        ( proc-variable )                           IF VAR-ADDR COMPILE @ DROP                                      ELSE 4 TAB@ [COMPILE] PLITERAL  ( PLITERAL )                    THEN COMPILE GETLOCMEM                                          PARAMETERS COMPILE EXEC-BODY COMPILE FREELOCMEM              ELSE 52 PRINTERROR THEN R> ;                                 : FUNCCALL ( --- >res-type )                                       CALL 8 POINTER DUP 0 = 53 ?PRINTERROR ;                      : PROCCALL ( --- )                                                 CALL 8 POINTER DUP 0 <> IF 54 PRINTERROR ELSE DROP THEN ;    -->                                                             \ #44 Compiler: Procend Agrend                       12/10/90 ) : PROCEND ( --- )                                                  AGRTYPE @ CASE 1 OF PROCCALL    DISP-AGR ENDOF                                 2 OF STPROCCALL           ENDOF                            ENDCASE [COMPILE] -LEVEL ; IMMEDIATE               : AGREND ( --- >res-type )                                         AGRTYPE @ CASE 1 OF FUNCCALL    DISP-AGR ENDOF                                 2 OF STFUNCCALL           ENDOF                                 3 OF REC-AGR-END          ENDOF                                 4 OF ARR-AGR-END          ENDOF                                 5 OF STFUNCCALL           ENDOF                            ENDCASE [COMPILE] -LEVEL ; IMMEDIATE               -->                                                                                                                                                                                                                                                             \ #45 Compiler: Return                               12/13/90 ) : 0RETURN ( --- ) CURR-BLOCK ?TYPE 8 TAB@ 72 ?PRINTERROR           COMPILE $RETURN ; IMMEDIATE                                  : RETURN ( >type --- )                                             CURR-BLOCK ?TYPE 8 TAB@ ?DUP                                    IF ASSIGN-COMP? 0= 70 ?PRINTERROR COMPILE $RETURN               ELSE 71 PRINTERROR THEN ; IMMEDIATE                          -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ #46 Compiler: Procname                             12/13/90 ) VARIABLE $AGRNAME                                               : SAVE-NAME ( >type --- )                                          DROP $AGRNAME @ CURR-PROC ! ;                                : PROCVAR ( --- )                                                  CURR-PROC @ IS-VARIABLE?                                        IF COMPILE @ THEN DROP ;                                     : PROCNAME ( >type --- )                                           $IDTABLE @ $AGRNAME !                                           [COMPILE] SV+ [COMPILE] +LEVEL 1 PARMNUMBER ! 0 STANDNR !     CASE IS-USER-PROCTYPE? => SAVE-NAME [COMPILE] A-STACK-0                                   PROCVAR                       1 ENDOF      IS-STAND-PROC?    => ?T STANDNR ! STANDPROC?       2 ENDOF                        64 PRINTERROR                            ESAC AGRTYPE ! ; IMMEDIATE                                     -->                                                             \ #47 Compiler: Agrname                              12/13/90 ) : AGRNAME ( >type --- )                                            $IDTABLE @ $AGRNAME !                                           [COMPILE] SV+ [COMPILE] +LEVEL 1 PARMNUMBER ! 0 STANDNR !      CASE IS-USER-PROCTYPE? => SAVE-NAME NEW-AGR PROCVAR   1 ENDOF        IS-STAND-PROC?    => ?T STANDNR ! STANDFUNC?     2 ENDOF        IS-RECTYPE?       => SAVE-NAME 1 A-STACK C!      3 ENDOF        IS-ARRAYTYPE?     => SAVE-NAME 1 A-STACK C!      4 ENDOF        IS-TYPE?          => $TYPE ! 24 STANDNR !        5 ENDOF                         64 PRINTERROR                             ESAC AGRTYPE ! ; IMMEDIATE -->                                                                                                                                                                                                                                                                                                                                                                \ #48 Compiler: Expression. COMPILE-IN               01/06/90 ) : COMPILE-IN ( >type1 >type2 --- >type )                           IS-SET?                                                         IF ?ELTYPE COMPATIBLE?                                             IF COMPILE IN DROP DROP BOOLEAN                                 ELSE 59 PRINTERROR THEN                                      ELSE 60 PRINTERROR THEN ;                                    -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ #49 Compiler: Expression. BIN-OP                   10/03/89 ) : BIN-OP ( >type1 >type2 nr --- >type | compiles command )         [COMPILE] SV+ >R                                                R@ 15 =                                                         IF COMPILE-IN R> DROP                                           ELSE COMPATIBLE? ROT DROP                                          IF DUP ?MOdE R@ SWAP OP-TABLE @ DUP                                IF , R> 9 <                                                        IF DROP BOOLEAN THEN                                         ELSE R> DROP 60 PRINTERROR THEN                              ELSE R> DROP 59 PRINTERROR THEN                              THEN ; IMMEDIATE                                             -->                                                                                                                                                                                                                                                             \ #50 Compiler:                                      01/06/90 ) : IS-INT-COMP? ( >type --- >type' flag )                           IS-INT/CARD? >R IS-CARD? 0=  R> AND >R IS-SUBR?                 IF ?BASETYPE IS-INT/CARD? >R IS-CARD? 0=  R> AND                ELSE false THEN                                                 R> OR >R DROP INTEGER R> ;                                   : UN-OP ( >type nr --- >type' )                                    >R IS-INT-COMP? R> SWAP                                         IF 2 =                                                             IF COMPILE NEGATE THEN                                       ELSE 60 PRINTERROR THEN ; IMMEDIATE                          : COMPILE-NOT ( >type --- >type )                                  IS-BOOL? IF 1 [COMPILE] LITERAL COMPILE XOR                              ELSE 60 PRINTERROR THEN ; IMMEDIATE                 -->                                                                                                                             \ #51 Compiler: control.                             03/23/90 ) VARIABLE LTYPE                                                  : LIMITEXP ( >type --- )                                           COMPILE 1+ LTYPE ! ; IMMEDIATE                               : PARMCOMP ( >type --- )                                           LTYPE @ COMPATIBLE? 0=                                          63 ?PRINTERROR DROP DROP ;                                   : STARTEXP ( >type --- )                                           PARMCOMP ; IMMEDIATE                                         : LOOPINDEX ( >type --- )                                          $VAR @ 0=                                                       63 ?PRINTERROR PARMCOMP ; IMMEDIATE                          : STEPCONST ( n t --- )                                            3 > 63 ?PRINTERROR                                              [COMPILE] LITERAL ; IMMEDIATE                                -->                                                             \ #52 Compiler: control.                             02/01/90 ) : BOOLEAN? ( >type --- )                                           IS-BOOL? 0= 62 ?PRINTERROR DROP ; IMMEDIATE                  : *POINTER ( >type --- >bastype )                                   IS-POINTER? 0= 65 ?PRINTERROR                                   COMPILE @ ?ELTYPE                                               ; IMMEDIATE                                                 ;S                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              