 ( CONSTRUCTOR SCREENS FILE )                                    ;S                                                                                                                                Система Построения Трансляторов  ТАРТУ                                      КОНСТРУКТОР                                         202400   Эстонская ССР  г  Тарту                                ул  Лийви 2                                                     Тартуский госуниверситет                                        кафедра программирования                                                                                                        Я. Р. Пейал                                                     В. К. Соо                                                       М. О. Томбак                                                                                                                                                                                                                                                 ( Echo                                               10/02/90 ) HERE CONSTANT OVERLAY                                           HANDLE EMITFILE                                                 HEX 0140 CONSTANT UEMIT                                             0146 CONSTANT UTYPE DECIMAL                                 : HEMIT ( c --- )                                                       DUP (EMIT)                                                      SP@ >R EMITFILE 1 R> WRITE ?DISCERR 2DROP ;             : HTYPE ( addr l --- )                                                  2DUP type                                                       EMITFILE 2SWAP SWAP WRITE ?DISCERR DROP ;               VAR 'HEMIT ' HEMIT OVERLAY - 'HEMIT !                           VAR 'HTYPE ' HTYPE OVERLAY - 'HTYPE !                           : ?ECHO ( --- flag )                                                    EMITFILE SWAP DROP ;                                    -->                                                             ( Echo                                               10/02/90 ) : ECHO ?ECHO 0=                                                        IF CR ." Enter File Name for echo: "                               EMITFILE INPUT-FILENAME                                         EMITFILE OPEN-FILE 0=                                           IF CR ." File " EMITFILE .FILENAME ." already exists!"             OK?                                                          ELSE EMITFILE MAKE-FILE ?DISCERR                                THEN                                                         THEN 'HEMIT @ OVERLAY + UEMIT !                                 'HTYPE @ OVERLAY + UTYPE ! ;                             : ECHO-OFF ['] (EMIT) UEMIT ! ['] type UTYPE ! ?ECHO                    IF EMITFILE CLOSE-FILE ?DISCERR THEN ;                                                                                  ;S                                                                                                                              ( #2 ASSEMBLERI YMBRUS                               09/28/87 )                                                                 : BEGIN-MOD                       ( nnnn  --- )                         HERE LINKS !              ( save the old DP )                   LATEST LINKS 2+ !         ( and NFA of latest word )            S0 @ SWAP 384 + - DP ! ;  ( space for PAD and STACK )                                                                   : END-MOD  LINKS @ DP ! ;       ( restore the old DP )                                                                          : FORGET-MOD    LINKS 2+ @      ( NFA of "old" latest word )            LINKS @ N>LINK ! ;      ( LFA of most recent word )     -->                                                                                                                                                                                                                                                                                                                             ( System messages )                                             empty stack                                                     dictionary full                                                 has incorrect address mode                                      is redefined                                                    is undefined                                                    disk address out of range                                       stack overflow                                                  disk error                                                                                                                                                                                                                                                                                                                      BASE must be DECIMAL                                            missing decimal point                                           PC/FORTH 2.0                             Laboratory Microsystems( System messages )                                             compilation only, use in definition                             execution only                                                  conditionals not paired                                         definition not finished                                         in protected dictionary                                         use only when loading                                           off current editing screen                                      declare vocabulary                                                                                                                                                                                                                                              illegal dimension in array definition                           negative array index                                            array index too large                                                                                                           ( 8086 Assembler messages )                                     16 bit register not allowed                                     8 bit register not allowed                                      address out of range                                            immediate data value not allowed                                missing source register                                         missing destination register                                    illegal operation                                               illegal operand                                                 instruction not implemented                                     illegal destination register                                    illegal source register                                         illegal condition code                                          register mismatch                                               destination address missing                                                                                                     .( #7 Ketta interfeis PC-DOS 2.0: D>S ?DISCERR INITSA10/03/87 ) : \ ?EXEC CR [COMPILE] .( ;  IMMEDIATE                          : VAR VARIABLE ;                                                : D>S ( +d --- u )                                               6 ?ERROR ;                                                     : ?DISCERR ( veakood --- )                                       ?DUP                                                            IF CR .STATUS ABORT                                             THEN ;                                                         : INITSA ( sa handle_pars --- )                                   ROT 0 SEEK-ABS ?DISCERR ;                                     : CURRSA ( handle_pars --- sa )                                   2DUP ?OFFSET 2DUP D>S >R SEEK-ABS ?DISCERR R> ;                -->                                                                                                                                                                                            \ Ketta interfeis PC-DOS 2.0: LREAD LWITE TOBYTE     09/22/87 ) : LREAD ( addr len handle_pars --- eof )                          2SWAP SWAP READ DUP                                             CASE 0 OF SWAP DROP ENDOF                                           -1 OF ENDOF                                                 ( ELSE ) ?DISCERR                                               ENDCASE ;                                                     : LWRITE ( addr len handle_pars --- )                            2SWAP SWAP WRITE ?DISCERR DROP ;                               : TOBYTE ( addr1 c --- addr2 )                                   ENCLOSE DROP SWAP DROP + ;                                       -->                                                                                                                                                                                                                                                                                                                           \ Ketta interfeis PC-DOS 2.0: CHEXT MKEXT OPEXT      10/03/87 ) : CHEXT ( eaddr handle_pars --- \ asendab faili laiendi HCB-s )  IF ( avatud ) DUP DUP @ CLOSE-FILE ?DISCERR                     THEN 5 + ASCII . TOBYTE 1+                                      SWAP 1+ OVER 3 CMOVE 0 SWAP 3 + C! ;                           : OPEXT ( eaddr handle_pars --- )                                       ( asendab laiendi ja avab faili )                        2DUP >R >R CHEXT R> R> OPEN-FILE ?DISCERR ;                    : MKEXT ( eaddr handle_pars --- )                                       ( asendab laiendi, loob ja avab faili )                  2DUP >R >R CHEXT R> R> MAKE-FILE ?DISCERR ;                     VARIABLE MAT1 VARIABLE MAT2                                    -->                                                                                                                                                                                                                                                             \ #10 ALCLASM FREELASM                               09/29/87 ) 8000 BEGIN-MOD                                                  ' ASSEMBLER 4 + @ ASM_TOP !  ( save link to current top word)   CR 7 LOAD-USING ASM86 END-MOD   HEX                             CODE ALCLASM ( len --- sa 0 / errcode )                              BX POP AH, # 48 MOV                                             SI PUSH BP PUSH 21 INT BP POP SI POP                            AX PUSH 1$ JB AX, # 0 MOV AX PUSH                           1$: NEXT, END-CODE                                             CODE FREELASM ( SA --- )                                             ES POP AH, # 49 MOV                                             SI PUSH BP PUSH 21 INT BP POP SI POP                            1$ JNB AX PUSH 2$ JMP                                       1$: AX, # 0 MOV AX PUSH                                         2$: NEXT, END-CODE   DECIMAL                                   -->                                                             \ #11 SETBASM ->L  <-L  1<-CL  1->CL                 09/30/87 ) HEX  CODE SETBASM ( sa len --- errcode/0 )                           BX POP   ES POP   AH, # 4A MOV                                  SI PUSH   BP PUSH   21 INT   BP POP   SI POP                    1$ JB    AX, # 0 MOV                                       1$:  AX PUSH NEXT, END-CODE                         DECIMAL     CODE <-L ( U1 N --- U2 )                                             CX POP AX POP AX, CL SHL AX PUSH NEXT, END-CODE            CODE ->L ( U1 N --- U2 )                                             CX POP AX POP AX, CL SHR AX PUSH NEXT, END-CODE            CODE 1<-CL ( C1 --- C2 )                                             AX POP AL, 1 SHL AX PUSH NEXT, END-CODE                    CODE 1->CL ( C1 --- C2 )                                             AX POP AL, 1 SHR AX PUSH NEXT, END-CODE                     -->                                                                                                                            \ #13 SL=                                            10/20/87 ) 123 LOAD                                                        CODE SL= ( Stringide vo~rdlemine )                                       ( addr1 addr2 seg1 seg2 len --- f )                                      BX, SI  MOV                                                  CX POP  DS POP  ES POP  SI POP  DI POP                                     CLD   REPZ BYTE CMPS                                     SI, BX MOV      AX, # 0 MOV                                         1$ JNZ           AX DEC                  1$:                BX, CS MOV       DS, BX MOV                                     ES, BX MOV          AX PUSH                                           NEXT,                                  END-CODE                                                        FORGET-MOD      ASM_TOP @ ' ASSEMBLER 4 + !                     -->                                                                                                                             \ #14 ?ALLOT ALLOCL FREEL SETBL ERASEL ARRAY         10/13/87 ) : ?ALLOT ( n --- )                                               HERE + DUP S0 @ 256 - U< 0= 2 ?ERROR DP ! ;                    : ALLOCL ( len --- seg )                                         15 + 4 ->L ALCLASM ?DISCERR ;                                  : FREEL ( seg --- )                                              FREELASM ?DISCERR ;                                            : SETBL ( seg newlen --- )                                       15 + 4 ->L SETBASM ?DISCERR ;                                  : INITMEM ?cs: 65520 SETBL ;   ( VABA M@LU DOS-ILE TAGASI )     : ERASEL ( seg adr len --- )                                      >R OVER OVER 0 ROT ROT C!L                                      OVER OVER 1+ R> 1- CMOVEL ;                                   : ARRAY CREATE 2* HERE SWAP DUP ?ALLOT ERASE                            DOES> SWAP 2* + ;                                       -->                                                             \ #14 ?ALLOT ALLOCL FREEL SETBL ERASEL ARRAY         10/13/87 ) : ?ALLOT ( n --- )                                               HERE + DUP S0 @ 256 - U< 0= 2 ?ERROR DP ! ;                    : ALLOCL ( len --- seg )                                         15 + 4 ->L ALCLASM ?DISCERR ;                                  : FREEL ( seg --- )                                              FREELASM ?DISCERR ;                                            : SETBL ( seg newlen --- )                                       15 + 4 ->L SETBASM ?DISCERR ;                                  : INITMEM ?cs: 65520 SETBL ;   ( VABA M@LU DOS-ILE TAGASI )     : ERASEL ( seg adr len --- )                                      >R OVER OVER 0 ROT ROT C!L                                      OVER OVER 1+ R> 1- CMOVEL ;                                   : ARRAY CREATE 2* HERE SWAP DUP ?ALLOT ERASE                            DOES> SWAP 2* + ;                                       -->                                                             \ Hash: $HALEN $HPLEN SET &HKEYL &HILEN &H#CELL ...  09/14/90 ) 4              CONSTANT $HALEN  ( Length of address field )     $HALEN 4 * 6 + CONSTANT $HPLEN  ( Length of the pasport )       : HL@ ( addr --- val ; fetch 32-bit )                                 COMPILE @ ; IMMEDIATE                                     : HL! ( val addr --- ; store 32-bit )                                   0 OVER 2+ ! ! ;                                         : H@ COMPILE @ ; IMMEDIATE  ( fetch 16-bit )                    : H! COMPILE ! ; IMMEDIATE  ( store 16-bit )                    : SET CREATE HERE $HPLEN ERASE $HPLEN ALLOT                            DOES> ;                                                  -->                                                                                                                                                                                                                                                                                                                             \ Hash: &HKEYL &HILEN &H#CELL &HEND &HFFL &HLEN ...  09/14/90 ) : &HKEYL ( pasport --- addr_of_key_len ) ; IMMEDIATE            : &HILEN ( pasport --- addr_of_item_len ) 2+ ;                  : &H#CELL ( pasport --- addr_of_#item_cell ) 4 + ;              : &HEND ( pasport --- addr_of_end ) 6 + ;                       : &HFFL ( pasport --- addr_of_FFL )                                     [ 6 $HALEN + ] LITERAL + ;                              : &HLEN ( pasport --- addr_of_len )                                     [ 6 $HALEN 2* + ] LITERAL + ;                           : &HBASE ( pasport --- addr_of_base )                                   [ 6 $HALEN 3 * + ] LITERAL + ; -->                                                                                                                                                                                                                                                                                                                                                      \ Hash: HKEYL HILEN H#CELL HLEN HBASE HA@ HNEXT      09/14/90 ) : HKEYL ( pasport --- key_len ) &HKEYL H@ ;                     : HILEN ( pasport --- item_len ) &HILEN H@ ;                    : H#CELL ( pasport --- #item_cell ) &H#CELL H@ ;                : HEND ( pasport --- end_loc ) &HEND HL@ ;                      : HFFL ( pasport --- FFL ) &HFFL HL@ ;                          : HLEN ( pasport --- table_len<bytes> ) &HLEN HL@ ;             : HSEG  ( pasport --- base ) &HBASE HL@ ;                       : HA@ ( loc pasport --- n ) HSEG SWAP @L ;                      : HA! ( val loc pasport --- ; 32-bit store to table )                   SWAP >R HSEG 0 OVER R@ 2+ !L                                    R> !L ;                                                 : HNEXT ( ea1 pasport --- ea2 ; get next item in chained list )         DUP HILEN $HALEN - ROT + SWAP HA@ ; -->                                                                                                                                                 \ Hash: -VORDLE PORGE                                09/14/90 ) : -VORDLE ( ka ea pasport --- f )  ( compare key with item )                    ( returnes TRUE, if NOT equals )                        ?cs: OVER HSEG ROT HKEYL SL= 0= ;                       : PORGE ( ka pasport ea1 --- ea2 f )                                                     ( seach matching key in chained list )   SWAP >R                ( f=TRUE, if found )                     BEGIN ( ka ea ) 2DUP R@ -VORDLE                                    IF ( doesn't match ) ( ka ea ) DUP R@ HNEXT ?DUP                   IF ( goto next ) SWAP DROP 0                                    ELSE ( end if chained list ) 0 -1 THEN                       ELSE ( matches ) -1 -1                                          THEN                                                         UNTIL R> DROP ROT DROP ;                                       -->                                                                                                                            \ Hash: VOLDI HF HASH HCOUNT                         09/14/90 ) : VOLDI ( ka pasport --- k' )                                      0 SWAP HKEYL 2 PICK + ROT                                       DO I H@ XOR 2 +LOOP ABS ;                                    : HF ( ka pasport --- ea )                                              ( hash function: returns item location )                   SWAP OVER VOLDI OVER H#CELL MOD                                 SWAP HILEN * ;                                               : HASH ( ka pasport --- ea f )                                          ( main word to search in hash table )                      OVER OVER HF PORGE ;                                         : HCOUNT ( pasport --- seg len )                                   DUP HSEG SWAP HLEN ;                                          -->                                                                                                                                                                                            \ Hash: ALGARV                                       09/14/90 ) : ALGARV ( n --- n1 ; n1 = min. prime >= 1.2n )                  DUP 5 / + 1 OR                                                  BEGIN ( n1 )                                                      DUP 3 / 1+ 3                                                    ?DO ( n1 )                                                          DUP I MOD 0=                                                    IF                                                                 0 LEAVE                                                      THEN                                                        2 +LOOP                                                         ?DUP 0= ( n1 f )                                              WHILE                                                             2+                                                            REPEAT ;                                                        -->                                                            \ Hash: HFULL MEMHASH                                09/14/90 ) : HFULL ( pass --- )                                             CR BODY> >NAME .NAME ABORT" Hash table full" ;                 : MEMHASH ( #item keylen infolen pasport --- )                   >R OVER DUP 1 AND                                               IF CR R> BODY> >NAME .NAME ABORT"  Keylen must be even!" THEN   R@ &HKEYL H!           ( #item keylen infolen )                 + $HALEN + R@ &HILEN H! ( #item )                               DUP ALGARV DUP R@ &H#CELL H! ( #item #cell )                    R@ HILEN * DUP R@ &HLEN HL!   ( #item len )                     DUP R@ &HFFL HL!              ( #item len )                     SWAP R@ HILEN * +             ( end_loc )                       DUP R@ &HEND HL!              ( end_loc )                       DUP ALLOCL DUP R> &HBASE HL!  ( end_loc seg )                   0 ROT ERASEL ;                                                                                                 -->             \ Hash: -ELEM                                        09/14/90 ) : -ELEM ( e_loc pasport --- f )                                         >R 0 SWAP R> ( 0 e_loc pasport )                                DUP HKEYL 0                                                     DO      ( 0 e_loc pasport )                                        OVER I + OVER HA@                                               IF                                                                 DROP 2DROP -1 0 0 LEAVE                                      THEN                                                         2 +LOOP                                                         2DROP ;                                                 -->                                                                                                                                                                                                                                                                                                                             \ Hash: HLEND                                        09/14/90 ) : HLEND ( e_loc pasport --- link_loc ; location of the last                                          link field in list )               DUP HILEN $HALEN - ( e_loc pasport tolink )                     >R SWAP R@ +                                                    BEGIN           ( pasport e.link_loc )                             2DUP SWAP HA@ ?DUP                                           WHILE           ( pasport e.link_loc e_loc' )                      SWAP DROP R@ + ( pasport e'.link_loc )                       REPEAT          ( pasport link_loc )                            R> DROP SWAP DROP ;                                     -->                                                                                                                                                                                                                                                                                                                             \ Hash: V@LISELEM HASHW                              09/14/90 ) : V@LISELEM ( pasport --- ext_e_loc )                                   DUP >R HFFL R@ HEND U<                                          IF                                                                 R@ HFFL R@ HILEN R> &HFFL +!                                 ELSE                                                               R> HFULL                                                     THEN ;                                                  : HASHW ( ka pasport --- e_loc )                                        >R DUP R@ HF ( ka e_loc )                                       DUP R@ -ELEM                                                    IF      ( ka e_loc )                                               R@ HLEND R@ V@LISELEM ( ka link_loc ext_e_loc )                 DUP ROT R@ HA!                                               THEN    ( ka e_loc )                                            ?cs: ROT R@ HSEG 3 PICK R> HKEYL CMOVEL ;  -->          \ Hash: TYHI                                         09/14/90 ) VARIABLE HPASS VARIABLE HEL                                     VARIABLE FEA                                                    : TYHI ( e_loc --- fe_loc ; find first free cell                                            beginning at 'e_loc' )                      BEGIN                                                              DUP HPASS @ -ELEM                                            WHILE                                                              HEL @ + HPASS @ HLEN OVER U<                                    IF                                                                 HPASS @ HFULL                                                THEN                                                         REPEAT ;                                                -->                                                                                                                                                                                             \ Hash:                                              09/14/90 ) : HAHELKOKKU ( e_loc --- )                                              DUP                                                             BEGIN                                                              DUP HPASS @ HNEXT ( he_loc e_loc e'_loc )                       ?DUP                                                            IF           ( he_loc e_loc e'_loc )                               HPASS @ DUP >R HSEG SWAP                                                  ( he_loc e_loc seg e'_loc )                           FEA @ TYHI DUP FEA !                                            R@ HSEG SWAP                                                            ( he_loc e_loc seg e'_loc seg  fe_loc )                 HEL @ CMOVEL  ( he_loc e_loc )                                  FEA @ SWAP ( he_loc fe_loc e_loc )                              HEL @ $HALEN - + ( he_loc fe_loc e.link_loc )                   R> HA!    ( he_loc ) -->                          ( Hash: HAHELKOKKU <cont.>                           09/18/90 )               FEA @ OVER U<     ( he_loc f )                                  IF                                                                 FEA @          ( he_loc e'_loc )                             ELSE                                                               0                                                            THEN                                                         ELSE         ( he_loc e_loc ; end of list )                        DROP 0                                                       THEN         ( he_loc e_loc/0 )                                 ?DUP 0=                                                      UNTIL           ( he_loc )                                      DROP ;                                                  -->                                                                                                                                                                                             \ Hash: HKOKKU                                       09/14/90 ) : HKOKKU  ( pasport --- ; Pack external lists to table )                DUP HILEN DUP HEL ! FEA !                                       DUP HPASS !                                                     HLEN 0                                                          DO                                                                 I HAHELKOKKU                                                 HEL @ +LOOP ;                                           -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Hash: HWRITE                                       09/14/90 ) HANDLE ATFILE                                                   VARIABLE PUHV                                                   : HWRITE ( ext_addr pasport --- )                                       >R ATFILE MKEXT                                                 32762 BUFFER PUHV !                                             R@ $HPLEN ATFILE LWRITE                                         R> HCOUNT 0 ( seg count 0 )                                     DO                                                                 DUP I ?cs: PUHV @ B/BUF CMOVEL                                  PUHV @ B/BUF ATFILE LWRITE                                   B/BUF +LOOP                                                     DROP ;                                                  -->                                                                                                                                                                                             \ PARAMEETRITE TABEL                                 09/18/90 ) : DARRAY CREATE 4 * HERE SWAP DUP ?ALLOT ERASE                           DOES> SWAP 2 <-L + ;                                    8 DARRAY %PARM                                                 VARIABLE %PARML  8 4 * %PARML !                                  0 %PARM CONSTANT SYMBARV                                        1 %PARM CONSTANT PRODARV                                        2 %PARM CONSTANT TERMARV                                        3 %PARM CONSTANT NTARV                                          4 %PARM CONSTANT %AXIOM                                         5 %PARM CONSTANT %CORRECT                                       6 %PARM CONSTANT %SPRARV                                        7 %PARM CONSTANT %ADLCTRL                                       -->                                                                                                                                                                                            \ Globaalsed konstandid, definitsioonid              09/18/90 ) 512      CONSTANT DIMCONST     ( MAX #SYMBOLS )                 640      CONSTANT GRAMCONST    ( MAX #PRODUCTIONS )               5 1 OR CONSTANT PR#SYMBCONST ( MAX #SYMBOLS IN PRODUCTION )                                  ( must be odd )                  ( SYMBOLI !, @ )                                                : S!  COMPILE  ! ; IMMEDIATE  : S@  COMPILE  @ ; IMMEDIATE      : S!L COMPILE  !L ; IMMEDIATE : S@L COMPILE  @L ; IMMEDIATE     ( PRODUKSIOONI NR. !, @ )                                       : P!  COMPILE ! ; IMMEDIATE  : P@  COMPILE @ ; IMMEDIATE        : P!L COMPILE !L ; IMMEDIATE : P@L COMPILE @L ; IMMEDIATE                                                                       DIMCONST  256 < 2+            CONSTANT  SYMBCONST               GRAMCONST 256 < 2+            CONSTANT  PRODCONST               PR#SYMBCONST SYMBCONST * 1+   CONSTANT  PRODLCONST                -->                                                           \ <GRAMMAR>                                          09/18/90 ) : <GRAMMAR> CREATE GRAMCONST PRODLCONST                          * HERE SWAP DUP ?ALLOT ERASE DOES> ;                           <GRAMMAR> GRAMMAR                                                                                                                  -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \ Grammatika interfeis                               09/18/90 ) SYMBCONST 1 - CONSTANT SNIHE                                    : PRVIIT ( PRODNR --- PRAD )                                        PRODLCONST * GRAMMAR + ;                                    : PES ( PRAD --- X1 )                                               SYMBCONST 1+ + S@ ;                                         : P# ( PRAD --- N ) C@ ;                                        : PV ( PRAD --- X0 ) 1+ S@ ;                                    : COMPS SNIHE IF COMPILE 2* THEN ; IMMEDIATE                    : PI ( PRAD I --- XI )                                              COMPS + 1+ S@ ;                                             : PVIIM ( PRAD --- XN ) DUP P# 1 - PI ;                         : PRAD ( PRAD --- AD<X1> )                                          SYMBCONST 1+  + ;                                              -->                                                                                                                          \ Grammatika interfeis: PV! PI! P#!; BARRAY          09/18/90 ) : PV! ( X0 PRAD --- ) 1+ S! ;                                   : PI! ( XI PRAD I --- )                                             COMPS + 1+ S! ;                                             : P#! ( N PRAD --- ) C! ;                                       : BARRAY CREATE HERE OVER ERASE ?ALLOT                           DOES> + ;                                                         -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ( Grammatika sisekuju trykk                          09/18/90 ) -->                                                             : PRODPUT                                                        CR DUP 3 .R ." ." PRVIIT DUP PV 3 .R ." ==>"                    DUP P# 1 DO                                                      DUP I PI 4 .R LOOP DROP ;                                     : GRAMPUT                                                        PRODARV @ 0 ?DO                                                  I PRODPUT LOOP CR ;                                           -->                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ forget UABORT                                      09/18/90 ) : forget ( nfa --- )                                                    DUP FENCE @ U< 21 ?ERROR                                        CURRENT @ CONTEXT @ <> 24 ?ERROR                                >R VOC-LINK @                                                   BEGIN R@ OVER U<                                                WHILE [COMPILE] FORTH DEFINITIONS                                     @ DUP VOC-LINK !                                          REPEAT                                                          BEGIN DUP 4 -                                                         BEGIN N>LINK @ DUP R@ U<                                        UNTIL OVER 2- ! @ ?DUP 0=                                 UNTIL R> DP ! ;                                         HEX 188 CONSTANT UABORT DECIMAL                                 -->                                                                                                                             \ To'o'fail                                          09/18/90 ) DIMCONST BARRAY LM                                              HANDLE %CTAB  %CTAB FILENAME CONSTR.WRK                         VAR %LML                                                        VAR %GENSA    VAR %GENL                                         VAR %OSYMBARV                                                     -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \ BM  M1 .. M6 ALLO SEGFREE RIDA BMSIZE              09/18/90 ) : BM ( DEF: BM XXX ; USE: XXX       --- seg )                              0 CONSTANT ;                                         BM M1   BM M2   BM M3   BM M4   BM M5   BM M6                   : ALLO ( l cfa --- )                                                    SWAP ALLOCL SWAP >BODY ! ;                              : SEGFREE ( cfa --- ) >BODY DUP @ FREEL 0 SWAP ! ;              DIMCONST 15 + 4 ->L 1 <-L CONSTANT RIDA                         DIMCONST RIDA * CONSTANT BMSIZE                                 -->                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Operatsioonid bitimaatriksitega                01/11/88 )     : @BIT ( seg nihe n --- Bit ; n=0..7 )                            >R C@L R> 8 + <-L 15 ->L ;                                    : KOHT ( i j seg --- seg nihe n ; koht Boole'i maatriksis )          SWAP ROT RIDA * OVER 3 ->L + SWAP 7 AND ;                  : 1!BIT ( seg ad n --- )                                         SWAP >R 128 SWAP ->L OVER R@ C@L OR SWAP R> C!L ;              : 0!BIT ( seg ad n --- )                                         SWAP >R 128 SWAP ->L NOT OVER R@ C@L AND SWAP R> C!L ;         : BASS ( seg1 seg2 --- ; m1 -> m2 )                                    >R 0 R> 0 BMSIZE CMOVEL ;                                : BERS ( seg --- )                                                     0 BMSIZE ERASEL ;                                        : BMRL ( n --- rowl<tegelik> )                                         7 + 3 ->L ;                                               -->                                                            \ KONSTRUKTORi po~hi <lo~pp>                     01/12/88 )     : PHEXEC HIDDEN 1+                                                      BINFILE SET-FCB                                                 HERE ( first new NFA )                                          DUP BGET HERE 8 + @ OVER + !                                    DUP NAME> >BODY !                                               FORTH LATEST NAME> EXECUTE ;                            : LANG LIT" CONSTRF1BIN" PHEXEC                                        LIT" CONSTRF2BIN" PHEXEC                                        LIT" CONSTRF3BIN" PHEXEC ;                               : SERVICE LIT" SERVICE BIN" PHEXEC ;                            ( 21 LOAD-USING SERVICE )                                       SAVE CONSTR                                                              ;S                                                                                                                                                                                     \ DEB"                                           10/14/87 )     : DEB" [COMPILE] ." COMPILE .STACK COMPILE KEY COMPILE DROP ;     IMMEDIATE                                                     -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Metatranslaator: ERROW ERR." SYNTERR           12/08/87 )     HERE CONSTANT OVERLAY                                           : OV+ OVERLAY + ;                                               : OV- OVERLAY - ;                                               : ERROW SHOW-ERROR ;                                            (       BLK @ ?DUP IF DUP B/SCR / CR                              ." SCR # " . BLOCK ELSE TIB THEN                               >IN @ 2 - C/L /MOD C/L * ROT + CR                               OVER 2+ TYPE CR HERE C@ - 1+ SPACES                             ASCII ^ EMIT ; )                                               : ERRPRE CR REVERSE ;                                           : ERRPOST REVERSE-OFF ERROW ABORT ;                             : ERR." COMPILE ERRPRE [COMPILE] ." COMPILE ERRPOST ; IMMEDIATE : SYNTERR ERR." ?syntax?" ;                                     : F1ABORT OVERLAY forget 0 UABORT ! ABORT ;                                                 -->                                 \ Metalex: EXITLEX AUTOM ASTATE AROW             12/07/87 )     : EXITLEX R> R> R> R> 8 0 DO DROP                                LOOP ;                                                         VAR LATAUT VAR LATROW                                           : CREAUTOM HERE LATAUT ! [COMPILE] ' OV- , SWAP DUP ,                          5 * ?ALLOT HERE LATROW ! 4 * ?ALLOT ;            : ASTATE ( N M --- )                                             LATAUT @ 2 + @ 2 PICK  >                                        IF SWAP 5 * LATAUT @ 4 + + [COMPILE] ' OV- OVER !                  LATROW @ OV- OVER 2+ ! 4 + C!                                ELSE ERROW THEN ;                                              : AROW ( K Y --- ) LATROW @ ROT OVER C!                          SWAP OVER 1+ C! [COMPILE] ' OV- SWAP                            2+ ! 4 LATROW +! ;                                             VAR LEXAUT VAR METAUT                                           -->                                                             \ Metalex: TRTAB GETCH TRCH                      10/06/87 )     HEX 100 BARRAY TRTAB                                            30 TRTAB A FD FILL 41 TRTAB 1A FE FILL 61 TRTAB 1A FE FILL      DECIMAL                                                         VARIABLE LO                                                     VARIABLE #CH VARIABLE LEXST                                     : GETCH #CH C@ DUP HERE C@ > 0=                                  IF HERE + C@ DUP ASCII a > OVER ASCII z < AND                     IF 32 -                                                         THEN 1 #CH +!                                                 ELSE DROP 0 THEN ;                                             : TRCH GETCH DUP TRTAB C@ ?DUP                                    IF SWAP DROP THEN ;                                           -->                                                                                                                                                                                             \ Metalex: LEXINT                                12/07/87 )     : LEXINT ( Leksika interpretaator )                              LEXAUT @ OV+ 0 LEXST !                                          BL WORD DROP 1 #CH !                                            BEGIN LEXST @ OVER 2+ @ OVER >                                     IF 5 * OVER 4 + + DUP @ OV+ EXECUTE SWAP                           DUP 2+ @ OV+ SWAP 1 SWAP 4 + C@ 0                               DO DROP 2DUP C@ SWAP OVER = SWAP 255 =                             IF 2 PICK                                                          IF -1 ELSE 0 THEN OR                                         THEN                                                            IF DUP 2+ @ OV+ EXECUTE DUP 1+ C@ DUP 255 =                        IF EXITLEX THEN LEXST ! 0 LEAVE                              ELSE 4 + 1 THEN                                               LOOP IF SYNTERR THEN 2DROP                                  ELSE ABORT THEN AGAIN ; -->                                 \ Metalex: LOOKUP WTAB                           12/04/87 )     VAR WTAB                                                        : LOOKUP WTAB @ OV+ HERE SWAP 2+ -1 OVER 2 - @ 0                 DO DROP OVER C@ OVER C@ =                                          IF 2DUP DUP C@ 1+ S= 0=                                            IF DUP C@ 2+ + 1                                                ELSE DUP C@ 1+ + C@ LO ! DROP 0 LEAVE                           THEN                                                         ELSE DUP C@ 2+ + -1                                             THEN                                                         LOOP IF ERR." Unknown Word" THEN ;                             : CREWTAB ( N --- ) DUP , 0                                               DO BL WORD C@ 1+ ALLOT BL WORD NUMBER DROP C,                   LOOP ;                                                -->                                                                                                                             \ Metalex: RESWC KOODID GETBACK OVERCOMM         12/04/87 )     HERE OV- WTAB !                                                 17 CREWTAB                                                      =DEF= 1  =COMMENT= 2  =MARKED= 3                                =END= 4  = 5  ==> 5 ::= 5 / 6 ; 7                               . 7 --> 8  # 10 #POST 10 #PRE 17 #REG 18 #PERM 19               =TOKEN= 22                                                      9  CONSTANT MID                                                 11 CONSTANT STRING 12 CONSTANT [I]                              13 CONSTANT [C]    14 CONSTANT [D]                              15 CONSTANT KW      0 CONSTANT BLEND                            16 CONSTANT [O]    20 CONSTANT [H]    21 CONSTANT [A]           23 CONSTANT UTOK ( user-defined token )                         : GETBACK >IN @ HERE C@ 1+ - >IN ! ;                            : OVERCOMM GETBACK ASCII ) WORD BL WORD 2DROP                    1 #CH ! ; -->                                                  \ Metalex: ?LAST GETMID/I/C/D/O/KW/BLEND  NOP    09/21/87 )     : ?LAST HERE C@ #CH C@ < 0= IF                                    SYNTERR THEN ;                                                : GET* LO ! ;                                                   : GETMID MID GET* ;          : GETI [I] GET* ;                  : GETC [C] GET* ;            : GETD [D] GET* ;                  : GETO [O] GET* ;            : GETBLEND BLEND GET* ;            : GETSTR STRING GET* ;       : GETH [H] GET* ;                  : GETA [A] GET* ;                                               : GETKW HERE DUP C@ + C@ ASCII ' =                                IF KW GET*                                                      ELSE SYNTERR THEN ;                                           : NOP ;                                                         : GETUTOKEN ?LAST UTOK GET* ;                                   -->                                                                                                                             \ Metaleksika automaat                           12/04/87 )     7 27 CREAUTOM LEXINT                                             HEX                                                                          0 6 ASTATE TRCH                                   0       0FF AROW GETBLEND   0FE       1 AROW NOP                ASCII ' 0FF AROW GETKW      ASCII (   0 AROW OVERCOMM           ASCII [   2 AROW NOP        0FF     0FF AROW LOOKUP                           1 3 ASTATE TRCH                                   0FE       1 AROW NOP        0FD       1 AROW NOP                0       0FF AROW GETMID                                                       2 8 ASTATE GETCH                                  ASCII I   3 AROW GETI       ASCII C   3 AROW GETC               ASCII D   3 AROW GETD       ASCII O   3 AROW GETO               ASCII H   3 AROW GETH       ASCII A   3 AROW GETA               ASCII ] 0FF AROW SYNTERR    0FF       4 AROW NOP                -->                                                             \ Metaleksika automaat                           12/04/87 )                    3 2 ASTATE GETCH                                 ASCII ] 0FF AROW ?LAST          0FF   4 AROW NOP                               4 3 ASTATE GETCH                                 ASCII S   5 AROW GETSTR     ASCII ] 0FF AROW GETUTOKEN              0FF   4 AROW NOP                                                           5 2 ASTATE GETCH                                 ASCII ] 0FF AROW SYNTERR        0FF   6 AROW NOP                               6 2 ASTATE GETCH                                 ASCII ] 0FF AROW ?LAST          0FF   6 AROW NOP                 DECIMAL                                                        LATAUT @ OV- LEXAUT !                                                    -->                                                                                                                                                                                                                                                    \ Metategevused: BEGDELIM ENDDELIM  0IMM         10/31/87 )     VARIABLE LEXCL                                                  : BEGDELIM ( nfa --- addr l )                                    2+ DUP DUP ASCII S TOBYTE SWAP - ;                             : ENDDELIM ( nfa --- addr l )                                    2+ ASCII S TOBYTE 1+ DUP DUP ASCII ] TOBYTE SWAP - ;           : 0IMM ( nfa --- ) DUP C@ 191 AND SWAP C! ;                     -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Metategevused: PROCSTR                         10/31/87 )     : PROCSTR ( NFA ALEX1 --- ALEX2 )                                 OVER DUP 1+ C@ ASCII [ =                                        IF NAME> >BODY S@ OVER S! SYMBCONST + OVER ENDDELIM                DUP 3 PICK C! HERE LEXCL @ - 3 PICK 1+ !                        HERE SWAP DUP ?ALLOT CMOVE                                      SWAP DUP 0IMM DUP N>LINK                                        SWAP DUP BEGDELIM DUP 2+ 3 PICK C! + ASCII ' SWAP C!            DUP 128 TOGGLE                                                  ASCII ' OVER 1+ C! N>LINK                                       5 SYMBCONST + CMOVE 3 +                                      ELSE DROP SWAP DROP                                             THEN ;                                                          -->                                                                                                                                                                                           \ Metategevused: HLEX LISAKOKKU                  10/14/87 )     14 CONSTANT LEXLEN                                              6  CONSTANT LEXKEYLEN                                           LEXKEYLEN SYMBCONST + CONSTANT $LEXAPPEND                       SET HLEX                                                        -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Hash lexems                                        09/18/90 ) : LISAKOKKU                                                      HLEX HILEN DUP FEA ! HEL ! HLEX HPASS !                         HLEX HFFL 0                                                     DO                                                                 I ( e_loc ) HLEX HA@ 255 AND                                    IF                                                                 I $LEXAPPEND + HLEX HA@ ( a_loc ) ?DUP                          IF                                                                 HLEX HSEG SWAP OVER ( seg a_loc seg )                           FEA @ TYHI DUP FEA ! ( seg a_loc seg fe_loc )                   HEL @ $HALEN - CMOVEL                                           FEA @ I $LEXAPPEND + HLEX HA!                                THEN                                                         THEN                                                         HEL @ +LOOP ; -->                                              \ Metategevused: L1PAISK PAISKNOOL               10/14/87 )     : L1PAISK ( nfa --- ) DUP 1+ C@ ASCII ' =                        IF HERE LEXLEN BLANK                                               DUP 2+ OVER C@ 31 AND 2 - HERE SWAP CMOVE                       HERE HLEX HASHW                                                 LEXKEYLEN + ( nfa el.seos )                                     OVER NAME> >BODY S@                                             OVER HLEX HA! SYMBCONST +                                       SWAP C@ 31 AND LEXKEYLEN 2+ - 0>                                IF ( el.seos ) HLEX V@LISELEM DUP >R                               ?cs: HERE LEXKEYLEN + HLEX HSEG R> 1+                            LEXLEN LEXKEYLEN - CMOVEL                                   ELSE 0                                                          THEN SWAP HLEX HA!                                           ELSE DROP THEN ;                                               -->                                                             \ Metategevused: LPAISK                          10/13/87 )     ( : PAISKNOOL LIT" -->   " 1+ HLEX HASHW LEXKEYLEN +                 TERMARV @ HLEX HSEG ROT S!L ; )                            : LPAISK TERMARV @ LEXKEYLEN                                     SYMBCONST $HALEN + HLEX MEMHASH LATEST                          BEGIN ?DUP                                                      WHILE DUP NAME> >BODY S@ TERMARV @ <                               IF DUP L1PAISK                                                  THEN N>LINK @                                                REPEAT ( PAISKNOOL ) LISAKOKKU HLEX HKOKKU                      LIT" HLX" HLEX HWRITE HLEX HSEG FREEL ;                        -->                                                                                                                                                                                                                                                                                                                             \ Metategevused: EDGRAM S, BSYMB                 10/06/87 )     VAR NTVAHE                                                      : EDGRAM NTARV @ TERMARV @ - NTVAHE !                           PRODARV @ 0                                                     DO I PRVIIT DUP P# 0                                              DO DUP I PI DUP TERMARV @ < 0=                                    IF NTVAHE @ - OVER I PI!                                        ELSE DROP                                                       THEN                                                          LOOP DROP                                                     LOOP ;                                                          : S, HERE S! SYMBCONST ?ALLOT ;                                 : BSYMB ( S --- )                                                ?EXEC build S, 0 C, ;                                            -->                                                                                                                           \ Metategevused: SYMBOL SYMBOLS SYMB? NEWSYMB    12/14/87 )     : SYMBOL BL WORD DROP BSYMB ;                                   VOCABULARY SYMBOLS SYMBOLS DEFINITIONS                          DIMCONST 1 - SYMBOL $0                                          LATEST OV- FORTH DEFINITIONS CONSTANT NAME$0                    VOC-LINK @ OV- CONSTANT SYMVOC                                  HEX 321 CONSTANT findcfa DECIMAL                                : SYMB? ( --- S TF / --- FF )                                     -1 LATEST HERE findcfa EXECUTE ( NB! find YLE DEF-TUD )         IF >BODY S@ 1                                                   ELSE 0 THEN ;                                                 DIMCONST ARRAY CTAB                                             : NEWSYMB ( S --- )                                              DUP CTAB HERE SWAP ! BSYMB ;                                   VAR CURPR VAR CURS VAR SEMF VAR #STR  VAR CURNT  -->                                                                            \ Metategevused: SETSEM                          12/08/87 )     32 CONSTANT TEXLEN                                              VAR POSTTEXT  TEXLEN          ?ALLOT                            VAR PRETEXT   TEXLEN          ?ALLOT                            VAR REGNAME   TEXLEN          ?ALLOT                            VAR PERMFIELD PR#SYMBCONST 1+ ?ALLOT                            : SETSEM ( adr mask --- )                                               SEMF @ OR SEMF !                                                ASCII # WORD DUP C@ DUP TEXLEN >                                IF                                                        ERR." Too long Semantic Text. Ending '#' maybe lack."                 ELSE ROT SWAP 1+ CMOVE                                          THEN ;                                                  -->                                                                                                                                                                                             \ Metategevused: SETPOST/PRE/REG/PERM GETNUMB    12/08/87 )     : SETPOST POSTTEXT 1 SETSEM ;                                   : SETPRE  PRETEXT  2 SETSEM ;                                   : SETREG  REGNAME  4 SETSEM ;                                   : GETNUMB ( --- k/0 )                                                   BL WORD 1+ C@ ASCII # =                                         IF 0                                                            ELSE 0.0 HERE CONVERT DUP C@ BL -                                  IF ERR." Illegal character in Permutation"                      ELSE 2DROP                                                      THEN                                                         THEN ; -->                                                                                                                                                                                                                                                                                                              \ Metategevused: SETPERM                         12/14/87 )     : SETPERM 0                                                      BEGIN GETNUMB ?DUP                                              WHILE SWAP 1+ DUP CURS @ >                                         IF ERR." Too long Permutation"                                  THEN SWAP DUP CURNT @ >                                         IF ERR." Illegal Permutation"                                   THEN OVER PERMFIELD + C!                                     REPEAT PERMFIELD C! 8 SEMF @ OR SEMF ! ;                       -->                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Metategevuseed: MOVESTR SEMWRITE               09/28/87 )     : MOVESTR ( to from --- endto )                                  OVER OVER C@ 1+ CMOVE DUP C@ 1+ + ;                            : SEMWRITE SEMF @ DUP                                             IF HERE C! HERE 2+ POSTTEXT MOVESTR PRETEXT MOVESTR                REGNAME MOVESTR PERMFIELD MOVESTR                               HERE 2+ - DUP HERE 1+ C! 2+                                  ELSE HERE ! 2                                                   THEN HERE SWAP ATFILE LWRITE ; -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \ Metategevused: ERASEM LEFT NEXTR               12/14/87 )     : ERASEM  SEMF @                                                 IF 0 SEMF ! POSTTEXT TEXLEN 1+ ERASE PRETEXT TEXLEN 1+ ERASE       REGNAME TEXLEN 1+ ERASE                                         PERMFIELD PR#SYMBCONST 1+ ERASE                              THEN ;                                                         : LEFT PRODARV @ DUP GRAMCONST <                                 IF PRVIIT DUP CURPR ! PV! 1 CURS ! 0 CURNT !                       1 PRODARV +! ERASEM                                          ELSE ERR." Too many rules" THEN ;                              : NEXTR ( S --- )                                                CURPR @ CURS @ DUP 1+ PR#SYMBCONST > 0=                         IF 2 PICK NTARV @ >                                                IF 1 CURNT +! THEN PI! 1 CURS +!                             ELSE ERR." Too long Rule" THEN ;                                  -->                                                          \ Metategevused: ENDRULE MAHUB? NEWNT NEWT SETAX SETM04/04/91 ) : ENDRULE                                                        SEMWRITE CURS @ CURPR @ P#! ;                                  : MAHUB? NTARV @ TERMARV @ > 0=                                  IF ERR." Too many symbols" THEN ;                              : ?NEWNT SYMB? 0=                                                IF MAHUB? NTARV @ DUP NEWSYMB -1 NTARV +!                       THEN ;                                                         : -IMM ( nfa --- f ) C@ 64 AND ;                                : ?NEWT ( --- s )                                                SYMB? 0=                                                        IF MAHUB? TERMARV @ DUP NEWSYMB 1 TERMARV +!                    THEN ;                                                         : SETAX ?NEWNT DUP %AXIOM ! DIMCONST 1 -                         LEFT 0 NEXTR  NEXTR 0 NEXTR ENDRULE ;                          : SETMID ?NEWNT NEXTR ;  -->                                    \ Metategevused: I/C/A/D/O/HKOOD SET*/I/C/D/O/H/A ...04/04/91 ) VARIABLE IKOOD VARIABLE CKOOD  VARIABLE AKOOD                   VARIABLE DKOOD VARIABLE OKOOD  VARIABLE HKOOD                   : SET* ?NEWT DUP ROT ! NEXTR ;                                  : SETI IKOOD SET* ;         : SETC CKOOD SET* ;                 : SETD DKOOD SET* ;         : SETO OKOOD SET* ;                 : SETH HKOOD SET* ;         : SETA AKOOD SET* ;                 : SETKW HERE C@ LEXLEN 2+ >                                       IF REVERSE ." *** Only " LEXLEN . ." characters regard"            REVERSE-OFF ERROW                                               LEXLEN 2+ HERE C! ASCII ' HERE LEXLEN 2+ + C!                THEN ?NEWT NEXTR ;                                            : DEFUTOK ?NEWT DROP ;                                          : SETUTOK ?NEWT NEXTR ;                                         -->                                                                                                                             \ Metategevused: NEWRIGHT SETLEFT SETCOM         09/28/87 )     : SETSTR SYMB?                                                    IF ?DUP 0= IF ERR." String redefines Comment"                              ELSE DUP CTAB @ -IMM 0=                                            IF ERR." String redefines Symbol"                               THEN                                                         THEN                                                 ELSE MAHUB? TERMARV @ DUP NEWSYMB                                    IMMEDIATE 1 #STR +! 1 TERMARV +!                           THEN NEXTR ;                                                  : NEWRIGHT ENDRULE CURPR @ PV LEFT ;                            : SETLEFT ?NEWNT LEFT ;                                         -->                                                                                                                                                                                                                                                             \ Metategevused: ADDLM WLM -IMM STRLEXCL         10/08/87 )     : SETCOM SYMB?                                                   IF                                                                 IF ERR." Comment redefines String/Symbol"                       ELSE ERR." Duplicate Comment"                                   THEN                                                         ELSE 0 NEWSYMB IMMEDIATE 1 #STR +!                              THEN ;                                                         VAR #LM                                                         : ADDLM SYMB? IF LM DUP C@                                                      IF ERROW ." Previously marked"                                  THEN 1 SWAP C! 1 #LM +!                                       ELSE ERR." Symbol not found" THEN ;               -->                                                                                                                                                                                             \ Metategevused: WLEXL REPLNT                    09/28/87 )     : STRLEXCL ( AL --- ) LATEST                                     BEGIN ?DUP                                                      WHILE DUP -IMM                                                     IF DUP ROT PROCSTR SWAP THEN N>LINK @                        REPEAT DROP ;                                                  : WLEXCL                                                         LIT" LCL" ATFILE MKEXT                                          LEXCL @ HERE OVER - ATFILE LWRITE                               ATFILE CLOSE-FILE ?DISCERR ;                                   : REPLNT NTARV @ 1+ DUP NTARV !                                  TERMARV @ DIMCONST NTARV @ - OVER + SWAP                        DO ( ONT ) DUP CTAB @ DUP I CTAB ! NAME> >BODY I SWAP S!           DUP LM C@ I LM C! 0 OVER LM C! 1+                            LOOP EDGRAM NTARV @ - NTARV ! ;                                   -->                                                          \ Metategevused: WOSTAB REDIG                    10/08/87 )     VAR SBAAS VAR SNAME  VAR SYML                                                                                                   : WOSTAB ( Kirjutab symbolite ja koodide tabeli )                  LIT" CDE" ATFILE MKEXT 0 CTAB SYMBARV @ 2* ATFILE LWRITE        LIT" SYM" ATFILE MKEXT SBAAS @ SYML @ ATFILE LWRITE ;                                                                        : REDIG ( AD --- ; bitid maha )                                    DUP C@ 31 AND OVER OVER SWAP C!                                 + DUP C@ 127 AND SWAP C! ;                                                                                                   -->                                                                                                                                                                                                                                                                                                                             \ Metategevused: STAB                            11/14/87 )     : STAB ( Moodustab symbolite tabeli )                            0 0 CTAB !                                                      HERE SBAAS ! 0 C, SYMBARV @ 1                                   DO HERE SNAME !                                                    I CTAB @ DUP C@ 31 AND 1+ DUP ?ALLOT                            SNAME @ SWAP CMOVE                                              SNAME @ DUP REDIG SBAAS @ - I CTAB ! I S,                    LOOP SYMBARV @ %OSYMBARV !                                      HERE SBAAS @ - SYML ! WOSTAB SBAAS @ DP ! ;                    -->                                                                                                                                                                                                                                                                                                                                                                                             \ Metategevused: MARK MARKNT                     09/28/87 )     : MARK ( S M --- )                                               SWAP CTAB @ NAME> >BODY SYMBCONST + DUP C@ ROT                  OR SWAP C! ;                                                   : MARKNT PRODARV @ 0                                             DO I PRVIIT DUP PV 1 MARK DUP P# 1                                DO DUP I PI DUP TERMARV @ < 0=                                    IF 2 MARK                                                       ELSE DROP THEN                                                LOOP DROP                                                     LOOP ;                                                         -->                                                                                                                                                                                                                                                                                                                             \ Metategevused: ERRFL  GRAMKONTR                10/06/87 )     VARIABLE ERRFL                                                  : GRAMKONTR                                                      0 ERRFL ! MARKNT SYMBARV @ 1 - TERMARV @                        DO I CTAB @ DUP NAME> >BODY SYMBCONST + C@ 3 AND DUP 3 =           IF DROP                                                         ELSE CR ." Nonterminal " OVER .NAME ."  not found in " 1 =         IF   ." right"                                                  ELSE ." left"                                                   THEN ."  part" 1 ERRFL !                                     THEN DROP                                                    LOOP ERRFL @                                                    IF ABORT THEN ;                                                -->                                                                                                                                                                                             \ Metategevusedeta: ALGV                                     12/14/87 )     : ALGV INITMEM [COMPILE] FORTH DEFINITIONS                       0 CTAB DIMCONST 2* ERASE                                        NAME$0 OV+ DUP DIMCONST 1 - CTAB !                              SYMVOC OV+ DUP VOC-LINK ! 2- !                                  SYMBOLS DEFINITIONS 0 PRODARV !                                 DIMCONST 2 - NTARV ! 1 TERMARV !                                GRAMMAR GRAMCONST PRODLCONST * ERASE ;                         -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Meta: SETNEXTBL NEWBL EXITMET                  10/01/87 )     : SETNEXTBL [COMPILE] --> BLK @ B/SCR / . ;                     : NEWBL BLK @                                                    IF 1 BLK +! 0 >IN ! BLK @                                          B/SCR MOD 0=                                                    IF ERR." Grammar not ended"                                     THEN                                                         ELSE CR QUERY THEN ;                                           : EXITMET R> R> R> R> 7 0 DO                                      DROP LOOP ;                                                   VARIABLE METST                                                  -->                                                                                                                                                                                                                                                                                                                             \ Meta: METINT                                   12/07/87 )     : METI METAUT @ OV+                                              BEGIN                                                                 METST @ OVER 2+ @ OVER >                                   IF 5 * OVER 4 + + DUP @ OV+ EXECUTE LO C@ ?DUP 0=                  IF DROP NEWBL                                                   ELSE 8 =                                                           IF DROP SETNEXTBL                                               ELSE DUP 2+ @ OV+ SWAP -1 SWAP 4 + C@ 0                                 DO DROP DUP C@ LO C@ OVER = SWAP 255 = OR                          IF DUP 2+ @ OV+ EXECUTE DUP 1+ C@ DUP 255 =                        IF EXITMET THEN METST ! 0 LEAVE                              ELSE 4 + -1 THEN                                             LOOP IF SYNTERR THEN DROP THEN THEN               ELSE ABORT THEN AGAIN ; -->                                                                                                   \ Meta: MSTATE  META-automaat <ALGUS>                04/04/91 ) : MSTATE ( N M --- )  LATAUT @ 2 + @                            2 PICK > IF SWAP 5 * LATAUT @ 4 + +                             ['] LEXINT OV- OVER ! LATROW @ OV- OVER                         2+ ! 4 + C! ELSE ERROW THEN ;                                   12 57 CREAUTOM METI                                                              0 1 MSTATE                                      1 1 AROW NOP   ( =DEF= )                                                        1 1 MSTATE                                     MID 2 AROW SETAX                                                                 2 4 MSTATE                                     MID  3 AROW SETLEFT            2   9 AROW NOP    ( =COMMENT= )    3  8 AROW NOP  ( =MARKED= ) 22  10 AROW NOP    ( =TOKEN= )               -->                                                                                                                                                                                  \ META <j@rg>                                        04/04/91 )                  3  1 MSTATE                                     5 4 AROW NOP   ( ==> )                                                          4 10 MSTATE                                    MID    5 AROW SETMID  [I]   5 AROW SETI                         KW     5 AROW SETKW   [C]   5 AROW SETC                         STRING 5 AROW SETSTR  [D]   5 AROW SETD                         [O]    5 AROW SETO    [H]   5 AROW SETH                         [A]    5 AROW SETA    UTOK  5 AROW SETUTOK                                       5 11 MSTATE                                    MID 5 AROW SETMID  [O]      5 AROW SETO                         [I] 5 AROW SETI    KW       5 AROW SETKW                        [C] 5 AROW SETC    STRING   5 AROW SETSTR                       [D] 5 AROW SETD    [H]      5 AROW SETH                         [A] 5 AROW SETA    UTOK     5 AROW SETUTOK                      255 6 AROW GETBACK -->                                          \ META <j@rg>                                        04/04/91 )               6  5 MSTATE                                        10   6 AROW SETPOST  17  6 AROW SETPRE                          18   6 AROW SETREG   19  6 AROW SETPERM                        255   7 AROW GETBACK                                                          7  2 MSTATE                                         6   4 AROW NEWRIGHT ( / )  7 11 AROW ENDRULE ( ; )                          8 11 MSTATE                                       MID    8 AROW ADDLM   KW    8 AROW ADDLM                        [I]    8 AROW ADDLM   [C]   8 AROW ADDLM                        STRING 8 AROW ADDLM   [D]   8 AROW ADDLM                        [O]    8 AROW ADDLM   [H]   8 AROW ADDLM                        [A]    5 AROW SETA    UTOK  8 AROW ADDLM                        4    255 AROW FINISH                                                          9  1 MSTATE                                       STRING 11 AROW SETCOM    -->                                    \ META <j@rg>                                        04/04/91 )                  10 6 MSTATE                                    UTOK  10 AROW DEFUTOK            MID  3 AROW SETLEFT               2   9 AROW NOP    ( =COMMENT= ) 3  8 AROW NOP  ( =MARKED= )     4 255 AROW FINISH ( =END= )    22 10 AROW NOP  ( =TOKEN= )                    11 4 MSTATE                                    MID  3 AROW SETLEFT            2   9 AROW NOP    ( =COMMENT= )    3  8 AROW NOP  ( =MARKED= )  4 255 AROW FINISH ( =END= )      -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Meta: QUSING LANGFILE                          09/28/87 )     LATAUT @ OV- METAUT !                                           : QUSING SCREEN-HANDLE 2+ PREV-FILE 64 CMOVE SAVE-BUFFERS        CLOSE-SCR PAD 0 INPUT-FILENAME                                  PAD 4 + OPEN-SCR EMPTY-BUFFERS                                  IF CR ." Can't find " .SCREEN-FILE CR 7 EMIT                      PREV-FILE OPEN-SCR DROP ABORT                                 THEN ;                                                         : LANGFILE                                                        CR ." Enter Translator Name " QUSING                            SCREEN-HANDLE 2+ DUP C@ 1+ ATFILE DROP 4 + SWAP CMOVE ;        -->                                                                                                                                                                                                                                                                                                                            \ Meta: TMET                                     09/30/87 )     7 CONSTANT ALGEKR                                               : TMET                                                            [ ' F1ABORT OV- ] LITERAL OV+ UABORT !                          LANGFILE LIT" SEM" ATFILE MKEXT                                 0 METST ! ALGV ALGEKR B/SCR * BLK !                             0 >IN !                                                         CR ." Translate Grammar Text "                                  CR ." on Scr # " ALGEKR .                                       METI                                                            FLUSH PREV-FILE OPEN-SCR DROP                                   0 UABORT ! OVERLAY forget ;                                                                                                                                                                                                                                                                                                   \ OVERLAY F2ABORT                                01/12/88 )     HERE CONSTANT OVERLAY                                                                                                           : F2ABORT OVERLAY forget 0 UABORT ! ABORT ;                                                                                     -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ LNX PLUS                                       10/08/87 )        VARIABLE LNX  ( REA INFOOSA PIKKUS BAITIDES )                : PLUS ( N M1 M2 --- ) ( M1+M2 -> M2 , N X N                             NURKADE JAOKS, N=1..DIMCONST )                               MAT2 ! MAT1 !                                                   DUP BMRL LNX ! 0 SWAP 0 DO                                      ( NIHE ) DUP DUP LNX @ DISJ RIDA +                              LOOP DROP ;                                               -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ KORRUTAMINE : ABIOPERATSIOONID                12/08/87 )         VARIABLE IRIDA         VARIABLE NX                              VARIABLE MSK           VARIABLE MSK2                            VARIABLE ABI   RIDA ?ALLOT                                                                                                   : @ABI ( MASK NIHE ---  ; SEGMENT ON MAT2 , SAAB LNX KA ETTE )          MAT1 @ ROT ROT MAT2 @ MAT1 !                                    RIDA ROT ROT LNX @ 0 DO                                         2 PICK 2 PICK ROT TRBYTE ABI I + C!                             LOOP DROP DROP DROP  MAT1 ! ;                           -->                                                                                                                                                                                                                                                                                                                                                                                             \ KORRUTAMINE  M1*M2 -> M2                      10/19/87 )      : MULT ( N M1 M2 --- ; M1 JA M2 ON SEGMENDID )                  MAT2 ! MAT1 ! DUP NX ! BMRL LNX ! 128 MSK C! 127 MSK2 C! NX @ 0 DO 0 IRIDA !  I 3 ->L  MSK C@ OVER @ABI  ( M2REANIHE )             NX @ 0                                                          DO  MAT2 @  ?cs: MAT2 !  OVER  ( M2RN M2 M2RN )                    IRIDA @  ABI LNX @ -CONJ                                        IF OVER OVER C@L MSK C@ OR                                      ELSE OVER OVER C@L MSK2 C@ AND                                  THEN 2 PICK  ROT C!L  MAT2 ! RIDA + RIDA IRIDA +!            LOOP DROP  MSK C@ 1->CYK MSK C!                                 MSK2 C@ 1->CYK MSK2 C!                                       LOOP ; -->                                                                                                                                                                                                                                                      \ TRANS - J.P.                                   12/08/87 )     VARIABLE JRIDA                                                  : TRANS ( N MAD --- ; MAD ON SEGMENT; TULEMUS SAMAL KOHAL !!! )     DUP MAT1 ! MAT2 ! DUP NX ! BMRL LNX !                           NX @ 0 DO  I  ( I )                                               NX @ 0 DO                                                         I OVER MAT1 @ KOHT @BIT  IF                                       DUP RIDA * I RIDA * LNX @ DISJ                                THEN                                                          LOOP DROP                                                     LOOP ;                                                       -->                                                                                                                                                                                                                                                                                                                            \ BPR , TRANSPON                                 10/19/87 )     ( : BPR ( N MAD --- ) ( N X N NURGA TRYKK MAATRIKSIST                                 MQQTMEGA DIMCONST )                       (      OVER 0 DO ?TERMINAL IF BEGIN ?TERMINAL                          UNTIL THEN CR I 2 PICK 0 DO DUP                                 I 3 PICK KOHT @BIT . LOOP DROP LOOP                             DROP DROP CR ; )                                          VARIABLE NIHE1   VARIABLE NIHE2                                : TRANSPON ( N M1 M2 ---  ; T[M1]->M2 )                         MAT2 ! MAT1 ! BMRL LNX ! 128 MSK C! 0 NIHE1 !  0 NIHE2 !        LNX @ 0                                                         DO 8 0                                                             DO NIHE1 @ LNX @ 0                                                 DO RIDA MSK C@ ROT TRBYTE MAT2 @ NIHE2 @ I + C!L                LOOP DROP MSK C@ 1->CYK MSK C! RIDA NIHE2 +!                 LOOP 1 NIHE1 +! LOOP ; -->                                   \ EPSTMULT CHLM  { RLM , WLM }                   10/13/87 )     : EPSTMULT ( MAD --- )                                                MAT1 ! SYMBARV @ 0 DO I SYMBARV @                               TERMARV @ DO DUP I MAT1 @ KOHT 0!BIT                            LOOP DROP LOOP ;                                          : CHLM ( --- ; KASUTATAKSE SQNA CHPAR KOOSSEISUS  ! ! ! )             PRODARV @ PRVIIT DUP P# 1 DO DUP I PI LM C@ IF                  1 OVER PV LM C! LEAVE THEN                                      LOOP DROP ;                                                -->                                                                                                                                                                                                                                                                                                                                                                                                                                                            \ ALPHA,LAMBDA                                   10/13/87 )     : ALPHA  ( M --- )  DUP BERS                                    MAT1 ! PRODARV @ 0 DO                                            I PRVIIT DUP DUP P# 2 > IF P# 1 - 1 DO                           DUP I PI OVER I 1 + PI MAT1 @                                   KOHT 1!BIT LOOP ELSE DROP THEN  DROP                          LOOP ;                                                          : LAMBDA ( M --- )  DUP BERS                                    MAT1 ! PRODARV @ 0 DO                                            I PRVIIT DUP PV SWAP PES MAT1 @                                 KOHT 1!BIT LOOP ;                                                 -->                                                                                                                                                                                                                                                                                                                          \ ROO TFLAG FFLAG CALC                           01/20/88 )     : ROO ( M --- )  DUP BERS                                       MAT1 ! PRODARV @ 0 DO                                            I PRVIIT DUP PVIIM SWAP PV MAT1 @                               KOHT 1!BIT LOOP ;                                                VARIABLE TFLAG       VARIABLE FFLAG                           : SETFLAGS  1 TFLAG ! 1 FFLAG ! ;                               : CALC ( --- )                                                  M3 ALPHA M1 LAMBDA SYMBARV @ M1 TRANS M1 M4 BASS                SYMBARV @ M3 M1 MULT ;                                           -->                                                                                                                                                                                                                                                                                                                                                                                            \ CALC2 , FINDXY                                 10/19/87 )     : CALC2 ( --- )                                                 M2 ROO SYMBARV @ M2 TRANS M3 M5 BASS                            SYMBARV @ M1 M5 PLUS M5 M6 BASS                                 SYMBARV @ M2 M5 MULT M5 M2 BASS                                 M3 M5 BASS M4 M3 BASS ;                                         : FINDXY ( X Y --- PRAD/0 ) 0 ROT ROT PRODARV @ 0               DO I PRVIIT DUP P# 2 >                                             IF DUP P# 1 - 1                                                    DO 2 PICK OVER I PI =                                              IF OVER OVER I 1+ PI =                                             IF ROT ROT 3 ROLL DROP 2 PICK LEAVE                       THEN THEN LOOP                                               THEN 3 PICK                                                     IF DROP LEAVE THEN DROP                                      LOOP DROP DROP ; -->                                            \ CURGEN  CHPAR                                  10/19/87 )     VAR CURGEN                                                      : CHPAR ( --- )                                                 CURGEN @ %CTAB INITSA                                           PRODARV @ PRVIIT PRODLCONST DUP CURGEN +! %CTAB LWRITE          CHLM SYMBARV @ 1+ DUP DIMCONST >                                IF ." Too many new Symbols" ABORT                               THEN                                                            SYMBARV ! NTARV @ 1+ NTARV ! PRODARV @ 1+ DUP GRAMCONST >       IF ." Too many new Rules" ABORT                                 THEN                                                            PRODARV ! CR ." New Symbol " SYMBARV @ 1- . ."  added " ;          -->                                                                                                                                                                                                                                                          \ STPREF                                         10/19/87 )     : STPREF ( X Y PRAD --- )                                       ( Teeb uue reegli: D -> UX ; gramma+ika parameetreid EI muuda ) DUP 0=                                                          IF 3DROP                                                        ELSE PRODARV @ PRVIIT OVER P# 1 - 1                                DO 3 PICK 2 PICK I PI =                                            IF 2 PICK 2 PICK I 1+ PI =                                         IF SYMBARV @ OVER 1+ S! 1 OVER C! I 1+ 1                           DO DUP C@ 1+ OVER C!                                               OVER I PI OVER I SNIHE <-L + 1+ S!                           LOOP LEAVE                                                   THEN                                                         THEN                                                         LOOP 4DROP                                                   THEN ; -->                                                      \ STSUF                                          10/19/87 )     VARIABLE MX                                                     : STSUF ( X Y PRAD --- )                                        ( Teeb uue reegli: D -> YV ; grammatika parameetreid EI muuda ) DUP 0=                                                          IF 3DROP                                                        ELSE PRODARV @ PRVIIT OVER P# 1 - 1                                DO  3 PICK 2 PICK I PI =                                           IF 2 PICK 2 PICK I 1+ PI =                                         IF SYMBARV @ OVER 1+ S! 1 OVER C! I MX ! OVER P# I 1+              DO DUP C@ 1+ OVER C! OVER I PI OVER I MX @ -                       SNIHE <-L + 1+ S!                                            LOOP LEAVE                                                   THEN                                                         THEN                                                         LOOP 4DROP THEN ; -->                                        \ J. P. J@RG.                                    10/19/87 )     : REPSUF ( --- ) PRODARV @ PRVIIT PRODARV @ 0                   DO I PRVIIT DUP P# 2 PICK P# -  DUP 0 >                            IF OVER OVER 1+ PI 3 PICK 1 PI =                                   IF OVER OVER PI 3 PICK 1 PI M1 KOHT @BIT                           IF 0 3 PICK P# 1                                                   DO 2 PICK I 3 PICK + PI 4 PICK I PI = 0=                           IF DROP 1 LEAVE THEN                                         LOOP 0=                                                         IF 2 PICK 0 PI 2 PICK 2 PICK 1+ SNIHE <-L + 1+ S!                  2 PICK P# 2 >                                                   IF DUP 2 + 2 PICK C! OVER P# OVER 2 +                              OVER OVER >                                                     IF  DO 0 2 PICK I SNIHE <-L + 1+ S! LOOP                        ELSE DROP DROP THEN                              THEN THEN THEN THEN THEN DROP DROP     LOOP DROP ;     -->   \ REPPREF                                        10/19/87 )     : REPPREF ( --- ) PRODARV @ PRVIIT PRODARV @ 0                  DO I PRVIIT DUP P# 2 PICK P# >                                     IF 0 2 PICK P# 1                                                   DO 2 PICK I PI 2 PICK I PI = 0=                                    IF DROP 1 LEAVE THEN                                         LOOP 0=                                                         IF ( SHABAD PRAD ) OVER 0 PI OVER 1 SNIHE <-L + 1+ S!              OVER P# 2 >                                                     IF DUP P# 2 PICK P# - 2 + 2                                        DO DUP 2 PICK P# I + 2 - PI OVER I SNIHE <-L + 1+ S!            LOOP  DUP P# DUP 3 PICK P# - 2 +                                DO 0 OVER I SNIHE <-L + 1+ S!                                   LOOP DUP P# 2 PICK P# - 2 + OVER C!                    THEN THEN THEN DROP                                          LOOP DROP ; -->                                                 \ J. P.  J@RG.                                   12/08/87 )     : STRATC2 ( I J --- I J )                                       CR ." <= CONFLICT WILL BE REGULATED..."                          1 TFLAG ! OVER OVER OVER OVER FINDXY                           DUP IF STSUF REPSUF CHPAR ELSE DROP DROP                         DROP THEN ;                                                      -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           \ STRATC11    STRATC12                           09/21/87 )     : STRATC11 ( I J --- I J ) 1 FFLAG !                            CR ." <> CONFLICT WILL BE REGULATED..."                          SYMBARV @ 0 DO I  DUP 2 PICK M3 KOHT                           @BIT IF 2 PICK OVER OVER OVER  FINDXY                           DUP IF STPREF REPPREF CHPAR DROP LEAVE ELSE                     DROP DROP DROP THEN THEN DROP LOOP ;                            : STRATC12 ( I J --- I J )                                      CR ." => CONFLICT WILL BE REGULATED..."                          1 FFLAG ! OVER OVER OVER                                       OVER FINDXY DUP IF STPREF REPPREF CHPAR                         ELSE DROP DROP DROP THEN ;                                        -->                                                                                                                                                                                                                                                           \ J. P. IJWORK                                   10/19/87 )     VARIABLE STRATCFA  VARIABLE MX1                                 : IJWORK ( M1 M2 CFA --- )                                      STRATCFA ! MAT1 ! MX1 ! ?cs: MAT2 !                             0 SYMBARV @ DUP BMRL LNX ! 0                                    DO MX1 @ OVER ?cs: ABI LNX @ CMOVEL DUP ABI LNX @ CONJ           IF I IRIDA ! 0 JRIDA ! ABI LNX @ 0                               DO DUP C@ IF DUP C@ MSK2 ! 128 8 0                                         DO DUP MSK2 @ AND                                                IF IRIDA @ JRIDA @ STRATCFA @ EXECUTE DROP DROP                 THEN 1 JRIDA +! 1->CYK                                         LOOP DROP                                                      ELSE 8 JRIDA +! THEN 1+                               LOOP DROP                                                      THEN RIDA +                                                    LOOP DROP ; -->                                                 \ C2KONF    C1KONF                               12/08/87 )     : [S'] ' OVERLAY - [COMPILE] LITERAL ; IMMEDIATE                : C2KONF ( --- )                                                CR ." C2-CONFLICTS WILL BE CHECKED..."                          PRODARV @ %SPRARV !                                             BEGIN CALC 0 TFLAG !  M3 M1 [S'] STRATC2 OVERLAY +              IJWORK TFLAG @ 0= UNTIL ;                                       : C1KONF ( --- )                                                CR ." C1-CONFLICTS WILL BE CHECKED..."                          BEGIN TFLAG @ IF CALC ELSE 1 TFLAG !                            THEN CALC2  0 FFLAG ! M1 M2 [S'] STRATC11 OVERLAY +             IJWORK  M5 M2 [S'] STRATC12 OVERLAY + IJWORK                    FFLAG @ 0= UNTIL ;                                                -->                                                                                                                                                                                           \ J. P. -- LCTRC  SUHE                           11/10/87 )     : LCTRC ( --- )                                                 CR ." SIMPLE CONTEXT WILL BE CALCULATED..."                     SYMBARV @ M6 M2 PLUS M2 EPSTMULT                                SYMBARV @ M6 M4 TRANSPON ;                                      VAR JMASK VAR EBAIT VAR ABAIT VAR JBAIT                         : SUHE ( --- suhe ; KONSTRUKTORis )                             JMASK @ DUP EBAIT @ AND IF 1 ELSE                                       DUP ABAIT @ AND IF 2 ELSE                                       DUP JBAIT @ AND IF 3 ELSE                               0 THEN THEN THEN SWAP DROP ;                                      -->                                                           ( PARANDATUD J.P. )                                                                                                                                                                                                                                             \ PRSIZE @BAIDID RMAKE                           01/26/88 )     : PRSIZE ( --- L ; EELNEVUSMAATR. REA PIKKUS BAITIDES )           SYMBARV @ 7 + 3 ->L 1 <-L ;                                   VAR NIHE                                                        : @BAIDID ( nihe --- )                                                  DUP NIHE ! M1 OVER C@L EBAIT !                                  M5 OVER C@L ABAIT ! M2 SWAP C@L JBAIT ! ;               : RMAKE ( rbaas i --- )                                                 RIDA * @BAIDID SYMBARV @ 0                                      DO 128 JMASK ! 0 8 0                                               DO 2 <-L SUHE OR JMASK @ 1->CL JMASK !                          LOOP >< OVER ! 2+ NIHE @ 1+ @BAIDID 8                        +LOOP DROP ;                                            -->                                                                                                                                                                                             \ RWR PMAKE PMOUT                                01/26/88 )     : RWR ( RBAAS --- )                                             PRSIZE ATFILE LWRITE ;                                          : PMAKE ( RBAAS --- )                                           SYMBARV @ 0 DO DUP I RMAKE DUP RWR LOOP                         DROP ;                                                          : PMOUT ( --- ) CR ." PREC.MAT.OUT..." LIT" PRM" ATFILE MKEXT    HERE PMAKE  CR ." PREC.MATRIX IS WRITTEN TO DISK"              ATFILE CLOSE-FILE ?DISCERR ;                                      -->                                                                                                                                                                                                                                                                                                                                                                                                                                                           \ ALLO, BMMALU, MAINP                            10/05/87 )     : BMMALU ( --- )                                                BMSIZE ['] M1 ALLO BMSIZE ['] M2 ALLO                           BMSIZE ['] M3 ALLO BMSIZE ['] M4 ALLO                           BMSIZE ['] M5 ALLO BMSIZE ['] M6 ALLO   ;                       : MAINP ( --- )                                                   [S'] F2ABORT OVERLAY + UABORT !                               SETFLAGS                                                        %CTAB MAKE-FILE ?DISCERR                                        BMMALU %GENSA @ CURGEN ! C2KONF C1KONF                          CURGEN @ %GENSA @ - %GENL ! %CTAB CLOSE-FILE ?DISCERR           PMOUT LCTRC                                                       0 UABORT ! OVERLAY forget ;                                                                                                                                                                                                                                   \ Faas 3 algus. Symbolite tabeli t@iendamine.        09/18/90 ) HERE CONSTANT OVERLAY                                           : F3ABORT OVERLAY forget 0 UABORT ! ABORT ;                     : [S'] ' OVERLAY - [COMPILE] LITERAL ; IMMEDIATE                VAR SBAAS VAR GENTAB                                            DIMCONST ARRAY CTAB                                             : RCNAME                                                         LIT" CDE" ATFILE OPEXT                                          0 CTAB DIMCONST 2* ATFILE LREAD ?DISCERR                        LIT" SYM" ATFILE OPEXT HERE DUP SBAAS !                         ATFILE ?FILESIZE D>S DUP ?ALLOT 0 ATFILE INITSA                 ATFILE LREAD ?DISCERR ;                                        : RSGEN %GENL @                                                 IF %CTAB OPEN-FILE ?DISCERR %GENSA @ %CTAB INITSA HERE %GENL @     ?ALLOT DUP GENTAB ! %GENL @ %CTAB LREAD DROP                    %CTAB CLOSE-FILE ?DISCERR THEN ;  -->                        \ UUSNIMI UUED                                  09/28/87 )      : KONKAT ( addr --- )                                            HERE >R DUP C@ 1+ ?ALLOT COUNT R> SWAP CMOVE ASCII _            HERE 1- C! ;                                                   : UUSNIMI ( prad --- nad )                                       HERE 0 C, ASCII < C, SWAP DUP P# 1                              DO DUP I PI CTAB @ SBAAS @ + KONKAT                             LOOP DROP                                                       ASCII > HERE 1- C! HERE OVER 1+ - OVER C! ;                    : S, HERE SYMBCONST ?ALLOT S! ;                                 : UUED                                                           %OSYMBARV @ SYMBARV @ <                                         IF GENTAB @ SYMBARV @ %OSYMBARV @                                 DO DUP UUSNIMI SBAAS @ - OVER PV DUP S, CTAB ! PRODLCONST +     LOOP DROP                                                     THEN ; -->                                                     \ Symbolite tabeli t@iend., grammatika kettale  09/28/87 )      : WSTAB ( Symbolite tabel faili )                                LIT" CDE" ATFILE OPEXT 0 CTAB SYMBARV @ 2* ATFILE LWRITE        LIT" SYM" ATFILE OPEXT SBAAS @ HERE OVER - ATFILE LWRITE ;     : MODSTAB                                                        HERE >R RSGEN RCNAME UUED WSTAB R> DP ! ;                      : WGR                                                            LIT" GRA" ATFILE MKEXT                                          0 PRVIIT PRODARV @ PRVIIT OVER - ATFILE LWRITE ;               -->                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Rtest: abitehted hashreeglitega               10/13/87 )      SET RULES                                                       DIMCONST  ARRAY ABIVEKTOR                                       PR#SYMBCONST 1 - SYMBCONST *           CONSTANT PP#             SYMBCONST PRODCONST + $HALEN + 1 + DUP CONSTANT INFO#           PP# + $HALEN +                         CONSTANT HR#             : AINFO ( A---A.INFO) PP# + ;                                   : ARULE ( A.INFO---A.RULE) SYMBCONST + ;                        : ALINK ( A.INFO --- A.LINK ) ARULE PRODCONST + ;               : AABI ( A.INFO---A.FLAG) ALINK 2 + ;                           : MAELU ( --- ) PRODARV @ PP# INFO# RULES MEMHASH ;             -->                                                                                                                                                                                                                                                                                                                             \ Rtest: !RUL @RUL RPART GETRPART               04/20/88 )      : RULSEG ( ad --- seg[rules] ad ) RULES HSEG SWAP ;             ( RULES: salvestamised [ x ad --- ] , lugemised [ ad --- x ] )  : S!RUL RULSEG S!L ;                 : P!RUL RULSEG P!L ;       : !RUL RULSEG !L ;                   : C!RUL RULSEG C!L ;       : S@RUL RULSEG S@L ;                 : P@RUL RULSEG P@L ;       : @RUL RULSEG @L ;                   : C@RUL RULSEG C@L ;       CREATE RPART PP# ALLOT                                          : GETRPART ( prad --- )                                                 RPART PP# ERASE                                                 DUP PRAD SWAP P# 1- COMPS                                       RPART SWAP CMOVE ;                                      -->                                                                                                                                                                                                                                                             \ Rtest: INFO! SALVESTA PARMOUT AHELASSE PLATS  04/20/88 )                VARIABLE LYLI       VARIABLE LINC                      : INFO! ( I A --- ) DUP RULSEG INFO# ERASEL                            OVER PRVIIT PV OVER S!RUL ARULE P!RUL ;                  : SALVESTA ( I --- )                                                   DUP PRVIIT GETRPART RPART RULES HASHW AINFO INFO! ;      : PARMOUT LIT" PAR" ATFILE MKEXT                                       0 %PARM %PARML @ ATFILE LWRITE                                  ATFILE CLOSE-FILE ?DISCERR ;                             : AHELASSE ( H I --- ) SWAP AINFO                                      BEGIN DUP                                                       WHILE DUP ALINK LINC ! ALINK @RUL                               REPEAT DROP RULES V@LISELEM DUP LINC @ !RUL INFO! ;     : PLATS ( --- A ) BEGIN LYLI @ @RUL                                               WHILE LYLI @ HR# + LYLI !                                       REPEAT LYLI @ ;  -->                          \ Rtest: AHEL! PAKI REEGLID PAISK               04/20/88 )      : AHEL! ( A.INFO --- )                                                BEGIN ALINK DUP LINC ! @RUL DUP                                 WHILE PLATS SWAP OVER DUP                                             LINC @ !RUL DUP                                                 ALINK LINC ! >R RULSEG R> RULSEG INFO# CMOVEL             REPEAT DROP ;                                             : PAKI ( --- )                                                  0 PP# LYLI ! BEGIN RULES HLEN OVER  >                                        WHILE DUP @RUL IF DUP AINFO AHEL!                                              THEN HR# +                                       REPEAT DROP ;                                      : REEGLID ( --- )                                                  PRODARV @ 1 DO I PRVIIT GETRPART RPART RULES HASH                              IF I AHELASSE ELSE DROP I SALVESTA                              THEN LOOP ; -->                               \ Rtest: UUSKOOD BRPIK OBMEN                    01/06/88 )      : PAISK ( --- ) MAELU REEGLID RULES HKOKKU PAKI MODSTAB WGR ;   VARIABLE CONFL VARIABLE UUSNR VARIABLE %SC                      : %LCT M4 ;        : %RC M2 ;                                   : UUSKOOD ( KOOD NT --- ) TERMARV @ - ABIVEKTOR C! ;            : BRPIK ( ---L) SYMBARV @ 7 + 3 ->L ;                           : OBMEN ( A.I --- A.I )                                            %SC @ DUP >R                                                    IF R@ S@RUL R@ ARULE P@RUL                                         2 PICK DUP S@RUL R@ S!RUL                                       DUP ARULE P@RUL R@ ARULE P!RUL                                  DUP AABI C@RUL R@ AABI C!RUL                                    ARULE P!RUL OVER S!RUL 0 OVER AABI C!RUL                     THEN R> DROP ;                                               -->                                                                                                                             \ Rtest: SCONT SORTTSYKKEL                      01/06/88 )      : SCONT ( a b --- flag) OVER RIDA *                             %LCT MAT1 ! OVER RIDA * %LCT MAT2 ! BRPIK -CONJ                 DUP IF DROP OVER RIDA * %RC MAT1 ! OVER                         RIDA * %RC MAT2 ! BRPIK -CONJ THEN SWAP DROP SWAP DROP ;        : SORTTSYKKEL ( H --- H )                                       DUP AINFO BEGIN DUP DUP ALINK @RUL                                        WHILE AABI C@RUL                                                     IF DUP 0 %SC !                                                     BEGIN ALINK @RUL DUP                                            WHILE DUP AABI C@RUL 0=                                               IF DUP %SC ! THEN                                         REPEAT DROP OBMEN                                            THEN ALINK @RUL                                            REPEAT DROP DROP ;                                     -->                                                            \ Rtest: SCPAAR ABIINFO UNUMB                   01/06/88 )       : SCPAAR ( A.I1 A.I2 --- A.I1 A.I2 FLAG )                      OVER S@RUL OVER S@RUL SCONT DUP >R                              IF OVER S@RUL OVER S@RUL . . CR                                    1 CONFL +!                                                   THEN R> ;                                                       : ABIINFO ( A.ABI---A.INFO) 2- PRODCONST - SYMBCONST - ;        : UNUMB ( A.ABI--- )                                              DUP C@RUL                                                       IF DROP ELSE DUP ABIINFO S@RUL DUP                                 TERMARV @ - ABIVEKTOR C@ DUP                                    IF SWAP DROP                                                    ELSE DROP UUSNR @ 1+ DUP UUSNR ! DUP ROT UUSKOOD                THEN SWAP C!RUL                                              THEN  ;                                                         -->                                                           \ Rtest: NUMBRID SCPRP                          01/06/88 )      : NUMBRID ( A.I1 A.I2--- A.I1 A.I2 )                            OVER AABI UNUMB DUP AABI UNUMB ;                                : SCPRP ( H --- H )                                             DUP AINFO                                                       BEGIN DUP DUP ALINK @RUL                                        WHILE BEGIN ALINK @RUL DUP                                            WHILE SCPAAR IF NUMBRID THEN                                    REPEAT DROP ALINK @RUL                                    REPEAT DROP DROP ;                                              : MALUVABAKS                                                            ['] M1 SEGFREE ['] M2 SEGFREE ['] M3 SEGFREE                    ['] M4 SEGFREE ['] M5 SEGFREE ['] M6 SEGFREE ;            -->                                                                                                                                                                                           \ Rtest: YLEREEGLITE CSTEST                     01/06/88 )      : YLEREEGLITE ( --- )                                             0 CR                                                            BEGIN RULES 10 + @ OVER >                                       WHILE DUP @RUL IF DUP AINFO ALINK @RUL                                         IF SCPRP SORTTSYKKEL THEN                                    THEN HR# +                                          REPEAT DROP ;                                                 : SCTEST ( --- )                                                  YLEREEGLITE MALUVABAKS CONFL @ DUP 0= %CORRECT !                IF CR ." Grammar isn't (1/1)MSP "                                  CONFL @ . ." CONFLICTS"   CR                                 THEN ;                                                        CR 23 LOAD-USING KAUGE                                          -->                                                                                                                             \ DLC kettale: ALMOUT ADLCTOUT                  10/28/87 )      -->                                                             VARIABLE ADLCTB VARIABLE ADLCTL                                 : ALMOUT ( --- )                                                        LIT" LMV" ATFILE MKEXT                                          0 LM SYMBARV @ ATFILE LWRITE                                    ATFILE CLOSE-FILE ?DISCERR ;                            : ADLCTOUT ( --- )                                                      LIT" DLC" ATFILE MKEXT                                          ADLCTB @ ADLCTL @ ATFILE LWRITE                                 ATFILE CLOSE-FILE ?DISCERR ;                            : 0<>COUNT ( AD L --- K ; 0-ST ERINEVATE EL-DE ARV BAITMASS-S )         0 ROT ROT 0                                                     DO DUP C@ IF SWAP 1+ SWAP THEN  1+                              LOOP DROP ;                                                         -->                                                 \ Kompress: LMUUS ALLOCADLCT                    10/08/87 )      -->                                                             : LMUUS ( ---  ;  UUE LM ARVUTAMINE )                                   0 SYMBARV @ 0                                                   DO I LM C@                                                         IF 1+ DUP I LM C!                                               THEN                                                         LOOP DROP ;                                             : ALLOCADLCT ( ---  ;  V@@RTUSTAB KA ADLCTL )                           HERE  0 LM SYMBARV @ 0<>COUNT                                   BMRL DUP %ADLCTRL !                                             0 ABIVEKTOR NTARV @ 0<>COUNT  *  DUP                            IF DUP ?ALLOT OVER OVER ERASE ADLCTL ! ADLCTB !                 ELSE DROP DROP 0 ADLCTL !                                       THEN  ;                                                  -->                                                            \ VKOHT    AIJ1 DIJ?                            01/11/88 )      -->                                                             : VKOHT ( I J MAD --- AD N   ;  VAJA BITIOPERATSIOONIDEKS )             ROT %ADLCTRL @ * + OVER 3 ->L + SWAP 7 AND ;            : AIJ1 ( I J ---  ;  YHE KIRJUTAMINE MAATRIKSISSE ADLCT )               ADLCTB @ VKOHT 128 SWAP ->L OVER C@ OR SWAP C! ;        : DIJ? ( i j --- bitompress: MAKEADLCT                           01/19/88 )      -->                                                             : MAKEADLCT ( ---  ; TEGELIK ARVUTAMINE )                               NTARV @ 0                                                       DO I DUP ABIVEKTOR C@ DUP                                          IF 1 - SWAP TERMARV @ + SYMBARV @ 0                               DO I LM C@                                                         IF DUP I DIJ?                                                      IF OVER I LM C@ 1 - AIJ1                                        THEN                                                         THEN                                                         LOOP                                                          THEN 2DROP                                                   LOOP ;                                                  -->                                                                                                                             \ KOMPRESS                                      01/19/88 )      -->                                                             : KOMPRESS  ( --- )                                                     ALLOCADLCT  ADLCTL @                                            IF LMUUS ALMOUT MAKEADLCT ADLCTOUT                                 ['] M4 SEGFREE THEN  ;                               -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ Rtest: RTEST                                  01/06/88 )      : RULOUT LIT" HGR" RULES HWRITE ;                               : RTEST ( --- )                                                 ( [S'] F3ABORT OVERLAY + UABORT ! )                               PAISK SCTEST PARMOUT RULOUT CR %CORRECT @                       IF 0 %ADLCTRL !                                                    ." Grammar is (1/1)MSP" CR                                   ELSE DCTEST ( KOMPRESS )                                        THEN  PARMOUT                                                   0 UABORT ! OVERLAY forget ;                                                                                                                                                                                                                                                                                                                                                                                                                                   ( TRBYTE                                    10/02/87 )          CODE TRBYTE ( L MASK AD1 --- AD2 BYTE )                              AX, MAT1 MOV    DS, AX MOV                                      DI  POP   DX POP    BX POP                                      CX, # 8 MOV    DH, DH SUB                                  1$:     DH, 1   SHL         AL, [DI] MOV                                AL, DL  AND         2$       JZ                                 DH      INC                                             2$:     DI, BX  ADD         1$       LOOP                            DI PUSH    CL, DH MOV    CX PUSH                                AX, CS  MOV    DS, AX  MOV                                      NEXT,    END-CODE                                          -->                                                                                                                                                                                                                                                             ( DISJ                                         04/05/88 )                                                                       CODE DISJ ( nihe1 nihe2 n --- )                                         BX, SI MOV CX POP DI POP SI POP                                 CX, CX OR   2$ JZ                                               ES, MAT2 MOV  DS, MAT1 MOV                                      1$: BYTE LODS                                                       ES SEG [DI], AL OR                                              DI INC                                                          1$ LOOP                                                     AX, CS MOV ES, AX MOV DS, AX MOV                            2$: SI, BX MOV                                                      NEXT,  END-CODE                                         -->                                                                                                                                                                                             ( CONJ                                      04/05/88 )          CODE CONJ ( nihe1 nihe2 n --- f )                                       BX, SI MOV   CX POP  DI POP  SI POP                             DX, # -1 MOV                                                    CX, CX OR  3$ JZ                                                ES, MAT2 MOV  DS, MAT1 MOV                                      1$: BYTE LODS                                                       ES SEG  [DI], AL AND  2$ JZ                                     DX, DX SUB                                                  2$: DI INC 1$ LOOP                                              AX, CS MOV  ES, AX MOV  DS, AX MOV                          3$: DX, DX NOT                                                      DX PUSH  SI, BX MOV                                         NEXT, END-CODE                                              -->                                                                                                                             ( -CONJ                                       04/05/88 )        CODE -CONJ ( nihe1 nihe2 n --- f )                                      BX, SI MOV CX POP DI POP SI POP                                 DX, DX SUB DI DEC                                               CX, CX OR 3$ JZ                                                 ES, MAT2 MOV DS, MAT1 MOV                                       1$: BYTE LODS                                                       DI INC                                                          ES SEG AL, [DI] TEST                                            1$ LOOPZ                                                    2$ JZ                                                           DX DEC                                                     2$:  AX, CS MOV ES, AX MOV DS, AX MOV                           3$:  DX PUSH SI, BX MOV                                          NEXT, END-CODE                                              -->                                                             ( 1->CYK ,  1<-CYK ,  CONJ ,  DISJ , -CONJ    04/05/88 )        CODE 1->CYK ( B1 --- B2 )                                            AX     POP                                                      AL, 1  ROR                                                      AX     PUSH     NEXT,    END-CODE                          CODE 1<-CYK ( B1 --- B2 )                                            AX     POP                                                      AL, 1  ROL                                                      AX     PUSH     NEXT,    END-CODE                                                                                          ;S                                                                                                                                                                                                                                                                                                                                                                                              ( PEINTPROG                                     02/20/88 )      : PRINTPROG ( algus lqpp --- )                                     PRINTER 27 EMIT 8 EMIT                                          1+ SWAP DO I LIST CR I 1+ LIST CR                                          I 2+ LIST KEY DROP                                        3 +LOOP 27 EMIT 9 EMIT CONSOLE ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        