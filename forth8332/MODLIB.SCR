( Modula-2 supplemental library                      10/10/89 ) (                                                                       This file contains some FORTH32 definitions                to support string manipulations by procedures                   in MODULE Str.                                                                                                                       To increase productivity these words should                be written in assembly language. For 8086 processor             the code is presented.                                                                                                               Copyright (c), 1989, Viljo Soo                                          Tartu University, Estonia                                                                                       )                                                                                                                                                                                               ( COMPS                                              10/10/89 ) : COMPS ( addr1 addr2 len --- n )                                       ( compare two strings and find first non-equal                    position n )                                                  OVER >R OVER + >R                                               BEGIN OVER C@ OVER C@ =                                               OVER R@ U< AND                                            WHILE 1+ SWAP 1+ SWAP                                           REPEAT                                                          R> DROP R> - SWAP DROP ;                                -->                                                                                                                                                                                                                                                                                                                                                                                             ( SCANS                                              10/10/89 ) : SCANS ( addr len b --- n )                                            ( scan string to find byte containing b                           return position of found byte or len                            <if b not found>  )                                           SWAP DUP 0                                                      ?DO ( addr b i )                                                   DROP OVER I + C@ OVER =                                         IF I LEAVE                                                      THEN                                                            I 1+                                                         LOOP >R 2DROP R> ;                                      -->                                                                                                                                                                                                                                                             ( seg ofs                                            01/19/90 ) HEX                                                             : seg  ( addr --- seg )                                                 ADDR>S&O H>< 0FFFF AND ;                                : ofs  ( addr --- ofs )                                                 ADDR>S&O 0FFFF AND ;                                    DECIMAL                                                         ;S                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ( COMPS <code>                                       10/11/89 ) CODE COMPASM  ( so1 so2 len --- n )                                     SP, BP XCHG     DS     PUSH     SI   PUSH                       SP, BP XCHG     CX     POP      CX   POP                        ES     POP      DI     POP      DS   POP                        SI     POP      DX, CX MOV      REPE BYTE CMPS                  AX, AX XOR      DX, CX SUB      DX   PUSH                       AX     PUSH     SP, BP XCHG     SI   POP                        DS     POP      SP, BP XCHG     NEXT,                   END-CODE                                                        : COMPS ( addr1 addr2 len --- n )                                       ( compare two strings and find first non-equal                    position n )                                                  >R ADDR>S&O >R ADDR>S&O R> R>                                   COMPASM ;                                               -->                                                             ( SCANS <code>                                       10/11/89 ) CODE SCANASM ( len b so --- n )                                         ES     POP      DI     POP      AX POP                          AX     POP      CX     POP      CX POP                          DX, CX MOV      REPNE BYTE SCAS                                 1$     JNE      CX     INC                              1$:     DX, CX SUB                                                      DX     PUSH     AX, AX XOR      AX PUSH                         NEXT,                                                   END-CODE                                                        : SCANS ( addr len b --- n )                                            ( scan string to find byte containing b                           return position of found byte or len                            <if b not found>  )                                           ROT ADDR>S&O SCANASM ; ;S                                                                                               