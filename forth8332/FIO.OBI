SOURCE$ FIO.MOD IMODULE$ FIO MODTAB$ FIO SET-IMPL IMPORT-ON FROM$ Str IMPORT$ CHARSET IMPORT$ Length IMPORT$ Compare IMPORT$ IntToStr IMPORT$ CardToStr IMPORT$ InCharSet IMPORT$ StrToInt IMPORT$ StrToCard IMPORT$ Copy IMPORT$ EmptyCharSet IMPORT$ InclChar FROM-OFF IMPORT-OFF STR' TRUE ' ALLOT-STR BENUM CONST$ TrueStr MaxOpenFiles CID-TYPE 3 I/C 9 C-BIN-OP BENUM CONST$ MaxHandle PTRTYPE$ BufRec BufRec $POINTER-TO TYPE$ FileInf CARDINAL TYPE-DUP VAR$ IOR TYPE-DROP 0 I/C BENUM MaxHandle CID-TYPE BENUM CRROOT RANGE-TAB FileInf ARRAY-TAB TYPE-DUP VAR$ BufInf TYPE-DROP 0 I/C BENUM 20 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ ErrMsg2 TYPE-DUP VAR$ ErrMsg3 TYPE-DUP VAR$ ErrMsg4 TYPE-DUP VAR$ ErrMsg5 TYPE-DUP VAR$ ErrMsg6 TYPE-DUP VAR$ ErrMsg15 TYPE-DUP VAR$ ErrMsg16 TYPE-DUP VAR$ ErrMsg17 TYPE-DUP VAR$ ErrMsgDiskFull TYPE-DROP PRTAB$ ErrorCheckNamed 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ str INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ name INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 79 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE$ A079OC PTRTYPE$ A079OC 0 I/C BENUM 100 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP 0 I/C BENUM 3 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ ns TYPE-DROP A079OC $POINTER-TO TYPE-DUP VAR$ sp TYPE-DROP PRTAB$ AddErr 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ es INCPNUM&!TAB TYPE-DROP NOOP ~ : &FIO.001 BODY-BEGIN [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Append ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ es ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.001 END-BLOCK NPAIRS$ AddErr AddErr STR'  :  ' SYS-STR$ &FIO.002 STR' MSDOS error #  ' SYS-STR$ &FIO.003 STR'  ( ' SYS-STR$ &FIO.004 STR' ) ' SYS-STR$ &FIO.005 : &FIO.006 BODY-BEGIN CASE SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 2 ] BIN-OP BOOLEAN? => CASE SV0 [ IOcheck ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ s ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ Copy ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ str ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ AddErr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.002 ] $STRINGCONST NEXTCOMP PROCEND CF+ SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH CF- CASE [ 2 I/C BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsg2 addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ 3 I/C BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsg3 addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ 4 I/C BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsg4 addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ 5 I/C BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsg5 addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ 6 I/C BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsg6 addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ 15 I/C BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsg15 addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ 16 I/C BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsg16 addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ 17 I/C BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsg17 addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ DiskFull CID-TYPE BENUM ] SELECTOR-LIST I*ALSO STM-LABELS => FORTHBEGIN  addr ErrMsgDiskFull addr sp !  FORTHEND VOCOFF I*PREV ENDOF [ AddErr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.003 ] $STRINGCONST NEXTCOMP PROCEND A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 10 I/C ] CONSTTABLE [ 13 ] BIN-OP [ 48 I/C ] CONSTTABLE [ 9 ] BIN-OP NEXTCOMP AGREND AGR-ADDR [ ns ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 10 I/C ] CONSTTABLE [ 14 ] BIN-OP [ 48 I/C ] CONSTTABLE [ 9 ] BIN-OP NEXTCOMP AGREND AGR-ADDR [ ns ] IDENTIFIER M-ARRAY SV0 [ 1 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ ns ] IDENTIFIER M-ARRAY SV0 [ 2 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  addr ns addr sp !  FORTHEND ESAC CASE-DROP [ AddErr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ sp ] IDENTIFIER *POINTER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ name ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 2 ] BIN-OP BOOLEAN? => [ AddErr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.004 ] $STRINGCONST NEXTCOMP PROCEND [ AddErr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ AddErr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.005 ] $STRINGCONST NEXTCOMP PROCEND ENDOF ESAC FORTHBEGIN  ABORT  FORTHEND ENDOF ESAC ENDOF A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ESAC BODY-END ; BLBODY$ &FIO.006 END-BLOCK NPAIRS$ ErrorCheckNamed ErrorCheckNamed PRTAB$ ErrorCheck 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ str INCPNUM&!TAB TYPE-DROP NOOP ~ : &FIO.007 BODY-BEGIN CASE SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 2 ] BIN-OP BOOLEAN? => [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ str ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP PROCEND ENDOF A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ESAC BODY-END ; BLBODY$ &FIO.007 END-BLOCK NPAIRS$ ErrorCheck ErrorCheck PRTAB$ IOresult CARDINAL $FUNCT NOOP ~ : &FIO.008 BODY-BEGIN SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.008 END-BLOCK NPAIRS$ IOresult IOresult PRTAB$ Write 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Buf INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Count INCPNUM&!TAB TYPE-DROP NOOP ~ STR' Write ' SYS-STR$ &FIO.009 : &FIO.010 BODY-BEGIN CASE SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => 0RETURN ENDOF ESAC FORTHBEGIN  addr Buf addr Count @ addr F @ /W   IF addr Count @ =	                  IF 0                             ELSE 240                         THEN                           THEN addr IOR !                  FORTHEND [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.009 ] $STRINGCONST NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.010 END-BLOCK NPAIRS$ Write Write PRTAB$ Truncate 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP NOOP ~ STR' Truncate ' SYS-STR$ &FIO.011 : &FIO.012 BODY-BEGIN FORTHBEGIN  0 0 addr F @ /W     DROP addr IOR !    FORTHEND [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.011 ] $STRINGCONST NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.012 END-BLOCK NPAIRS$ Truncate Truncate PRTAB$ Read 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Buf INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Count INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ ActCount TYPE-DROP STR' Read ' SYS-STR$ &FIO.013 : &FIO.014 BODY-BEGIN FORTHBEGIN  addr Buf addr Count @ addr F @ R/     IF 0                               ELSE 0 SWAP THEN                   addr IOR ! addr ActCount !          FORTHEND [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.013 ] $STRINGCONST NEXTCOMP PROCEND SV0 [ ActCount ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.014 END-BLOCK NPAIRS$ Read Read PRTAB$ WrStr 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Buf INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ Count TYPE-DROP : &FIO.015 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Length ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buf ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ WrBin ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Buf ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.015 END-BLOCK NPAIRS$ WrStr WrStr PRTAB$ WrLn 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 1 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ a TYPE-DROP : &FIO.016 BODY-BEGIN A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 13 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ a ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ a ] IDENTIFIER M-ARRAY SV0 [ 1 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.016 END-BLOCK NPAIRS$ WrLn WrLn PRTAB$ RdChar 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP CHAR $FUNCT NOOP ~ 0 I/C BENUM 0 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ c TYPE-DROP : &FIO.017 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? => CASE SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ Buffer ] IDENTIFIER WPOP- CT? I*PREV M-ARRAY SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ c ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 9 ] BIN-OP AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ c ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 26 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ AGR-ADDR [ EOF ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ c ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF ESAC ENDOF ESAC CASE SV0 [ RdBin ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP AGREND [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 26 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ c ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC A-STACK-0 SV0 [ c ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 26 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP SV+ AGR-ADDR [ EOF ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ c ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.017 END-BLOCK NPAIRS$ RdChar RdChar PRTAB$ RdStr 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Buf INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ h TYPE-DROP CHAR TYPE-DUP VAR$ c TYPE-DROP : &FIO.018 BEGIN CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => 0RETURN ENDOF ESAC A-STACK-0 SV0 [ RdChar ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ c ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 26 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ Buf ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP SV+ AGR-ADDR [ EOF ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN 0RETURN ENDOF SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 13 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ Buf ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN 0RETURN ENDOF SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP AGREND [ 2 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Buf ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND ENDOF ESAC AGAIN ; : &FIO.019 BODY-BEGIN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buf ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ h ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &FIO.018 BODY-END ; BLBODY$ &FIO.019 END-BLOCK NPAIRS$ RdStr RdStr PRTAB$ RdItem 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP NOOP ~ CHAR TYPE-DUP VAR$ c TYPE-DROP CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ L TYPE-DROP : &FIO.020 BEGIN A-STACK-0 SV0 [ RdChar ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ c ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH COMPILE-NOT [ InCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND COMPILE-NOT [ 7 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC AGAIN ; : &FIO.021 BEGIN CASE SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH COMPILE-NOT [ InCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 7 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC A-STACK-0 SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => EXIT ENDOF A-STACK-0 SV0 [ RdChar ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ c ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 26 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN EXIT ENDOF ESAC ESAC AGAIN ; OCT$ 0 $CHAR SYS-STR$ &FIO.022 : &FIO.023 BODY-BEGIN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &FIO.020 A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &FIO.021 CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ &FIO.022 ] $STRINGCONST AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BODY-END ; BLBODY$ &FIO.023 END-BLOCK NPAIRS$ RdItem RdItem PRTAB$ WrStrAdj 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ L TYPE-DROP INTEGER TYPE-DUP VAR$ a TYPE-DROP STR' ? ' SYS-STR$ &FIO.024 STR'   ' SYS-STR$ &FIO.025 STR'   ' SYS-STR$ &FIO.026 : &FIO.027 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Length ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ ABS ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 10 ] BIN-OP AGR-ADDR [ a ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 3 ] BIN-OP SV+ [ ChopOff ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 8 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CARDINAL ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ ABS ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 1 I/C ] CONSTTABLE [ 9 ] BIN-OP AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ESAC BEGIN SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ BOOLEAN? WHILE [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND A-STACK-0 SV0 [ &FIO.024 ] $STRINGCONST AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN REPEAT A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ a ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC CASE SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? => [ WrCharRep ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ &FIO.025 ] $STRINGCONST NEXTCOMP SV0 [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 3 ] BIN-OP SV+ [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? => [ WrCharRep ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ &FIO.026 ] $STRINGCONST NEXTCOMP SV0 [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC BODY-END ; BLBODY$ &FIO.027 END-BLOCK NPAIRS$ WrStrAdj WrStrAdj PRTAB$ WrChar 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP NOOP ~ : &FIO.028 BODY-BEGIN [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.028 END-BLOCK NPAIRS$ WrChar WrChar PRTAB$ WrCharRep 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Count INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ S TYPE-DROP CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ j TYPE-DROP : &FIO.029 BODY-BEGIN BEGIN SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 2 I/C ] CONSTTABLE [ 10 ] BIN-OP AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ j ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ BOOLEAN? WHILE A-STACK-0 SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND REPEAT BODY-END ; BLBODY$ &FIO.029 END-BLOCK NPAIRS$ WrCharRep WrCharRep PRTAB$ WrBool 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT BOOLEAN TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ STR' FALSE ' SYS-STR$ &FIO.030 : &FIO.031 BODY-BEGIN CASE SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ TrueStr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ &FIO.030 ] $STRINGCONST NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ESAC BODY-END ; BLBODY$ &FIO.031 END-BLOCK NPAIRS$ WrBool WrBool PRTAB$ WrInt 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ S TYPE-DROP : &FIO.032 BODY-BEGIN [ IntToStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC BODY-END ; BLBODY$ &FIO.032 END-BLOCK NPAIRS$ WrInt WrInt PRTAB$ WrCard 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ S TYPE-DROP : &FIO.033 BODY-BEGIN [ CardToStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC BODY-END ; BLBODY$ &FIO.033 END-BLOCK NPAIRS$ WrCard WrCard PRTAB$ WrHex 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ S TYPE-DROP : &FIO.034 BODY-BEGIN [ CardToStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 16 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC BODY-END ; BLBODY$ &FIO.034 END-BLOCK NPAIRS$ WrHex WrHex PRTAB$ RdBool 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP BOOLEAN $FUNCT NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ S TYPE-DROP : &FIO.035 BODY-BEGIN [ RdItem ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND SV0 [ Compare ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ TrueStr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP RETURN BODY-END ; BLBODY$ &FIO.035 END-BLOCK NPAIRS$ RdBool RdBool PRTAB$ RdInt 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP INTEGER $FUNCT NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ S TYPE-DROP INTEGER TYPE-DUP VAR$ i TYPE-DROP : &FIO.036 BODY-BEGIN [ RdItem ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ StrToInt ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN BODY-END ; BLBODY$ &FIO.036 END-BLOCK NPAIRS$ RdInt RdInt PRTAB$ RdCard 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ S TYPE-DROP CARDINAL TYPE-DUP VAR$ i TYPE-DROP : &FIO.037 BODY-BEGIN [ RdItem ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ StrToCard ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN BODY-END ; BLBODY$ &FIO.037 END-BLOCK NPAIRS$ RdCard RdCard PRTAB$ RdHex 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ S TYPE-DROP CARDINAL TYPE-DUP VAR$ i TYPE-DROP : &FIO.038 BODY-BEGIN [ RdItem ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ StrToCard ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 16 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.038 END-BLOCK NPAIRS$ RdHex RdHex PRTAB$ WrBin 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Buf INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Count INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DROP : &FIO.039 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP SV+ [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => [ Write ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Buf ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP SV+ AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF CASE SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? WHILE BEGIN SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ BufSize ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ Buf ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ Buffer ] IDENTIFIER WPOP- CT? I*PREV M-ARRAY SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND A-STACK-0 SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 9 ] BIN-OP AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN REPEAT CASE SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ BufSize ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP BOOLEAN? => [ Write ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ Buffer ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ BufSize ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC REPEAT ESAC BODY-END ; BLBODY$ &FIO.039 END-BLOCK NPAIRS$ WrBin WrBin PRTAB$ Flush 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP NOOP ~ FileInf TYPE-DUP VAR$ x TYPE-DROP : &FIO.040 BODY-BEGIN CASE SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP SV+ BOOLEAN? => A-STACK-0 SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ x ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ x ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 ] BIN-OP SV+ BOOLEAN? => CASE SV0 [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => [ Write ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ Buffer ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC ENDOF ESAC BODY-END ; BLBODY$ &FIO.040 END-BLOCK NPAIRS$ Flush Flush PRTAB$ RdBin 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Buf INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ Count INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ h TYPE-DUP VAR$ j TYPE-DROP : &FIO.041 BEGIN CASE SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC CASE SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 6 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ Read ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ Buffer ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ BufSize ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP SV+ AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => EXIT ENDOF ESAC ENDOF ESAC BEGIN SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ Buffer ] IDENTIFIER WPOP- CT? I*PREV M-ARRAY SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Buf ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND A-STACK-0 SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 9 ] BIN-OP AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN REPEAT AGAIN ; : &FIO.042 BODY-BEGIN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ EOF ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP BOOLEAN? => CASE SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP SV+ [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ Read ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Buf ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP SV+ AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF CASE SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => [ Flush ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &FIO.041 ESAC CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP SV+ BOOLEAN? => A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ EOF ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC ENDOF ESAC SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.042 END-BLOCK NPAIRS$ RdBin RdBin PRTAB$ GetName 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ name INCPNUM&!TAB TYPE-DROP VAR-SECT PathStr TYPE-DUP VAR$ fn INCPNUM&!TAB TYPE-DROP NOOP ~ : &FIO.043 BODY-BEGIN [ Copy ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ fn ] IDENTIFIER M-ARRAY SV0 [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &FIO.043 END-BLOCK NPAIRS$ GetName GetName PRTAB$ Open 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP File $FUNCT NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DROP CARDINAL TYPE-DUP VAR$ h TYPE-DROP STR' Open ' SYS-STR$ &FIO.044 : &FIO.045 BODY-BEGIN [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  addr fn 2 open              IF 0 addr IOR !             ELSE DUP 5 =                  IF DROP addr fn 0 open        IF 0 addr IOR !             ELSE addr IOR ! -1          THEN                      ELSE addr IOR ! -1          THEN                      THEN addr h !              FORTHEND [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.044 ] $STRINGCONST NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => CASE SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF ESAC SV0 [ MAX ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ CARDINAL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN BODY-END ; BLBODY$ &FIO.045 END-BLOCK NPAIRS$ Open Open PRTAB$ Exists 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP BOOLEAN $FUNCT NOOP ~ DirEntry TYPE-DUP VAR$ d TYPE-DROP CARDINAL TYPE-DUP VAR$ DTAAddr TYPE-DROP BOOLEAN TYPE-DUP VAR$ b TYPE-DROP : &FIO.046 BODY-BEGIN FORTHBEGIN  [ HEX ] 2F00 [ DECIMAL ] $AX ! DOSINT              $BX H@ addr DTAAddr H! $ES H@ addr DTAAddr 2+ H!    FORTHEND A-STACK-0 SV0 [ ReadFirstEntry ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ FileAttr ] IDENTIFIER RES-CONTEXT REC-CHECK [ CSROOT SET9 ] CONSTTABLE NEXTCOMP SV0 [ d ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ b ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  addr DTAAddr DUP H@ $DX H! 2+ H@ $DS H!             [ HEX ] 1A00 [ DECIMAL ] $AX H! DOSINT DROP       FORTHEND SV0 [ b ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.046 END-BLOCK NPAIRS$ Exists Exists PRTAB$ Append 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP File $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ F TYPE-DROP : &FIO.047 BODY-BEGIN A-STACK-0 SV0 [ Open ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ F ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ Seek ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Size ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND NEXTCOMP PROCEND SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.047 END-BLOCK NPAIRS$ Append Append PRTAB$ Create 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP File $FUNCT NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DROP CARDINAL TYPE-DUP VAR$ h TYPE-DROP STR' Create ' SYS-STR$ &FIO.048 : &FIO.049 BODY-BEGIN [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  addr fn 0 make              IF 0                       ELSE -1 SWAP               THEN addr IOR ! addr h !    FORTHEND [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.048 ] $STRINGCONST NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => CASE SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF ESAC SV0 [ MAX ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ CARDINAL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN BODY-END ; BLBODY$ &FIO.049 END-BLOCK NPAIRS$ Create Create PRTAB$ Close 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP NOOP ~ STR' Close ' SYS-STR$ &FIO.050 : &FIO.051 BODY-BEGIN [ Flush ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  addr F @ close      IF 0 THEN          addr IOR !         FORTHEND [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.050 ] $STRINGCONST NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.051 END-BLOCK NPAIRS$ Close Close PRTAB$ GetPos 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ FileInf TYPE-DUP VAR$ x TYPE-DROP CARDINAL TYPE-DUP VAR$ conv TYPE-DROP STR' GetPos ' SYS-STR$ &FIO.052 : &FIO.053 BODY-BEGIN FORTHBEGIN  0 1 addr F @ seek   IF addr conv ! 0    THEN               addr IOR !         FORTHEND [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.052 ] $STRINGCONST NEXTCOMP PROCEND CASE SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP SV+ BOOLEAN? => A-STACK-0 SV0 [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ x ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ x ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 ] BIN-OP SV+ BOOLEAN? => CASE SV0 [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ conv ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 9 ] BIN-OP AGR-ADDR [ conv ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF SV0 [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ conv ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ x ] IDENTIFIER *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 10 ] BIN-OP SV+ [ 10 ] BIN-OP AGR-ADDR [ conv ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC ENDOF ESAC ENDOF ESAC SV0 [ conv ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.053 END-BLOCK NPAIRS$ GetPos GetPos PRTAB$ Seek 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ pos INCPNUM&!TAB TYPE-DROP NOOP ~ STR' Seek ' SYS-STR$ &FIO.054 : &FIO.055 BODY-BEGIN [ Flush ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  addr pos @ 0 addr F @ seek   IF DROP 0                  THEN addr IOR !            FORTHEND [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.054 ] $STRINGCONST NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.055 END-BLOCK NPAIRS$ Seek Seek PRTAB$ Size 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP CARDINAL $FUNCT NOOP ~ CARDINAL TYPE-DUP VAR$ conv TYPE-DROP STR' Size ' SYS-STR$ &FIO.056 : &FIO.057 BODY-BEGIN [ Flush ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  0 1 addr F @ seek           IF 0 2 addr F @ seek          IF addr conv !                0 addr F @ seek             IF DROP 0                  THEN                     THEN                     THEN addr IOR !            FORTHEND [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.056 ] $STRINGCONST NEXTCOMP PROCEND SV0 [ conv ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.057 END-BLOCK NPAIRS$ Size Size PRTAB$ Erase 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DROP STR' Erase ' SYS-STR$ &FIO.058 : &FIO.059 BODY-BEGIN [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  addr fn delete      IF 0               THEN addr IOR !    FORTHEND CASE SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.058 ] $STRINGCONST NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.059 END-BLOCK NPAIRS$ Erase Erase PRTAB$ Rename 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DUP VAR$ newname INCPNUM&!TAB TYPE-DROP NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DUP VAR$ fn2 TYPE-DROP STR' Rename ' SYS-STR$ &FIO.060 : &FIO.061 BODY-BEGIN [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ newname ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn2 ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  addr fn addr fn2 rename      IF 0                       THEN addr IOR !            FORTHEND [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.060 ] $STRINGCONST NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.061 END-BLOCK NPAIRS$ Rename Rename PRTAB$ ReadFirstEntry 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ DirName INCPNUM&!TAB TYPE-DROP VALUE-SECT FileAttr TYPE-DUP VAR$ Attr INCPNUM&!TAB TYPE-DROP VAR-SECT DirEntry TYPE-DUP VAR$ D INCPNUM&!TAB TYPE-DROP BOOLEAN $FUNCT NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DROP STR' ReadFirstEntry ' SYS-STR$ &FIO.062 : &FIO.063 BODY-BEGIN [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ DirName ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  addr fn addr Attr @ find             IF 0 THEN addr IOR !                SCRATCH_BUFF addr D 44 CMOVE       FORTHEND CASE SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 18 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF ESAC [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.062 ] $STRINGCONST NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.063 END-BLOCK NPAIRS$ ReadFirstEntry ReadFirstEntry PRTAB$ ReadNextEntry 0PNUM! VAR-SECT DirEntry TYPE-DUP VAR$ D INCPNUM&!TAB TYPE-DROP BOOLEAN $FUNCT NOOP ~ STR' ReadNextEntry ' SYS-STR$ &FIO.064 : &FIO.065 BODY-BEGIN FORTHBEGIN  addr D SCRATCH_BUFF 44 CMOVE         next                                IF 0 THEN addr IOR !                 SCRATCH_BUFF addr D 44 CMOVE        FORTHEND CASE SV0 [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 18 I/C ] CONSTTABLE [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ IOR ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN ENDOF ESAC [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.064 ] $STRINGCONST NEXTCOMP PROCEND SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &FIO.065 END-BLOCK NPAIRS$ ReadNextEntry ReadNextEntry PRTAB$ ChDir 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DROP CHAR TYPE-DUP VAR$ D TYPE-DROP STR' : ' SYS-STR$ &FIO.066 STR' ChDir ' SYS-STR$ &FIO.067 : &FIO.068 BODY-BEGIN [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ fn ] IDENTIFIER M-ARRAY SV0 [ 1 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &FIO.066 ] $STRINGCONST [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CAP ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ fn ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ D ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  14 addr D C@ ASCII A - FDOS   2DROP                       FORTHEND ENDOF ESAC FORTHBEGIN  addr fn chdir           IF 0 THEN addr IOR !   FORTHEND [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.067 ] $STRINGCONST NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.068 END-BLOCK NPAIRS$ ChDir ChDir PRTAB$ MkDir 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DROP STR' MkDir ' SYS-STR$ &FIO.069 : &FIO.070 BODY-BEGIN [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  addr fn mkdir          IF 0 THEN addr IOR !  FORTHEND [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.069 ] $STRINGCONST NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.070 END-BLOCK NPAIRS$ MkDir MkDir PRTAB$ RmDir 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DROP STR' RmDir ' SYS-STR$ &FIO.071 : &FIO.072 BODY-BEGIN [ GetName ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND FORTHBEGIN  addr fn rmdir          IF 0 THEN addr IOR !  FORTHEND [ ErrorCheckNamed ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.071 ] $STRINGCONST NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.072 END-BLOCK NPAIRS$ RmDir RmDir PRTAB$ GetDir 0PNUM! VALUE-SECT CARDINAL TYPE-DUP VAR$ drive INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Name INCPNUM&!TAB TYPE-DROP NOOP ~ PathStr TYPE-DUP VAR$ fn TYPE-DROP STR' GetDir ' SYS-STR$ &FIO.073 : &FIO.074 BODY-BEGIN FORTHBEGIN  addr drive C@ getdir   IF 0 THEN addr IOR !  FORTHEND [ ErrorCheck ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.073 ] $STRINGCONST NEXTCOMP PROCEND [ Copy ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Name ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &FIO.074 END-BLOCK NPAIRS$ GetDir GetDir PRTAB$ InitBufInf NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DROP : &FIO.075 BODY-BEGIN SV0 [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH LIMITEXP SV0 [ 0 I/C ] CONSTTABLE STARTEXP DO &I [ i ] IDENTIFIER LOOPINDEX ! A-STACK-0 SV0 [ NIL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN LOOP BODY-END ; BLBODY$ &FIO.075 END-BLOCK NPAIRS$ InitBufInf InitBufInf PRTAB$ AssignBuffer 0PNUM! VALUE-SECT File TYPE-DUP VAR$ F INCPNUM&!TAB TYPE-DROP VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Buf INCPNUM&!TAB TYPE-DROP NOOP ~ FileInf TYPE-DUP VAR$ FP TYPE-DROP : &FIO.076 BODY-BEGIN CASE SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ MaxHandle ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP SV+ [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buf ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ BufRec ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? => FORTHBEGIN  addr Buf addr FP !  FORTHEND A-STACK-0 SV0 [ FP ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ RWPos ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ EOB ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buf ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ BufRec ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 10 ] BIN-OP [ 2 I/C ] CONSTTABLE [ 9 ] BIN-OP AGR-ADDR [ BufInf ] IDENTIFIER M-ARRAY SV0 [ F ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL *POINTER I*ALSO OP-REC WPUSH+ [ BufSize ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BODY-END ; BLBODY$ &FIO.076 END-BLOCK NPAIRS$ AssignBuffer AssignBuffer STR'   ' SYS-STR$ &FIO.077 STR' file not found ' SYS-STR$ &FIO.078 STR' path not found ' SYS-STR$ &FIO.079 STR' too many open files ' SYS-STR$ &FIO.080 STR' access denied ' SYS-STR$ &FIO.081 STR' invalid handle ' SYS-STR$ &FIO.082 STR' invalid drive ' SYS-STR$ &FIO.083 STR' current directory ' SYS-STR$ &FIO.084 STR' different device ' SYS-STR$ &FIO.085 STR' disk full ' SYS-STR$ &FIO.086 : &FIO.087 BODY-BEGIN A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Eng ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ IOcheck ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ ChopOff ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ EmptyCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 9 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 13 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 26 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &FIO.077 ] $STRINGCONST NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InitBufInf ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND A-STACK-0 SV0 [ &FIO.078 ] $STRINGCONST AGR-ADDR [ ErrMsg2 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &FIO.079 ] $STRINGCONST AGR-ADDR [ ErrMsg3 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &FIO.080 ] $STRINGCONST AGR-ADDR [ ErrMsg4 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &FIO.081 ] $STRINGCONST AGR-ADDR [ ErrMsg5 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &FIO.082 ] $STRINGCONST AGR-ADDR [ ErrMsg6 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &FIO.083 ] $STRINGCONST AGR-ADDR [ ErrMsg15 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &FIO.084 ] $STRINGCONST AGR-ADDR [ ErrMsg16 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &FIO.085 ] $STRINGCONST AGR-ADDR [ ErrMsg17 ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ &FIO.086 ] $STRINGCONST AGR-ADDR [ ErrMsgDiskFull ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &FIO.087 END-BLOCK NPAIRS$ FIO FIO CUNIT$ FIO ;S NOSOURCE   