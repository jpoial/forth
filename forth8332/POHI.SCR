( Kirjelduste tootleminebject-creating                                06/30/89 ) VARIABLE DEF-OBJ-AD    0 BIN-BASE-AD !                          : LATEST-TAB ( --- >table )                                         LATEST NAME> >TAB ;                                         VOCABULARY ENVIRONMENT IMMEDIATE                                : build ( --- ; XXX at address HERE )                              ?EXEC HERE DUP C@          ( addr len )                         OVER 128 TOGGLE                                                 1+ ALLOT HERE 1- 128 TOGGLE                                     LATEST , 0 , 0 ,                                                CURRENT @ ! ;                                                : define ( def: counted name HERE, use: --- "PFA" )                 build LATEST NAME> >BODY 4 + DEF-OBJ-AD !                       DOES> ;                                                     : create-obj  BL WORD DROP define ;                             ENVIRONMENT DEFINITIONS create-obj ***   FORTH DEFINITIONS -->  \ #2  Object-creating                                06/30/89 ) : specconst ( def: 32-bit --- ; counted name HERE,                            use: --- 32-bit )                                     build , DOES> @ ;                                           : create-spc  BL WORD DROP specconst ;                          ENVIRONMENT DEFINITIONS                                         0 create-spc ###                                                FORTH DEFINITIONS        VARIABLE INLOCFLAG                     : CHECK-LOCALITY ( cfa --- )                                        FIND1-FLAG @ 0= IF DROP 0 INLOCFLAG ! define EXIT THEN          -1 INLOCFLAG !   CURRENT  ( NB! )  @ @ NAME>                    BEGIN OVER OVER = 0=  WHILE DUP >NAME 1+ C@ 160 =                   IF 0 INLOCFLAG ! THEN   >LINK @ NAME> REPEAT DROP DROP      INLOCFLAG @ IF  CR ." Duplicate name "                                         HERE COUNT TYPE ERR_EXIT                                     ELSE define THEN ;   -->                        \ #3                                                 10/10/89 ) VARIABLE PH-FLAG                                                VARIABLE DUMMYTYPEAD                                            VARIABLE DEFMODULEAD                                            VARIABLE #PAIN                                                  256 CONSTANT MAX#PAIN                                           VARIABLE PAIN.BUF MAX#PAIN 12 * ALLOT                           : PAIN.TYPEAD ( i --- addr )                                        12 * PAIN.BUF + ;                                           : PAIN.PLACEAD ( i --- addr )                                       12 * PAIN.BUF + 4 + ;                                       : PAIN.CONTAD ( i --- addr )                                        12 * PAIN.BUF + 8 + ;                                       : MAKE.PAIN ( --- i )                                               #PAIN @ 1 #PAIN +! ;                                         -->                                                            \ #4                                                 10/10/89 )                                                                 : PAIN.CHECK ( --- )                                                #PAIN @ DUP                                                     IF 0 DO                                                                  I PAIN.TYPEAD @ DUP 1 =                                         IF I PAIN.PLACEAD @ @ 0=                                        ELSE I PAIN.PLACEAD @ @ I PAIN.CONTAD @ =                       THEN                                                            IF 8 + I PAIN.TYPEAD !                                          ELSE DROP I PAIN.PLACEAD @ @ I PAIN.CONTAD !                    THEN                                                        LOOP                                                       ELSE DROP                                                       THEN ;                                                       -->                                                            \ #5                                                 06/30/89 ) : PAIN.DUMMY ( --- )                                                MAKE.PAIN                                                       1 OVER PAIN.TYPEAD !                                            ( i ) DUMMYTYPEAD @ INFO + 4 + DUP @                            ( i p c ) 2 PICK PAIN.CONTAD ! SWAP PAIN.PLACEAD ! ;        : PAIN.PROC ( --- )                                                 MAKE.PAIN 2 OVER PAIN.TYPEAD !                                  ( i ) CURRENT @ DUP @                                           ( i p c ) 2 PICK PAIN.CONTAD ! SWAP PAIN.PLACEAD !              MAKE.PAIN 5 OVER PAIN.TYPEAD !                                  PH-FLAG @ ?TARG 4 + DUP @                                       ( i p c ) 2 PICK PAIN.CONTAD ! SWAP PAIN.PLACEAD !              MAKE.PAIN 6 OVER PAIN.TYPEAD !                                  PH-FLAG @ ?TARG 8 + DUP @                                       ( i p c ) 2 PICK PAIN.CONTAD ! SWAP PAIN.PLACEAD ! ; -->    \ #6                                                 06/30/89 )                                                                 : PAIN.MODULE ( --- )                                               MAKE.PAIN                                                       4 OVER PAIN.TYPEAD !                                            ( i ) CURRENT @ DUP @                                           ( i p c ) 2 PICK PAIN.CONTAD ! SWAP PAIN.PLACEAD ! ;         -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \ #7                                                 06/30/89 )  -->                                                            : TYPE$ (  >typetab  ---  ; in form TYPE$ XXX )                     DEF-OBJ DUMMYTYPEAD @                                           IF  DUMMYTYPEAD @ ?N IF 8 ELSE 9 THEN                               15 DUMMYTYPEAD @ SET-L&T                                        DUP ?TSIZE DUMMYTYPEAD @ 0 TAB!                                 DUMMYTYPEAD @ 4 TAB!                                            DUMMYTYPEAD @ ?TSIZE DEF-OBJ-AD @ 0 TAB!                        PAIN.DUMMY 0 DUMMYTYPEAD !                                  ELSE                                                            8 15 LATEST-TAB SET-L&T DUP ?TSIZE , , THEN ;                -->                                                                                                                                                                                                                                                            \ #8  IMPORT$                                        10/10/89 ) : OBJ? ( cfa --- flag )                                            4 + @ DUP ENVIRONMENT ['] *** 4 + @ =                           SWAP ['] ### 4 + @ = OR FORTH ;                              : IMPORT$ ( --- ; IMPORT$ XXX )                                     BL WORD FIND                                                    IF DUP OBJ?                                                         IF EXECUTE specconst                                            ELSE CR ." Import of " >NAME .NAME                                   ."  isn't possible!" ERR_EXIT THEN                     ELSE CR ." Object " COUNT TYPE                                       ."  not found for import!" ERR_EXIT THEN ;              -->                                                                                                                                                                                                                                                            \ #9  CREATE-OBJ                                     10/10/89 ) : CREATE-OBJ ( unique check )                                       BL WORD FIND 0=                                                 IF DROP define                                                  ELSE                                                               DUP OBJ?                                                        IF EXECUTE DUP DEF-OBJ-AD ! IS-PROCHEADING?                        IF PH-FLAG !                                                    ELSE IS-DUMMYTYPE?                                                   IF DUMMYTYPEAD !                                                ELSE 4 - BODY> CHECK-LOCALITY                                   THEN                                                       THEN                                                         -->                                                                                                                                                                                      ( #10 Object-creating                                06/30/89 )        ELSE DROP define                                                THEN                                                         THEN ;                                                      : DEF-OBJ ( def: DEF-OBJ XXX ;  use: --- PFA )                      CREATE-OBJ                                                      0 C, 0 C, 0 C,        ( L T M )                                 LATEST C@ 31 AND C,   ( N )                                     0 , ;                 ( targ )                              : ANON-OBJ (  ---  >table ;  creates table with no name )           1 HERE C! 96 HERE 1+ C!                                         define HERE 0 , 0 , ;                                       : SET-L&T ( L T >table --- )                                        ROT OVER C! 1+ C! ;                                         : word WORD ; ( Forth WORD is no longer valid !!! )              -->                                                            \ #11 Standard identifiers                           06/30/89 ) DEF-OBJ PROC     8 14 PROC     SET-L&T B/WORD , 0 , 0 , 0 ,     DEF-OBJ INT/CARD 11 3 INT/CARD SET-L&T B/WORD ,                 DEF-OBJ INTEGER  11 1 INTEGER  SET-L&T B/WORD ,                 DEF-OBJ CARDINAL 11 2 CARDINAL SET-L&T B/WORD ,                 DEF-OBJ CHAR     11 6 CHAR     SET-L&T 1 , 256 ,                DEF-OBJ STRING   11 7 STRING   SET-L&T 256 ,                    DEF-OBJ WORD     11 8 WORD     SET-L&T B/WORD ,                 DEF-OBJ BOOLEAN  8 10 BOOLEAN  SET-L&T B/WORD , 2 , 0 ,         DEF-OBJ TRUE     7  0 TRUE     SET-L&T BOOLEAN , 1 , 0 ,        DEF-OBJ FALSE    7  0 FALSE    SET-L&T BOOLEAN , 0 , TRUE ,     FALSE BOOLEAN 8 POINTER!                                        DEF-OBJ REAL     11 5 REAL     SET-L&T B/WORD ,  ( ??? )        DEF-OBJ LONGINT  11 11 LONGINT SET-L&T B/WORD 2 * ,             DEF-OBJ LONGREAL 11 12 LONGREAL SET-L&T B/WORD 2 * ,            DEF-OBJ ADDRESS  8  8 ADDRESS  SET-L&T B/WORD , WORD ,  -->     \ #12   MA-stack                                     06/30/89 ) : IS-BOOL? ( >type --- >type flag )                                 DUP BOOLEAN = ;                                             64 CONSTANT MA-LIMIT ( max depth for proc. declarations )       VARIABLE MA-SP  ( memory allocation stack pointer )             VARIABLE MA-STACK ( begin of memory under MA stack )            MA-LIMIT 12 * ALLOT                                             : MA ( --- addr ; address of the top ) MA-SP @ ;                : MA-INIT ( --- ) MA-STACK DUP MA-LIMIT 12 * ERASE MA-SP ! ;    : CURR-BLOCK ( --- >table ) MA @ ;                              : >MA-BLOCK ( >proctable --- ) 12 MA-SP +! MA ! ;               : MA-BLOCK> ( --- >proctable ) MA @ -12 MA-SP +! ;              : CURR-FFLAD ( --- fflad ) MA 4 + ;                             64 CONSTANT MM-LIMIT                                            VARIABLE MM-SP                                                   -->                                                            \ #13   MM-stack  B-stack                            06/30/89 ) VARIABLE MM-STACK  MM-LIMIT 12 * ALLOT ( module stack )         : MM MM-SP @ ;                                                  : CURR-MOD ( --- >modtable ) MM @ ;                             : >MM-MOD ( >modtable --- ) 12 MM-SP +! MM ! ;                  : MM-MOD> ( --- >modtable ) CURR-MOD -12 MM-SP +! ;             : CURR-CURRAD ( --- ad ) MM 4 + ;                               : MM-INIT ( --- ) MM-STACK DUP MM-LIMIT 12 * ERASE MM-SP ! ;    VARIABLE B-SP                                                   VARIABLE B-STACK MM-LIMIT MA-LIMIT + ALLOT                      : B-INIT ( --- ) B-STACK DUP MM-LIMIT MA-LIMIT + ERASE B-SP ! ; : B-AD ( --- ad ) B-SP @ ;                                      : B> ( --- 14/15 ) B-AD C@ -1 B-SP +! ;                         : >BP ( --- ) 1 B-SP +! 14 B-AD C! ;                            : >BM ( --- ) 1 B-SP +! 15 B-AD C! ;                             -->                                                            \ #14   LOCVOC                                       09/26/89 ) BASE @ HEX                                                      : CREATE-LOCVOC ( --- )                                             01 C, 25 C, -2 ALLOT build IMMEDIATE                            81 C, A0 C, ['] FORTH 0A + CURRENT @ =                          IF 0 , ELSE CURRENT @ 2 - , THEN                                HERE VOC-LINK @ , VOC-LINK !                                    DOES> 2+ CONTEXT ! ;                                        BASE !                                                          : LOCVOC-CFA ( --- cfa ) LATEST NAME> ;                         : ~ ;                                                           : RCFAERASE ( --- )                                                 PASSBUF PASSTAB !                                               PASSTAB @ #RCFA 4 * ERASE ;                                 VARIABLE MBASELEN                                                -->                                                            \ #15 PRTAB$                                         06/30/89 ) : PRTAB$ ( --- ; PRTAB XXX )                                        >BP DEF-OBJ PH-FLAG @                                           IF PH-FLAG @ >MA-BLOCK 0 MA 8 + !                               ELSE  5 B/WORD * MBASELEN +!                                        LATEST-TAB >MA-BLOCK 0 MA 8 + !                                 14 0 CURR-BLOCK SET-L&T                                         1 #PROC +!  PROC , #PROC @ , ['] ENVIRONMENT ,          ( exec ) HERE DUP LATEST-TAB 4 + !                                      PASSTAB @ #PROC @ 1 - #RCFA MIN 4 * + !                         #PROC @ ,  0 , SYS-FFL , HERE 128 ERASE 128 ALLOT               CREATE-LOCVOC LOCVOC-CFA CURR-BLOCK 8 TAB!                      ANON-OBJ DUP CURR-BLOCK 0 TAB! 9 14 ROT SET-L&T                 B/WORD , 0 , 0 , 0 , HERE 128 ERASE 128 ALLOT               THEN                                                            CURR-BLOCK 4 - BODY> >NAME CR ." Procedure " .NAME -->      ( #16 cont.                                          10/10/89 )     CURR-BLOCK ?TARG 8 + @ ( ffl ) CURR-FFLAD !                     CURR-BLOCK 8 TAB@ EXECUTE DEFINITIONS                           PH-FLAG @ IF ASCII ~ word DROP PAIN.PROC 0 PH-FLAG ! THEN ; : MASTER-PROC-NR ( --- n )                                          MA-SP @ MA-STACK = IF 0 ELSE CURR-BLOCK 4 TAB@ THEN ;       : MOD-ID ( >modtable --- )                                          1 MODFLAG ! >BM >MM-MOD CONTEXT @ CURR-CURRAD !                 CURR-MOD INFO + 14 + CONTEXT !                                  0 CURR-MOD 4 - BODY> >LINK                                      DUP @ CURR-MOD 8 TAB! ! ; IMMEDIATE                         : PTRTYPE$ ( --- ; PTRTYPE$ XXX )                                   BL word FIND OVER OBJ? AND                                      IF DROP                                                         ELSE DROP define 10 C, 0 C, 0 C, LATEST C@ 31 AND C, 0 ,            B/WORD , 0 , THEN ;  -->                                \ #17 end of block                                   10/11/89 ) : END-BLOCK ( --- ) CR ." End of "  B> 14 =                         IF CURR-FFLAD @ MA-BLOCK>                                           DUP 4 - BODY> >NAME ." procedure " .NAME                        ?TARG 8 + ! MA-SP @ MA-STACK =                                  IF B-STACK B-SP @ =                                                 IF [COMPILE] ENVIRONMENT                                        ELSE MM @ INFO + 14 + CONTEXT ! THEN                        ELSE B-AD C@ 14 =                                                 IF CURR-BLOCK 8 TAB@ EXECUTE                                    ELSE CURR-CURRAD @ CONTEXT !                                    CURR-MOD DUP 8 TAB@ SWAP 4 - BODY> >LINK ! THEN THEN      ELSE CURR-CURRAD @ CONTEXT ! MM-MOD>                                DUP 4 - BODY> >NAME ." module " .NAME                           DUP 8 TAB@ SWAP 4 - BODY> >LINK !                           THEN DEFINITIONS ; -->                                      \ #18 ARRAY-TAB                                      09/26/89 ) : #ELEMS (  >typetable  ---  number_of_units  )                     DUP ?T 15 = IF 4 POINTER THEN 4 TAB@ ;                      : ARRAY-TAB  (  >indextype  >eltype  ---  >arraytype )              9 12 ANON-OBJ DUP >R SET-L&T R> 2 PICK #ELEMS                   2 PICK ?TSIZE    ( elem.len. in bytes )                         * , >R , , R> ;                                             : TYPE-DROP DROP ;                                              : TYPE-DUP DUP ;                                                : HIDDEN-TYPE ( --- >table )                                        ANON-OBJ DUP 10 0 ROT SET-L&T 0 , 0 , ;                     : SET-LOC  15 1 CURR-MOD SET-L&T ;                              : SET-DEF  15 2 CURR-MOD SET-L&T ;                              : SET-IMPL 15 3 CURR-MOD SET-L&T ;                              : SET-MAIN 15 4 CURR-MOD SET-L&T ;                               -->                                                            \ #19 TYPE$                                          06/30/89 ) : TYPE$ (  >typetab  ---  ; in form TYPE$ XXX )                     DEF-OBJ DUMMYTYPEAD @                                           IF  DUMMYTYPEAD @ ?N IF 8 ELSE 9 THEN                               15 DUMMYTYPEAD @ SET-L&T                                        DUP ?TSIZE DUMMYTYPEAD @ 0 TAB!                                 DUMMYTYPEAD @ 4 TAB!                                            DUMMYTYPEAD @ ?TSIZE DEF-OBJ-AD @ 0 TAB!                        PAIN.DUMMY 0 DUMMYTYPEAD !                                  ELSE                                                            8 15 LATEST-TAB SET-L&T DUP ?TSIZE , , THEN ;               : I/C ( u --- u type ;  2 - card, 3 - int/card )                    DUP 2147483648 U< IF 3 ELSE 2 THEN ;                        : OCT$ ( --- u ; in form OCT$ OOO )                                 BL word OCTAL NUMBER DROP DECIMAL ;                          -->                                                            \ #20   constant handling                            10/10/89 ) : HEX$ ( --- u ; in form HEX$ HHH )                                 BL word HEX NUMBER DROP DECIMAL ;                           : $PRIORITY ( u --- )                                               CURR-BLOCK 0 TAB! ;                                         : REAL$ ( --- longreal type ; in form REAL$ RRR )                   BL word ENUMBER 5 ;                                         : ALLOT-STR ( ad T --- ad T )                                       >R HERE DUP >R OVER C@ 1+ DUP ALLOT CMOVE R> R> ;           VARIABLE STRFIELD 252 ALLOT                                     : STR' ( ---  counted_str_ad  type  ; in form STR' CCC ' )          ASCII ' word STRFIELD 256 CMOVE                                 STRFIELD C@ 1 - STRFIELD C!                                     STRFIELD DUP C@ 1 = IF 6 ELSE 7 THEN ;                       -->                                                                                                                            \ #21      constant handling                         10/10/89 ) : STR" ( ---  counted_str_ad  type  ; in form STR" CCC " )          ASCII " word STRFIELD 256 CMOVE                                 STRFIELD C@ 1 - STRFIELD C!                                     STRFIELD DUP C@ 1 = IF 6 ELSE 7 THEN ;                      : $CHAR ( u --- counted_string_addr type )                          1 STRFIELD C! STRFIELD 1+ C! STRFIELD 6 ;                   VARIABLE VSECT-FLAG                                             : CUR-PAR-NR ( --- addr )                                           CURR-BLOCK 0 TAB@ INFO + 4 + ;                              : 0PNUM! ( --- )                                                    0 CUR-PAR-NR ! ;                                            : VAR-SECT -1 VSECT-FLAG ! ;                                    : VALUE-SECT 0 VSECT-FLAG ! ;                                   : $FUNCT ( >valtype --- )                                           CURR-BLOCK 0 TAB@ 8 TAB! ;    -->                           \ #22 formal parameters                              10/10/89 ) : INCPNUM&!TAB ( --- ; latest is the parameter )                    1 CUR-PAR-NR +!  CURR-BLOCK 0 TAB@ ( >proctype )                VSECT-FLAG @ IF DUP CUR-PAR-NR @ !PARMMODE THEN                 LATEST-TAB 0 TAB@ CUR-PAR-NR @ !PARMTYPE                        CUR-PAR-NR @ LATEST-TAB 8 TAB! ( Juurdetehtud osa )             CUR-PAR-NR @ B/WORD * B/WORD + CURR-BLOCK 0 TAB@ 0 TAB!         LATEST-TAB ?TARG CURR-BLOCK ?TARG CUR-PAR-NR @ 4 * 8 + + !      CURR-BLOCK 0 TAB@ CUR-PAR-NR @ ?PARMMODE                        IF B/WORD LATEST-TAB 12 OVER OVER TAB@ >R TAB! R>  ( old )         B/WORD SWAP - CURR-FFLAD +!                                  THEN                                                            LATEST-TAB 0 TAB@ ?T 7 =   ( flexarray or string )              IF B/WORD 2 * LATEST-TAB 12 OVER OVER TAB@ >R TAB! R>              B/WORD 2 * SWAP - CURR-FFLAD +!                              THEN  B/WORD MBASELEN +! ;  -->                             \ #23 CONST-TAB                                      10/10/89 ) : $ARRAY-OF ( >eltype --- >flexarraytype )                          ANON-OBJ SWAP OVER 9 7 ROT SET-L&T 256 , , CARDINAL , ;     : $SET-OF ( >eltype --- >settype )                                  ANON-OBJ DUP 9 9 ROT SET-L&T B/WORD , SWAP , ;              : $POINTER-TO ( >eltype --- >ptrtype )                              ANON-OBJ DUP 9 8 ROT SET-L&T B/WORD , SWAP , ;              : CONST-TAB  (  const  T  ---  >consttable  )                       6 OVER ANON-OBJ DUP >R SET-L&T R> ROT ROT                       CASE 1 OF INTEGER , , ENDOF 2 OF CARDINAL , , ENDOF                  3 OF INT/CARD , , ENDOF                                         5 OF LONGREAL , SWAP , , ENDOF                                  6 OF CHAR , 1 C, 1+ C@ C, ENDOF                                10 OF DUP 0 TAB@ , 4 TAB@ , ENDOF                              SWAP INT/CARD , ,                                            ENDCASE ;  -->                                              \ #24  RANGE-TAB                                     06/30/89 ) : RANGE-TAB0 (  const1  T1  const2  T2  ---  >rangetypetable  )     CONST-TAB ROT ROT CONST-TAB                                     9 11 ANON-OBJ DUP >R SET-L&T R>                                 OVER ?TYPE ?TSIZE ,                                             2 PICK DUP ?T 6 = IF 4 TAB@ 8 ->L 255 AND ELSE 4 TAB@ THEN      2 PICK DUP ?T 6 = IF 4 TAB@ 8 ->L 255 AND ELSE 4 TAB@ THEN      - ABS 1 + , OVER ?TYPE ,                                        SWAP , SWAP , ;                                             : RANGE-TAB ( >consttable T --- >rangetypetable )                   11 =                                                            IF   >R R@ 8 TAB@ R@ 16 TAB@ R@ 12 TAB@ R> 20 TAB@                   RANGE-TAB0                                                 ELSE 4 - BODY> >NAME CR ." Invalid use of " .NAME ERR_EXIT      THEN ;                                                       -->                                                            \ #25 MODTAB$ RES-CONTEXT                            10/11/89 ) : MODTAB$ ( --- ; MODTAB$ XXX )                                     DEFMODULEAD @                                                   IF DEFMODULEAD @ [COMPILE] MOD-ID DEFINITIONS PAIN.MODULE           0 MODFLAG ! 0 DEFMODULEAD ! BL word DROP                    ELSE >BM DEF-OBJ LATEST-TAB >MM-MOD 0 MM 8 + !                      15 4 CURR-MOD SET-L&T 0 , MASTER-PROC-NR ,                      LATEST NAME> >LINK @ , 129 C, 160 C,                            HERE LATEST , 0 , CURRENT @ CURR-CURRAD !                       0 LATEST NAME> >LINK ! CONTEXT ! DEFINITIONS                THEN ." module " CURR-MOD 4 - BODY> >NAME .NAME CR ;        : RES-CONTEXT ( --- )                                               MODFLAG @ IF 0 MODFLAG !                                        CURR-MOD 8 TAB@ CURR-MOD 4 - BODY> >LINK !                      CURR-CURRAD @ CONTEXT ! B> DROP MM-MOD> DROP                    THEN ; IMMEDIATE   -->                                      \ #26  import  export                                10/11/89 ) : IMPORT-ON ( --- )                                                 CURR-CURRAD @ CONTEXT ! CURR-MOD DUP 8 TAB@ SWAP 4 -            BODY> >LINK ! ;                                             : IMPORT-OFF ( --- )                                                CURRENT @ CONTEXT ! 0 CURR-MOD 4 - BODY> >LINK ! ;          : EXPORT$ ( --- ; EXPORT$ XXX )                                     BL word FIND                                                    IF DUP OBJ?                                                         IF EXECUTE specconst                                            ELSE CR ." Export of " >NAME .NAME                                   ."  isn't possible!" ERR_EXIT                              THEN                                                        ELSE CR ." Object " COUNT TYPE                                       ."  not found for export!" ERR_EXIT                        THEN ; -->                                                  \ #27  export; from                                  10/11/89 ) : EXPORT-ON ( --- )                                                 MM 12 + @ INFO + 14 + CONTEXT ! ;                           : EXPORT-OFF ( --- )                                                MM 16 + @ CONTEXT ! ;                                       : FROM$ ( --- ; FROM$ XXX )                                         BL word FIND                                                    IF DUP >BODY 4 + IS-MODULE? SWAP DROP                              IF EXECUTE [COMPILE] MOD-ID                                     ELSE >NAME CR .NAME ."  is not a module!" ERR_EXIT              THEN                                                         ELSE CR COUNT TYPE ."  is undefined module name!" ERR_EXIT      THEN ;                                                      : FROM-OFF ( --- )                                                  [COMPILE] RES-CONTEXT ;                                      -->                                                            \ #28 CONST$                                         10/14/89 ) : CONST$ (  const  T  ---  ;  in form  CONST$ XXX )                DEF-OBJ 5 OVER LATEST-TAB SET-L&T                               CASE 1 OF INTEGER , , ENDOF  2 OF CARDINAL , , ENDOF                 3 OF INT/CARD , , ENDOF                                         5 OF LONGREAL , SWAP , , ENDOF                                  6 OF CHAR , 1 C, 1+ C@ C, ENDOF                                 7 OF CHAR , DUP C@ 1+ HERE SWAP DUP ALLOT CMOVE                  LATEST-TAB 9 12 ANON-OBJ DUP >R SET-L&T R> OVER 0 TAB!          INFO + 4 + C@ , CHAR , CARDINAL , ENDOF                        8 OF ADDRESS , , ENDOF                                          9 OF DUP 0 TAB@ , 4 TAB@ , ENDOF                                10 OF DUP 0 TAB@ , 4 TAB@ , ENDOF                               11 OF DUP , DUP 8 TAB@ , 12 TAB@ , ENDOF                      SWAP INT/CARD , ,                                            ENDCASE ; -->                                                \ #29 proctype                                       10/14/89 ) : SYS-STR$ ( c T --- ) CONST$ ;                                 0 8 CONST$ NIL                                                  VARIABLE PROC-TYPE-AD                                           : PARAM-NO-AD ( --- addr )                                          PROC-TYPE-AD @ INFO + 4 + ;                                 : TLIST-START ( --- )                                               ANON-OBJ PROC-TYPE-AD ! B/WORD , 0 , 0 , 0 , HERE 128 ERASE     128 ALLOT 9 14 PROC-TYPE-AD @ SET-L&T ;                     : TLIST-FINISH ( --- >proctype )                                  PARAM-NO-AD @ B/WORD * B/WORD +                                 PROC-TYPE-AD @ 0 TAB! PROC-TYPE-AD @ ;                        : $FUNVALPLACE ( >fnvaltype --- )                                   PROC-TYPE-AD @ 8 TAB! ;                                      -->                                                                                                                            \ #30          VAR$                                  10/14/89 ) : $VARPLACE ( >paramtype --- )                                      1 PARAM-NO-AD +! PROC-TYPE-AD @ SWAP PARAM-NO-AD @ !PARMTYPE    PROC-TYPE-AD @ PARAM-NO-AD @ !PARMMODE ;                    : $VALUEPLACE ( >paramtype --- )                                    1 PARAM-NO-AD +!                                                PROC-TYPE-AD @ SWAP PARAM-NO-AD @ !PARMTYPE ;               : VAR$ (  >type-table  ---  ; in form VAR$ XXX )                    DEF-OBJ  DUP , MA-SP @ MA-STACK = IF 0 ELSE CURR-BLOCK THEN     , 0 , ?TSIZE  DUP , 0 , MA-SP @ MA-STACK =                      IF ST-FFL ELSE CURR-FFLAD THEN                                  DUP @ LATEST-TAB 4 + ! +!                                       1 0 LATEST-TAB SET-L&T ;                                    : NO-IMPORT ;                                                   : M$ BL word DROP ;                                             : BODY-END ; -->                                                \ #31   chain                                        10/15/89 ) : ADD-TO-CHAIN ( cfa chainad --- )                                  BEGIN DUP @                                                     WHILE @                                                         REPEAT HERE SWAP ! 0 , , ;                                                                                                  : CHAIN-STARTAD ( --- chainad )                                     B-AD 1 - B-STACK =                                              IF EXT-CHAIN                                                    ELSE B-AD 1 - C@ 14 =                                               IF MA 8 +                                                       ELSE MM 4 -                                                     THEN                                                        THEN ;                                                       -->                                                                                                                            \ #32  BODY-BEGIN  BLBODY$                           10/15/89 ) : BODY-BEGIN ( --- ; IMMEDIATE )                                    B-AD C@ 14 = IF MA ELSE MM THEN 8 +                             BEGIN DUP @                                                     WHILE @ DUP 4 + @ ,                                             REPEAT DROP ; IMMEDIATE                                     : BLBODY$ ( BLBODY$ XXX )                                           B-AD C@ 14 =                                                    IF   ' CURR-BLOCK ?TARG 4 + !                                   ELSE ' DUP CURR-MOD 4 + ! CHAIN-STARTAD ADD-TO-CHAIN THEN ; DEF-OBJ MAX   13 1 MAX   SET-L&T                                DEF-OBJ MIN   13 2 MIN   SET-L&T                                DEF-OBJ SIZE  13 3 SIZE  SET-L&T                                DEF-OBJ VAL   13 4 VAL   SET-L&T -->                                                                                                                                                            \ #33 Built-in procedures                            10/15/89 ) DEF-OBJ ABS   13 5 ABS   SET-L&T                                DEF-OBJ CHR   13 6 CHR   SET-L&T                                DEF-OBJ FLOAT 13 7 FLOAT SET-L&T                                DEF-OBJ ODD   13 8 ODD   SET-L&T                                DEF-OBJ ORD   13 9 ORD   SET-L&T                                DEF-OBJ TRUNC 13 10 TRUNC SET-L&T                               DEF-OBJ CAP   13 11 CAP   SET-L&T                               DEF-OBJ HIGH  13 12 HIGH  SET-L&T                               DEF-OBJ EXCL  13 13 EXCL  SET-L&T                               DEF-OBJ INCL  13 14 INCL  SET-L&T                               DEF-OBJ DEC   13 15 DEC   SET-L&T                               DEF-OBJ INC   13 16 INC   SET-L&T                               DEF-OBJ HALT  13 17 HALT  SET-L&T                               DEF-OBJ ADR   13 18 ADR   SET-L&T                                -->                                                            \ #34                                                10/15/89 ) : CSTR+  (  countedstr1  countedstr2  ---  countedstr1  ;                         cs1:=cs1+cs2  )                                   OVER COUNT + OVER COUNT >R SWAP R> CMOVE                        COUNT SWAP DROP OVER COUNT SWAP DROP + OVER C! ;            : S= ( addr1 addr2 len --- flag )                                   DUP                                                             IF                                                                  >R >R >R -1 R> R> R> 0                                          DO ( flag a1 a2 )                                                   OVER I + C@ *CAP OVER I + C@ *CAP = 0=                          IF ROT DROP 0 ROT ROT LEAVE THEN                            LOOP DROP DROP                                              ELSE DROP DROP DROP -1                                          THEN ;                                                       -->                                                            \ #35                                                10/19/90 )                                                                 : M.R.TABLE$ ( --- ; in form M.R.TABLE$ XXX; use: --- mrtab )       <BUILDS 0 , M.R.TABLEN 4 - ALLOT                                DOES> ;                                                                                                                     : M.R.ELAD ( i mrtab --- mrelad; i = 1 .. M.R.MAX#EL )              4 + SWAP 1 - M.R.ELLEN * + ;                                                                                                : M.R.#EL ( mrtab --- nad )                                         ;                                                                                                                           : M.R.NAME ( i mrtab --- countedstrad )                             M.R.ELAD ;                                                                                                                  -->                                                             \ #36                                                10/19/90 )                                                                 : CS= ( countedstrad1 countedstrad2 --- flag )                      COUNT ROT COUNT ROT OVER =                                      IF S= ELSE DROP DROP DROP 0 THEN ;                                                                                          : M.R.SEARCHNAME ( countedstrad mrtab --- i / 0 )                   0 ROT ROT DUP M.R.#EL @ DUP                                     IF 1+ 1                                                             DO I OVER M.R.NAME 2 PICK CS=                                       IF ROT DROP I ROT ROT LEAVE                                     THEN                                                        LOOP DROP DROP                                              ELSE DROP DROP DROP                                             THEN ;                                                       -->                                                            \ #37                                                12/04/90 )                                                                 : M.R.DEFEL ( countedstrad mrtab --- i )                            OVER COUNT SWAP DROP DUP 5 < SWAP 12 > OR                       IF   DROP CR ." File: " COUNT TYPE ."  ???" 0                   ELSE                                                                 OVER OVER M.R.SEARCHNAME DUP                                    IF   SWAP DROP SWAP CR ." Exists: " COUNT TYPE ."  !!!"         ELSE                                                                 DROP DUP M.R.#EL @ 1+ DUP M.R.MAX#EL >                          IF   DROP CR . ."  table full! " COUNT TYPE 0                   ELSE                                                                 DUP  2 PICK M.R.#EL ! DUP ROT M.R.NAME                          DUP 14 ERASE ROT DUP C@ 1+ >R SWAP R> CMOVE      THEN THEN THEN ;                                             -->                                                            \ #38                                                12/04/90 )                                                                 : M.R.DICTBASE   ( i mrtab --- addr ) M.R.ELAD 14 + ;           : M.R.DICTLEN    ( i mrtab --- addr ) M.R.ELAD 18 + ;           : M.R.SETBASE    ( i mrtab --- addr ) M.R.ELAD 22 + ;           : M.R.SETLEN     ( i mrtab --- addr ) M.R.ELAD 26 + ;           : M.R.ASMBASE    ( i mrtab --- addr ) M.R.ELAD 30 + ;           : M.R.ASMLEN     ( i mrtab --- addr ) M.R.ELAD 34 + ;           : M.R.FFLSTART   ( i mrtab --- addr ) M.R.ELAD 38 + ;           : M.R.FFLLEN     ( i mrtab --- addr ) M.R.ELAD 42 + ;           : M.R.#PROCSTART ( i mrtab --- addr ) M.R.ELAD 46 + ;           : M.R.#PROCLEN   ( i mrtab --- addr ) M.R.ELAD 50 + ;           : M.R.LATESTAD   ( i mrtab --- addr ) M.R.ELAD 54 + ;           : M.R.#PAINAD    ( i mrtab --- addr ) M.R.ELAD 58 + ;                                                                            -->                                                            \ #39                                                12/04/90 )                                                                 : M.R.SEARCHDICT ( dictad mrtab --- i/0 )                           0 ROT ROT DUP M.R.#EL @ DUP                                     IF 1+ 1                                                            DO I OVER M.R.DICTBASE @ 2 PICK OVER I 4 PICK                      M.R.DICTLEN @ + OVER SWAP U< ROT ROT SWAP U< NOT AND            IF ROT DROP I ROT ROT LEAVE                                     THEN                                                         LOOP DROP DROP                                               ELSE DROP DROP DROP                                             THEN ;                                                      -->                                                                                                                                                                                                                                                             \ #40                                                12/04/90 )                                                                 : M.R.SEARCHSET ( setdictad mrtab --- i/0 )                         0 ROT ROT DUP M.R.#EL @ DUP                                     IF 1+ 1                                                            DO I OVER M.R.SETBASE @ 2 PICK OVER I 4 PICK                       M.R.SETLEN @ + OVER SWAP U< ROT ROT SWAP U< NOT AND             IF ROT DROP I ROT ROT LEAVE                                     THEN                                                         LOOP DROP DROP                                               ELSE DROP DROP DROP                                             THEN ;                                                                                                                       -->                                                                                                                                                                                            \ #41                                                10/15/89 )                                                                 : M.R.SEARCHASM ( asmdictad mrtab --- i/0 )                         0 ROT ROT DUP M.R.#EL @ DUP                                     IF 1+ 1                                                            DO I OVER M.R.ASMBASE @ 2 PICK OVER I 4 PICK                       M.R.ASMLEN @ + OVER SWAP U< ROT ROT SWAP U< NOT AND             IF ROT DROP I ROT ROT LEAVE                                     THEN                                                         LOOP DROP DROP                                               ELSE DROP DROP DROP                                             THEN ;                                                                                                                       -->                                                                                                                                                                                            \ #42                                                12/13/90 )                                                                 : M.R.SEARCHFFL ( ffl mrtab --- i/0 )                               0 ROT ROT DUP M.R.#EL @ DUP                                     IF 1+ 1                                                            DO I OVER M.R.FFLSTART @ 2 PICK OVER I 4 PICK                      M.R.FFLLEN @ + OVER SWAP U< ROT ROT SWAP U< NOT AND             IF ROT DROP I ROT ROT LEAVE                                     THEN                                                         LOOP DROP DROP                                               ELSE DROP DROP DROP                                             THEN ;                                                                                                                       -->                                                                                                                                                                                            \ #43                                                10/15/89 )                                                                 : M.R.SEARCH#PROC ( procnr mrtab --- i/0 )                          0 ROT 1 - ROT DUP M.R.#EL @ DUP                                 IF 1+ 1                                                            DO I OVER M.R.#PROCSTART @ 2 PICK OVER I 4 PICK                    M.R.#PROCLEN @ + OVER SWAP U< ROT ROT SWAP U< NOT AND           IF ROT DROP I ROT ROT LEAVE                                     THEN                                                         LOOP DROP DROP                                               ELSE DROP DROP DROP                                             THEN ;                                                                                                                       -->                                                                                                                                                                                            \ #44                                                01/16/90 )                                                                 M.R.TABLE$ M.R.INPTABLE                                                                                                         : DICT.W->R? (  addr  ---  offaddr/addr   flag  )                   DUP M.R.INPTABLE M.R.SEARCHDICT DUP                             IF DUP M.R.INPTABLE M.R.NAME M.R.OUTTABLE M.R.SEARCHNAME DUP       IF M.R.OUTTABLE M.R.DICTBASE @ SWAP                                M.R.INPTABLE M.R.DICTBASE @ - + -1 ( trueflag )              ELSE DROP M.R.INPTABLE M.R.NAME CR COUNT TYPE ."  ?? "             DUP . ."  in dict possibly at " OVER . 0                     THEN                                                         THEN ;                                                                                                                       -->                                                                                                                            \ #45                                                01/31/90 )                                                                 : SET.W->R? (  addr  ---  offaddr/addr   flag  )                    DUP M.R.INPTABLE M.R.SEARCHSET DUP                              IF DUP M.R.INPTABLE M.R.NAME M.R.OUTTABLE M.R.SEARCHNAME DUP       IF M.R.OUTTABLE M.R.SETBASE @ SWAP                                 M.R.INPTABLE M.R.SETBASE @ - + -1 ( trueflag )               ELSE DROP M.R.INPTABLE M.R.NAME CR COUNT TYPE ."  ?? "             DUP . ."  in settable possibly at " OVER . 0                 THEN                                                         THEN ;                                                                                                                      : IN-DICT? ( nfa --- flag )                                         M.R.OUTTABLE M.R.SEARCHDICT M.R.OUTTABLE M.R.#EL @ = ;                                                                       -->                                                            \ #46                                                10/15/89 ) : ASM.W->R? (  addr  ---  offaddr/addr   flag  )                    DUP M.R.INPTABLE M.R.SEARCHASM DUP                              IF DUP M.R.INPTABLE M.R.NAME M.R.OUTTABLE M.R.SEARCHNAME DUP       IF M.R.OUTTABLE M.R.ASMBASE @ SWAP                                 M.R.INPTABLE M.R.ASMBASE @ - + -1 ( trueflag )               ELSE DROP M.R.INPTABLE M.R.NAME CR COUNT TYPE ."  ?? "             DUP . ."  in asm possibly at " OVER . 0                      THEN                                                         THEN ;                                                                                                                      : W->R (  addr  ---  offaddr/addr  )                                DICT.W->R? NOT                                                  IF SET.W->R? NOT IF ASM.W->R? DROP THEN                         THEN ;                                                       -->                                                            \ #47                                                01/16/90 ) : GLIT.W->R (  ffl  ---  off-ffl  )                                 DUP M.R.INPTABLE M.R.SEARCHFFL DUP                              IF DUP M.R.INPTABLE M.R.NAME M.R.OUTTABLE M.R.SEARCHNAME DUP       IF M.R.OUTTABLE M.R.FFLSTART @ SWAP                                M.R.INPTABLE M.R.FFLSTART @ - +                              ELSE DROP M.R.INPTABLE M.R.NAME CR COUNT TYPE                      ."  ?? FFL=" DUP . ."  possibly at " OVER .                  THEN                                                         ELSE DROP DUP CR ." FFL??" . ."  possibly at " OVER .           THEN ;                                                      : IN-SETTAB? ( nfa --- flag )                                       M.R.OUTTABLE M.R.SEARCHSET M.R.OUTTABLE M.R.#EL @ = ;       : IN-ASM? ( nfa --- flag )                                          M.R.OUTTABLE M.R.SEARCHASM M.R.OUTTABLE M.R.#EL @ = ;        -->                                                            \ #48                                                01/31/90 ) : PLIT.W->R (  procnr  ---  off-procnr  )                           DUP M.R.INPTABLE M.R.SEARCH#PROC DUP                            IF DUP M.R.INPTABLE M.R.NAME M.R.OUTTABLE M.R.SEARCHNAME DUP       IF M.R.OUTTABLE M.R.#PROCSTART @ SWAP                              M.R.INPTABLE M.R.#PROCSTART @ - +                            ELSE DROP M.R.INPTABLE M.R.NAME CR COUNT TYPE                      ."  ?? Proc=" DUP . ."  possibly at " OVER .                 THEN                                                         ELSE DROP DUP CR ." #PROC??" . ."  possibly at " OVER .         THEN ;                                                      : plit-cont ( ad --- ad )                                           DUP @ PLIT.W->R OVER ! ;                                    : glit-cont ( ad --- ad )                                           DUP @ MODBASE @ - GLIT.W->R MODBASE @ + OVER ! ;             -->                                                            \ #49                                                10/15/89 )                                                                 : M.R.OUTBASES ( i --- )                                            HERE OVER M.R.OUTTABLE M.R.DICTBASE !                           SETTABLE-DP @ OVER M.R.OUTTABLE M.R.SETBASE !                   ADP @ OVER M.R.OUTTABLE M.R.ASMBASE !                           ST-FFL @ OVER M.R.OUTTABLE M.R.FFLSTART !                       #PROC @ OVER M.R.OUTTABLE M.R.#PROCSTART !                      0 #PAIN !                                                       DROP ;                                                                                                                       -->                                                                                                                                                                                                                                                                                                                            \ #50                                                01/16/90 ) : M.R.OUTLENS ( i --- )                                             HERE OVER M.R.OUTTABLE M.R.DICTBASE @ -                         OVER M.R.OUTTABLE M.R.DICTLEN !                                 SETTABLE-DP @ OVER M.R.OUTTABLE M.R.SETBASE @ -                 OVER M.R.OUTTABLE M.R.SETLEN !                                  ADP @ OVER M.R.OUTTABLE M.R.ASMBASE @ -                         OVER M.R.OUTTABLE M.R.ASMLEN !                                  ST-FFL @ OVER M.R.OUTTABLE M.R.FFLSTART @ -                     OVER M.R.OUTTABLE M.R.FFLLEN !                                  #PROC @ OVER M.R.OUTTABLE M.R.#PROCSTART @ -                    OVER M.R.OUTTABLE M.R.#PROCLEN !                                LATEST OVER M.R.OUTTABLE M.R.LATESTAD !                         #PAIN @ SWAP M.R.OUTTABLE M.R.#PAINAD ! ;                    -->                                                                                                                            \ #51                                                01/31/90 ) 256 CONSTANT LBUFLEN                                            : CYKLWRITE ( ad len handle pars --- )                              ROT LBUFLEN /MOD SWAP >R DUP                                    IF  0 DO                                                                 2 PICK LBUFLEN 3 PICK 3 PICK LWRITE                             ROT LBUFLEN + ROT ROT                                        LOOP 0                                                    THEN  DROP R> ROT ROT LWRITE ;                              : CYKLREAD ( ad len handle pars --- flag )                          ROT LBUFLEN /MOD SWAP >R DUP                                    IF  0 DO                                                                 2 PICK LBUFLEN 3 PICK 3 PICK LREAD DROP                         ROT LBUFLEN + ROT ROT                                        LOOP 0                                                    THEN  DROP R> ROT ROT LREAD ;   -->                         \ #52                                                10/15/89 )                                                                 : M.R.PASSTABAL ( i mrtab --- addr len )                            OVER OVER M.R.#PROCLEN @ ROT ROT M.R.#PROCSTART @ ( l s )       4 * PASSTAB @ + SWAP 4 * ;                                                                                                  : MOVE-FILENAME ( countedstrad  handle-pars --- )                   DROP 4 + OVER C@ 1+ OVER OVER + >R CMOVE R> 0 SWAP C! ;                                                                     : WRITE-SHORT ( i --- ; SCREEN-HANDLE; name & bases & lens ! )      DUP                                                             IF ( i )                                                            DUP M.R.OUTTABLE M.R.NAME SCREEN-HANDLE MOVE-FILENAME           SCREEN-HANDLE MAKE-FILE ?DISCERR                                CR ." Writing objectmodule: " SCREEN-HANDLE .FILENAME    -->                                                            ( #53                                                12/15/90 )         DUP M.R.OUTTABLE M.R.DICTBASE @ ( i nfa )                       N>LINK DUP @ ( i lfa cont ) OVER 0 SWAP ! ROT ( l c i )         M.R.OUTTABLE M.R.TABLEN SCREEN-HANDLE CYKLWRITE                 DUP M.R.OUTTABLE OVER OVER M.R.DICTBASE @ ROT ROT               M.R.DICTLEN @ SCREEN-HANDLE CYKLWRITE                           DUP M.R.OUTTABLE OVER OVER M.R.SETBASE @ ROT ROT                M.R.SETLEN @ SCREEN-HANDLE CYKLWRITE                            DUP M.R.OUTTABLE OVER OVER M.R.ASMBASE @ ROT ROT                M.R.ASMLEN @ SCREEN-HANDLE CYKLWRITE                            DUP M.R.OUTTABLE M.R.PASSTABAL SCREEN-HANDLE CYKLWRITE          PAIN.CHECK M.R.OUTTABLE M.R.#PAINAD @ 12 * PAIN.BUF             SWAP SCREEN-HANDLE CYKLWRITE SCREEN-HANDLE CLOSE-FILE           ?DISCERR ( lfa cont ) SWAP !  ."   (written)."              ELSE DROP CR ." Can't write objectmodule!!" ( ABORT )           THEN ; -->                                                  \ #54                                                01/31/90 )                                                                 ' DECIMAL @ CONSTANT COLDEF.CFCONT                                                                                              : NPAIRS$ BL word DROP BL word DROP ;                                                                                           : QUAL-ON ;                                                                                                                     : QUAL-OFF ;                                                                                                                     -->                                                                                                                                                                                                                                                                                                                                                                                            \ #55                                                10/15/89 )                                                                 HERE 2 C, ASCII C DUP C, C, 0 C, CONSTANT CCAD                  : SETTABLE-INIT SETTABLE-BUFFER SETTABLE-DP ! ;                 : SWITCH-TO-SETTABLE ( --- state dp current )                       STATE @ DUP                                                     IF [COMPILE] [ THEN                                             HERE SETTABLE-DP @ DP !                                         CURRENT @ DUP @ N>LINK CURRENT ! ;                          : SWITCH-BACK ( state dp current --- )                              CURRENT !                                                       HERE SETTABLE-DP !                                              DP !                                                            STATE ! ;                                                    ;S                                                                                                                             \ #56                                                01/16/90 )                                                                  -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \ #57                                                01/31/90 )                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 