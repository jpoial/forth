**************** Seosed objektide vahel ************************    So'nastikus esitab iga objekti nimi ja kompileerimispass.       Leidub ka ilma nimeta objekte.                                                                                              Kompileerimispass koosneb v@ljadest:                            -----------------                                               L  -    objekti liik, 8-bitti                                   T  -    t@psustaja, so'ltub v@ljast L, 8 bitti                  M  -    mooduli identifitseerimiseks (0..255), 8 bitti          N  -    nime pikkus (varuks, praegu ei kasutata), 8 bitti       EXEC -  lahendamisaadress (objektmasinas) / 0,  32-bitti        INFO -  so'ltub v@ljadest L ja T.                                                                                               Lahendamisaadressil on ainult lahendamisaegne info  objekt-     masina jaoks. Tagasisidet kompileerimispassi ei ole.                                                                            L n@itab objekti liiki (0 - liik pole m@@ratud) :               1 -  muutuja,                                                   2 -  avaldise v@@rtus (nimeta muutuja)                          3 -  kirjev@li,                                                -4 -  nimeta kirjev@li,                                         -5 -  konstant,                                                 T6 -  konstantavaldise v@@rtus (nimeta konstant),               T7 -  loendityybist p@rinev konstant (identifikaator),           8 -  tyyp (tavaline kasutajatyyp),                             T9 -  anonyymne (nimeta) tyyp,                                  T10 - "l@bipaistmatu" (struktuurita) tyyp,                       11 - standardtyyp,                                             T12 -                                                           -13 - standardprotseduur,                                       T14 - protseduur (tavaline kasutajaprotseduur),                  15 - moodul.                                                   TT v@@rtused konstantide (L=5,6) korral  (0 - pole m@@ratud) :   1 -  T@isarv: MinInt .. -1                                      2 -  T@isarv: MaxInt+1 .. MaxCard                               3 -  T@isarv: 0 .. MaxInt                                       4 -                                                             5 -  Reaalarv - LONGREAL                                        6 -  So'ne, pikkus = 1                                          7 -  So'ne, pikkus > 1                                          8 -  Nullviit  NIL, ADDRESS tyypi konstant                      9 -  Hulk: 32-bitiline kujutis                                  10 - loendielemendi arvv@@rtus                                  11 - vahemik                                                    12 - Boolean  (vahetyyp! V@lja jo~uab 10 )                      13 -                                                            14 -                                                            15 - Viit konstandile                                           T v@@rtused kasutajatyypide (L=8,9) korral :                    1 -                                                             2 -                                                             3 -                                                             4 -                                                             5 -                                                             6 -                                                             7 -  ARRAY OF T,                                                8 -  viidatyyp;     ADDRESS = POINTER TO WORD                   9 -  hulgatyyp,                                                 10 - loendityyp (enumeration),                                  11 - vahemiktyyp (subrange),                                    12 - massiivityyp,                                              13 - kirjetyyp,                                                 14 - protseduurityyp,                                           15 - viit olemasolevale tyybile.                                T v@@rtused standardtyypide (L=11) korral :                     1 -  standardtyyp INTEGER,                                      2 -  standardtyyp CARDINAL,                                     3 -  sisemine tyyp INT/CARD                                     4 -                                                             5 -  standardtyyp REAL,                                         6 -  standardtyyp CHAR,           |=============================7 -  standardtyyp STRING,         | TYPE ADDRESS=POINTER TO WORD8 -  lisatyyp WORD, pikkus B/WORD | TYPE PROC=PROCEDURE         9 -  lisatyyp PROCESS,            | TYPE BITSET=SET OF [0..31]  10 -                              | TYPE BOOLEAN=(FALSE, TRUE)  11 - standardtyyp LONGINT,        |=============================12 - standardtyyp LONGREAL,                                     13 - varuks tyybile "longcardinal",                             14 -                                                            15 - (seda tyypi v@@rtuseks on tyyp ise tegeliku parameetrina)? T v@@rtused standardprotseduuride (L=13) korral :               1 MAX ; 2 MIN ; 3 SIZE ; 4 VAL ; 5 ABS ; 6 CHR ; 7 FLOAT ;      8 ODD ; 9 ORD ; 10 TRUNC ; 11 CAP ; 12 HIGH ; 13 EXCL ; 14 INCL 15 DEC ; 16 INC                                                             Standardprotseduurid:                                      val->val:          ABS,CAP,CHR,FLOAT,ODD,ORD,ROUND,TRUNC.       array->val:        HIGH.                                        var->val:          ADR,SIZE.                                    type->val:         MAX,MIN,TSIZE.                               type,val->val:     VAL.                                         ->:                HALT.                                        var-> / var,val->: ASH,DEC,INC.                                 pointervar->:      DISPOSE,NEW.                                 set,val->:         EXCL,INCL.                                        Lisaprotseduurid:                                        NEWPROCESS,TRANSFER,IOTRANSFER - t@psustame hiljem.        T v@@rtused moodulite (L=15) korral :                           1 - lokaalne moodul (MODULE),                                   2 - kirjelduste moodul (DEFINITION MODULE),                     3 - realisatsioonimoodul (IMPLEMENTATION MODULE),               4 - po'himoodul (main module).                                                                                                  T v@@rtused kirjev@lja (L=3|4) korral:                          1 - lihtv@li,                                                   2 - "case-root",                                                3 - kirjetyyp.                                                                                                                                                                                                                                                                                                                                                                                                                                                  INFO vastavalt objekti liigile:                                 ===============================                                 Muutuja (L=1,2), 20 baiti:                                      -------                                                                   EXEC    - muutujale antava m@luv@lja nihe mooduli vo'i                    protseduuri muutujatesegmendis.                       INFO    - viit muutuja tyybile (4 baiti),                       INFO+4  - viit protseduurile, milles muutuja on                           defineeritud (4 baiti) / 0 (v@line moodul),           INFO+8  - formaalse parameetri korral tema positsioon                  (loendamine algab yhest), vastasel korral null.          INFO+12 - tegel.pikkus baitides, kui tyyp dynaamiline.        ( INFO+16 - massiivi korral elem. arvu aadress programmi                    m@lus. )                                                                                                                                                                    Kirjev@li (L=3,4): Juurdep@@s v@@rtusele l@bi kirjetyypi muutuja---------                                                       T = 1|3:    EXEC    - nihe kirjes;                                          INFO    - viit kirjev@lja tyybile;                              INFO+4  - viit moodulile | protseduurile;                       INFO+8  - viit j@rgmisele v@ljale | 0;                          INFO+12 - viit kirjetyybile, mille v@li see on;               ( INFO+16 - massiivi korral elem. arvu aadress                              programmi m@lus. )                        T = 2  :    INFO+20 - viit 1. alternatiivi tabelile;                        INFO+24 - viit viimase alternatiivi tabelile;                   INFO+28 - max. alternatiivi pikkus.                                                                                                                                                                                                                                                                                 Alternatiivi tabel:                                             L=9, T=0;   EXEC    -                                                       INFO    - viit selektorite ahelale (CaseLabelList);             INFO+4  - viit so'nastiku tabelile  (L=9,T=13);                 INFO+8  - viit j@rgmisele | 0;                                  INFO+12 - viit "case-root".                         Konstant (L=5,6) :                                              --------                                                         V@ljal INFO on viit konstandi tyybile.                          V@ljast INFO+4 algab konstandi v@@rtus.                         Juhtudel T=6 ja T=7 on v@@rtuseks pikkusbaidiga so'ne.          Hulga korral (T=9) viitab INFO vastavale hulgatyybile.          T=10 korral INFO on viit loendityybile (v@@rtuseks aga arv!).   T=11 - INFO  >basetype; INFO+8 algusconst; INFO+12 lo'puconst.         INFO+16 algusconst T; INFO+20 lo'puconst T.              T=15 korral on INFO+4 viit olemasolevale konstandile (passile).Loendityybi identifikaator (L=7) :                              --------------------------                                                  INFO   - viit loendityybile (ylemusele),                        INFO+4 - systeemne t@isarvuline v@@rtus,                        INFO+8 - viit j@rgmisele id.-le  /  0.                                                                              Tyyp (L=8,9), so'ltub t@psustajast T.                           ----              Yldjuhul:  INFO   - TSIZE baitides (v.a. T=7). T=7  : See juhtum esineb ainult form.param.juures => 1 tase !            INFO    - ei kasutata.                                          INFO+4  - viit massiivi elemendi tyybile (4 baiti),             INFO+8  - viit tyybile CARDINAL.                                                                                       T=8  :   INFO+4  - viit elem.tyybile (millele viidatyyp viitab)                    vo'i ADDRESS, kui universaalne viidatyyp                        (konstant NIL on universaalset tyypi).       T=9  :   INFO+4  - viit hulga elemendi tyybile (T=10,11).                                                                       T=10 :   INFO+4  - elementide arv loendis,                               INFO+8  - viit 1. el.-le v@@rtuste (L=7) ahelas,                INFO+12 - viit viimasele el-le mainitud ahelas.        T=11 :   INFO+4  - elementide arv vahemikus,                             INFO+8  - viit vahemiku baastyybile                                       (T=10  vo'i  L=11 ja T=1,2,6,11,13),                  INFO+12 - viit alguskonstandile,                                INFO+16 - viit lo'pukonstandile.                                                                                       T=12 :    INFO+4 - viit massiivi elemendi tyybile,                        INFO+8 - viit indeksityybile                                             (T=10,11  vo'i  L=11 ja T=6).                   Sisekujus on ko'ik massiivid yhedimensionaalsed,                vajadusel on elemendi tyybiks massiivityyp.                  T=13 :    INFO+4  - kirjev@ljade arv,                                     INFO+8  - jooksev so~nastik                                     INFO+12 - kirjev@ljade so~nastik                                INFO+16 - viit esimesele kirjeva"ljale                          INFO+20 - viit viimasele kirjeva"ljale.                                                                               T=14 :     INFO+4 - parameetrite arv (ilma funkts. v@@rtuseta),            INFO+8 - 0, kui protseduur-mittefunktsioon;                              viit funkts. v@@rtuse tyybile, kui funkts.             INFO+12 - parameetrite liigid pakitud bitikaupa                           (maksimaalselt 32 parameetrit !!! ):                            0 - v@@rtuse j@rgi,                                             1 - aadressi j@rgi.                                   INFO+16, INFO+20 jne. - iga parameetri jaoks                             4 baiti - viit parameetri tyybile.                              32 tykki fikseeritult!                      T=15 :     INFO+4 - viit olemasolevale tyybile.                                                                                                                                                "L@bipaistmatu" (struktuurita) tyyp (L=10) :                    -----------------------------------                                         INFO   - TSIZE baitides (koht selle jaoks),                     INFO+4 - koht viida jaoks tegelikule tyybile.        NB!!! L=10 korral tyypide NIMELINE ekvivalents.                                                                                Standardtyyp (L=11) :                                           ------------                                                              INFO    - TSIZE baitides.                              T=6  :   INFO+4  - elementide arv standardtyybis CHAR (256).                                                                                                                                                                                                   Protseduur (L=14) :                                             ---------- EXEC    - lahendamispassi aadress,                              INFO    - viit protseduurityybile,                              INFO+4  - protseduuri number (globaalne),                       INFO+8  - viit protseduuri lokaalso'navarale.                                                                        Protseduuri lahendamispass: 0 - protseduuri number (glob.),     --------------------------  4 - k@ivitamisaadress,                                          8 - muutujatesegmendi pikkus.       Moodul (L=15) :             12..139 - 4b/param : param.nihe     ------     EXEC    - keha k@ivitamisaadress,                               INFO    - prioriteet,                                           INFO+4  - peremeesprotseduuri number / 0 (v@line m.)            INFO+8  - mooduli link field koopia (sulgemiseks),              INFO+12 - 81H A0H (so'nastiku tyhik),                           INFO+14 - viimase lok.objekti nfa (mooduli LATESTad).    Muutujate kujutamine muutujatesegmendis:                        ========================================                    INTEGER, CARDINAL, viit, hulk, loend, vahemik - 4 baiti.        REAL, LONGREAL, LONGINT - x baiti (selgub hiljem).              CHAR - 1 bait.                                                                                                                  massiiv - "elementide arv" (saadakse indeksityybist) elementi         lihtsalt j@rjest (element ise vo'ib muidugi massiiv olla).                                                                kirje - v@ljade v@@rtused lihtsalt j@rjest (struktuuri m@@rab         kirjetyybi kirjeldus).                                                                                                    protseduurityypi muutuja - 12 baiti (vt. lahendamispass).                                                                                                                                                                                                                                                                           Kompileerimisel algatatakse iga protseduuri                 jaoks uus muutujatesegment. Muutuja aadressi saamiseks kompilee-ritakse so'na, mis toob magasini muutujatesegmendi aadressi     (selgub lahendamisel),  ning nihe selles segmendis.                Protseduuri poole po"o"rdumine tekitab uue elemendi nn. m@lu-jaotusmagasinis (vastav muutujatesegment saab m@lu).            Protseduurist v@ljumisel see m@lu vabastatakseo'ik konstandid kompileeritakse koolondefinitsioonidesse:      32-bit :     LIT     <32b>                                      8-bit :      BLIT    <8b>                                       string :     (LIT")  <lenbyte> <stringlujaotus.                                                     ===========                                                         Iga muutuja juures on kirjas, millises protseduuris         ta on defineeritud   (imporditud muutujatel vihjatakse          ikka "originaalblokile").   M@lu eraldatakse blokki sisenemisel (lahendamise ajal, enne keha t@itmist) ko'igi selle bloki       muutujate jaoks. M@lu vabastamine toimub v@ljumisel PROTSEDUURI-blokkidest. Sel teel vabastatakse lokaalmooduli m@lu v@ljumisel protseduurist, mille sees see moodul on. V@liste moodulite m@lu ei vabastatagi (seda pole ka tarvis, sest see m@lu j@@b         "magasini po'hja").   M@lu vo'tmine toimub segmentide kaupa.    Seeto'ttu on muutuja passis kirjas ka muutujale eraldatud       m@luv@lja nihe vastava bloki muutujatesegmendis.                    Et dynaamiline m@lueraldus oleks vo'imalik, on iga bloki    passis (v@lismoodul, protseduur, protseduurityypi v@@rtus)      kirjas vastava muutujatesegmendi pikkus baitides.                   M@lu eraldamisel kasutame m@lujaotusmagasini, mille         element ho'lmab 12 baiti:                                       0 - viit protseduurile (4 baiti!),                              4 - vastava muutujatesegmendi FFL,                              8 - sisemoodulite kehade ahela algus.                              Magasini tipu aadressi toob so'na MA .                                                                                           Moodulite magasini element : 0 - >modtable                                                   4 - CURRENT (hoiul)                                             8 - kehadeahela algus                                                                              Blokkide magasin on "baitmagasin" ( M-15 / P-14 ),          mille abil valida kas prots.mag.MA vo'i mood.mag