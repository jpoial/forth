SOURCE$ C:\RELPASS\IO.MOD IMODULE$ IO MODTAB$ IO SET-IMPL IMPORT-ON FROM$ Str IMPORT$ Length IMPORT$ Compare IMPORT$ IntToStr IMPORT$ CardToStr IMPORT$ StrToInt IMPORT$ StrToCard IMPORT$ InCharSet IMPORT$ InclChar IMPORT$ EmptyCharSet FROM-OFF IMPORT$ Str IMPORT-OFF STR' TRUE ' ALLOT-STR BENUM CONST$ TrueStr BOOLEAN TYPE-DUP VAR$ LWW TYPE-DROP 0 I/C BENUM MaxRdLength CID-TYPE 1 I/C 10 C-BIN-OP BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ Buffer TYPE-DROP CARDINAL TYPE-DUP VAR$ s TYPE-DUP VAR$ e TYPE-DROP PRTAB$ KeyPressed BOOLEAN $FUNCT NOOP ~ : &C:\R001 BODY-BEGIN FORTHBEGIN  ?TERMINAL  FORTHEND BODY-END ; BLBODY$ &C:\R001 END-BLOCK NPAIRS$ KeyPressed KeyPressed PRTAB$ MEXPECT 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ Buffer INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ L INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R002 BODY-BEGIN FORTHBEGIN  addr Buffer 2 - addr L @ expect  FORTHEND BODY-END ; BLBODY$ &C:\R002 END-BLOCK NPAIRS$ MEXPECT MEXPECT PRTAB$ TerminalRdStr 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ string INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ H TYPE-DROP CARDINAL TYPE-DUP VAR$ I TYPE-DROP CARDINAL TYPE-DUP VAR$ L TYPE-DROP MRT CHAR TYPE-DUP EL$ LenBuf TYPE-DROP CHAR TYPE-DUP EL$ Len TYPE-DROP 0 I/C BENUM 81 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP EL$ Buf TYPE-DROP CONTBACK TYPE-DUP VAR$ InputBuffer TYPE-DROP STR' ? ' SYS-STR$ &C:\R003 : &C:\R004 BODY-BEGIN CASE SV0 [ Prompt ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ LWW ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH COMPILE-NOT [ 8 ] BIN-OP BOOLEAN? => [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &C:\R003 ] $STRINGCONST NEXTCOMP PROCEND ENDOF ESAC A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ LWW ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ string ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ H ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ H ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 80 I/C ] CONSTTABLE [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ 82 I/C ] CONSTTABLE AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF A-STACK-0 SV0 [ H ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 I/C ] CONSTTABLE [ 9 ] BIN-OP AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ESAC [ MEXPECT ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ InputBuffer ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Buf ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ ORD ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ InputBuffer ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Len ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ I ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ H ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ string ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BEGIN SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ BOOLEAN? WHILE [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND A-STACK-0 SV0 [ InputBuffer ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Buf ] IDENTIFIER WPOP- CT? I*PREV M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ string ] IDENTIFIER M-ARRAY SV0 [ I ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN REPEAT [ WrLn ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND BODY-END ; BLBODY$ &C:\R004 END-BLOCK NPAIRS$ TerminalRdStr TerminalRdStr PRTAB$ WrStr 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R005 BODY-BEGIN [ WrStrRedirect ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &C:\R005 END-BLOCK NPAIRS$ WrStr WrStr PRTAB$ RdStr 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R006 BODY-BEGIN [ RdStrRedirect ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &C:\R006 END-BLOCK NPAIRS$ RdStr RdStr PRTAB$ RdBuff NOOP ~ CARDINAL TYPE-DUP VAR$ p TYPE-DUP VAR$ h TYPE-DROP : &C:\R007 BODY-BEGIN [ RdStrRedirect ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Buffer ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buffer ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ p ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buffer ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP AGR-ADDR [ h ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP AGR-ADDR [ p ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 13 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ Buffer ] IDENTIFIER M-ARRAY SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ Buffer ] IDENTIFIER M-ARRAY SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND CASE SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ h ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ Buffer ] IDENTIFIER M-ARRAY SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC A-STACK-0 SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ e ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ s ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R007 END-BLOCK NPAIRS$ RdBuff RdBuff PRTAB$ TerminalWrStr 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ string INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ L TYPE-DROP : &C:\R008 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ LWW ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ string ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN FORTHBEGIN  addr string addr L @ TYPE  FORTHEND BODY-END ; BLBODY$ &C:\R008 END-BLOCK NPAIRS$ TerminalWrStr TerminalWrStr PRTAB$ RdCharDirect CHAR $FUNCT NOOP ~ : &C:\R009 BODY-BEGIN FORTHBEGIN  KEY  FORTHEND BODY-END ; BLBODY$ &C:\R009 END-BLOCK NPAIRS$ RdCharDirect RdCharDirect PRTAB$ WrStrAdj 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ S INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ L TYPE-DROP INTEGER TYPE-DUP VAR$ a TYPE-DROP STR' ? ' SYS-STR$ &C:\R010 STR'   ' SYS-STR$ &C:\R011 STR'   ' SYS-STR$ &C:\R012 : &C:\R013 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ RdLnOnWr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ RdLn ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF ESAC A-STACK-0 SV0 [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Length ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ ABS ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 10 ] BIN-OP AGR-ADDR [ a ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 3 ] BIN-OP SV+ [ ChopOff ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 8 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CARDINAL ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ ABS ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BEGIN SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ BOOLEAN? WHILE [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND A-STACK-0 SV0 [ &C:\R010 ] $STRINGCONST AGR-ADDR [ S ] IDENTIFIER M-ARRAY SV0 [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN REPEAT A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ a ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC CASE SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? => [ WrCharRep ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &C:\R011 ] $STRINGCONST NEXTCOMP SV0 [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ S ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 3 ] BIN-OP SV+ [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP SV+ [ 8 ] BIN-OP BOOLEAN? => [ WrCharRep ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &C:\R012 ] $STRINGCONST NEXTCOMP SV0 [ a ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC BODY-END ; BLBODY$ &C:\R013 END-BLOCK NPAIRS$ WrStrAdj WrStrAdj PRTAB$ WrChar 0PNUM! VALUE-SECT CHAR TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP NOOP ~ 1 I/C BENUM 1 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ X TYPE-DROP : &C:\R014 BODY-BEGIN A-STACK-0 SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ X ] IDENTIFIER M-ARRAY SV0 [ 1 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ RdLnOnWr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ RdLn ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF ESAC [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ X ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND BODY-END ; BLBODY$ &C:\R014 END-BLOCK NPAIRS$ WrChar WrChar PRTAB$ WrCharRep 0PNUM! VALUE-SECT CHAR TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ count INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ j TYPE-DROP : &C:\R015 BODY-BEGIN CASE SV0 [ RdLnOnWr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ RdLn ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF ESAC BEGIN SV0 [ count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 2 I/C ] CONSTTABLE [ 10 ] BIN-OP AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ count ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ j ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ BOOLEAN? WHILE A-STACK-0 SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ s ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ s ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND REPEAT BODY-END ; BLBODY$ &C:\R015 END-BLOCK NPAIRS$ WrCharRep WrCharRep PRTAB$ WrBool 0PNUM! VALUE-SECT BOOLEAN TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ STR' FALSE ' SYS-STR$ &C:\R016 : &C:\R017 BODY-BEGIN CASE SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ TrueStr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &C:\R016 ] $STRINGCONST NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ESAC BODY-END ; BLBODY$ &C:\R017 END-BLOCK NPAIRS$ WrBool WrBool PRTAB$ WrInt 0PNUM! VALUE-SECT INTEGER TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP : &C:\R018 BODY-BEGIN [ IntToStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC BODY-END ; BLBODY$ &C:\R018 END-BLOCK NPAIRS$ WrInt WrInt PRTAB$ WrCard 0PNUM! VALUE-SECT CARDINAL TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP : &C:\R019 BODY-BEGIN [ CardToStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC BODY-END ; BLBODY$ &C:\R019 END-BLOCK NPAIRS$ WrCard WrCard PRTAB$ WrHex 0PNUM! VALUE-SECT CARDINAL TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP VALUE-SECT INTEGER TYPE-DUP VAR$ Length INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP : &C:\R020 BODY-BEGIN [ CardToStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 16 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ WrStrAdj ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Length ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC BODY-END ; BLBODY$ &C:\R020 END-BLOCK NPAIRS$ WrHex WrHex PRTAB$ WrLn NOOP ~ 0 I/C BENUM 1 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE$ a3 a3 TYPE-DUP VAR$ crlf TYPE-DROP : &C:\R021 BODY-BEGIN CASE SV0 [ RdLnOnWr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ RdLn ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF ESAC A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 13 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ crlf ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ crlf ] IDENTIFIER M-ARRAY SV0 [ 1 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ WrStr ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ crlf ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ LWW ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R021 END-BLOCK NPAIRS$ WrLn WrLn PRTAB$ RdBool BOOLEAN $FUNCT NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP : &C:\R022 BODY-BEGIN [ RdItem ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND SV0 [ Compare ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ TrueStr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 0 I/C ] CONSTTABLE [ 1 ] BIN-OP RETURN BODY-END ; BLBODY$ &C:\R022 END-BLOCK NPAIRS$ RdBool RdBool PRTAB$ RdInt INTEGER $FUNCT NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP INTEGER TYPE-DUP VAR$ i TYPE-DROP : &C:\R023 BODY-BEGIN [ RdItem ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ StrToInt ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HEX$ 8000 I/C ] CONSTTABLE [ 2 ] UN-OP [ 6 ] BIN-OP SV+ [ 8 ] BIN-OP [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HEX$ 7FFF I/C ] CONSTTABLE [ 4 ] BIN-OP SV+ [ 8 ] BIN-OP AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN BODY-END ; BLBODY$ &C:\R023 END-BLOCK NPAIRS$ RdInt RdInt PRTAB$ RdCard CARDINAL $FUNCT NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP CARDINAL TYPE-DUP VAR$ i TYPE-DROP : &C:\R024 BODY-BEGIN [ RdItem ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ StrToCard ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HEX$ 10000 I/C ] CONSTTABLE [ 3 ] BIN-OP SV+ [ 8 ] BIN-OP AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN BODY-END ; BLBODY$ &C:\R024 END-BLOCK NPAIRS$ RdCard RdCard PRTAB$ RdHex CARDINAL $FUNCT NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP CARDINAL TYPE-DUP VAR$ i TYPE-DROP : &C:\R025 BODY-BEGIN [ RdItem ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ StrToCard ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 16 I/C ] CONSTTABLE NEXTCOMP SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HEX$ 10000 I/C ] CONSTTABLE [ 3 ] BIN-OP SV+ [ 8 ] BIN-OP AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND RETURN BODY-END ; BLBODY$ &C:\R025 END-BLOCK NPAIRS$ RdHex RdHex PRTAB$ RdLn NOOP ~ : &C:\R026 BODY-BEGIN A-STACK-0 SV0 [ e ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ s ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R026 END-BLOCK NPAIRS$ RdLn RdLn PRTAB$ EndOfRd 0PNUM! VALUE-SECT BOOLEAN TYPE-DUP VAR$ Skip INCPNUM&!TAB TYPE-DROP BOOLEAN $FUNCT NOOP ~ : &C:\R027 BODY-BEGIN CASE SV0 [ Skip ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => BEGIN SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ e ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ InCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buffer ] IDENTIFIER M-ARRAY SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND SV+ [ 8 ] BIN-OP BOOLEAN? WHILE [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT ENDOF ESAC SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ e ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP RETURN BODY-END ; BLBODY$ &C:\R027 END-BLOCK NPAIRS$ EndOfRd EndOfRd PRTAB$ RdItem 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ V INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ L TYPE-DUP VAR$ i TYPE-DROP : &C:\R028 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ V ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ L ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN CASE SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ e ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP BOOLEAN? => [ RdBuff ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF ESAC BEGIN SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ e ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ InCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buffer ] IDENTIFIER M-ARRAY SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND SV+ [ 8 ] BIN-OP BOOLEAN? WHILE [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ e ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 3 ] BIN-OP SV+ [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP SV+ [ 8 ] BIN-OP [ InCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ Buffer ] IDENTIFIER M-ARRAY SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND SV+ COMPILE-NOT [ 8 ] BIN-OP BOOLEAN? WHILE A-STACK-0 SV0 [ Buffer ] IDENTIFIER M-ARRAY SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ V ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND REPEAT CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ L ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 4 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ V ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC SV0 [ V ] IDENTIFIER M-ARRAY SV0 [ 0 I/C ] CONSTTABLE MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 2 ] BIN-OP BOOLEAN? UNTIL BODY-END ; BLBODY$ &C:\R028 END-BLOCK NPAIRS$ RdItem RdItem PRTAB$ RdChar CHAR $FUNCT NOOP ~ CHAR TYPE-DUP VAR$ c TYPE-DROP BOOLEAN TYPE-DUP VAR$ t TYPE-DROP : &C:\R029 BODY-BEGIN CASE SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ e ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 6 ] BIN-OP BOOLEAN? => [ RdBuff ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF ESAC [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND SV0 [ Buffer ] IDENTIFIER M-ARRAY SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH RETURN BODY-END ; BLBODY$ &C:\R029 END-BLOCK NPAIRS$ RdChar RdChar PRTAB$ RedirectInput 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ FileName INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R030 BODY-BEGIN FORTHBEGIN  addr FileName 1 open   IF DUP 0 forcedup         IF close DROP          ELSE ( DOSERROR )      THEN                ELSE ( DOSERROR )      THEN                  FORTHEND BODY-END ; BLBODY$ &C:\R030 END-BLOCK NPAIRS$ RedirectInput RedirectInput PRTAB$ RedirectOutput 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ FileName INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R031 BODY-BEGIN FORTHBEGIN  addr FileName 0 make   IF DUP 1 forcedup         IF close DROP          ELSE ( DOSERROR )      THEN                ELSE ( DOSERROR )      THEN                  FORTHEND BODY-END ; BLBODY$ &C:\R031 END-BLOCK NPAIRS$ RedirectOutput RedirectOutput STR'   ' SYS-STR$ &C:\R032 : &C:\R033 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Prompt ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ RdLnOnWr ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ TerminalWrStr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ WrStrRedirect ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ TerminalRdStr ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ RdStrRedirect ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ e ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ s ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ OK ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ ChopOff ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ EmptyCharSet ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 9 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 13 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 26 I/C ] CONSTTABLE NEXTCOMP AGREND NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ InclChar ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ &C:\R032 ] $STRINGCONST NEXTCOMP SV0 [ Separators ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Eng ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ LWW ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R033 END-BLOCK NPAIRS$ IO IO CUNIT$ IO ;S NOSOURCE   