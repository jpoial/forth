( FORTH-83/32   Electives file                       02/10/89 ) This file created 29 Jan 1982 for PC/FORTH 1.0                  modified 1/31/83 for use with PC/FORTH+ 1.x                     modified 12/25/83 for use with PC/FORTH+ 2.0                    Copyright (c) 1982, 1983 by Ray Duncan, Laboratory Microsystems Inc.                                                            modified 2/10/89 for use with FORTH-83/32                       Copyright (c) 1989 by Mati Tombak, Tartu , Q-SOFT,   Estonia.                                                                   This file is provided for the convenience of FORTH-83/32 users  who wish to rebuild the FORTH.COM file.  Changes to this file   are made at your own risk!  To create new FORTH.COM, enter              A>NUCLEUS ELECTIVE <return>                                     (wait for system sign-on message, then enter:)                  1 LOAD <return>                                         New FORTH.COM will be written on the "current" disk drive.      ( Build distributed FORTH file from NUCLEUS.COM file 02/05/89 ) FORTH DEFINITIONS                                               VOCABULARY HIDDEN IMMEDIATE             ( predeclare all )      VOCABULARY ASSEMBLER IMMEDIATE          ( vocabularies )        VOCABULARY EDITOR IMMEDIATE CR                                  DECIMAL  3 LOAD         .( QX )                        CR       DECIMAL  4 LOAD         .( printer-console switching ) CR       DECIMAL  5 LOAD         .( print listing )             CR       DECIMAL  8 LOAD         .( #IN )                       CR       DECIMAL  9 LOAD         .( DIR )                       CR       DECIMAL 12 LOAD         .( MAP )                       CR       DECIMAL 14 LOAD         .( RUN )                       CR       -->                                                                                                                                                                                                                                                             ( #2 Build distributed FORTH file from base file     02/08/89 ) DECIMAL 19 LOAD         .( Vocs )                        CR     DECIMAL 20 LOAD         .( Words )                       CR     DECIMAL 21 LOAD         .( Chdir )                       CR     DECIMAL 22 LOAD         .( Chdisk)                       CR     DECIMAL 23 LOAD         .( Double precision extensions)  CR     FORTH DEFINITIONS DECIMAL                                       .STACK   CR .( Auxiliary functions loadeduick screen index                              02/08/89 ) FORTH DEFINITIONS DECIMAL                                       : SCR/FILE ( --- N )                                              SCREEN-HANDLE ?FILESIZE C/SCR / ;                             : QX    SAVE-BUFFERS  BASE @ >R DECIMAL CR CR 0 SCR/FILE 1+ 0         ?DO I BLOCK ?TERMINAL IF KEY DROP LEAVE THEN                        I 3 .R SPACE 2+ 14 TYPE                                         OUT @ 60 >                                                      IF    CR                                                        ELSE  OUT @ 20 MOD 20 SWAP - SPACES                             THEN                                                        LOOP                                                              EMPTY-BUFFERS CR CR R> BASE ! ;                         ;S                                                                                                                                                                                              ( #4 PRINTER CONSOLE COM1                            02/05/89 ) HANDLE PRN/CON VARIABLE lpflag                                  : ?DEVICE lpflag @ ;                                            : PRN<>CON ( --- )                                                PRN/CON OPEN-FILE 255 AND                                       IF ." File PRN/CON/COM1 can't be opened" THEN                   PRN/CON SWAP DROP STD-OUTPUT SWAP DROP                          DOS-STDO forcedup DROP                                          PRN/CON CLOSE-FILE DROP ;                                     : PRINTER ( --- )                                                 PRN/CON FILENAME PRN PRN<>CON 1 lpflag ! ;                    : CONSOLE ( --- )                                                 PRN/CON FILENAME CON PRN<>CON 0 lpflag ! ;                    : COM1    ( --- )                                                 PRN/CON FILENAME COM1 PRN<>CON 2 lpflag ! ;                   ;S                                                              ( #5 SHOWC  compact screen printer                   02/04/89 ) FORTH DEFINITIONS HEX                                           0C CONSTANT FORMF                                               : COMP 0F EMIT ;            : -COMP 12 EMIT ;                   : EMPH 45 ESC-SEQ ;         : -EMPH 46 ESC-SEQ ;                : ITAL 34 ESC-SEQ ;         : -ITAL 35 ESC-SEQ ;                : ."SCR#" ." Screen # " ;                                       : .BANNER ITAL EMPH                                                 CR CR CR ." Tartu University  FORTH-83/32" .VERSION             2 SPACES .TIME 2 SPACES .DATE 2 SPACES                          SCREEN-HANDLE .FILENAME -ITAL -EMPH ;                       : .BLK# ( n -- )     ( prints block#'s )  CR CR -COMP ITAL EMPH    ."SCR#" DUP S>D <# #S #> DUP >R TYPE R>  1F SWAP - SPACES       ."SCR#" 1+ S>D <# #S #> TYPE CR -ITAL -EMPH COMP ;            -->                                                                                                                            ( #6 SHOWC, continued                                02/04/89 ) : SHOWC ( from to -- ) OVER OVER > IF DROP DROP EXIT THEN          PRINTER ( ASCII C ESC-SEQ 0 EMIT 0B EMIT )                      0 ROT ROT 1+ SWAP                                               DO  I .BLK#   HERE 84 BLANK                                      400 0 DO                                                         J BLOCK I + HERE 40 CMOVE                                       J 1+ BLOCK  I + HERE 44 + 40 CMOVE                              HERE 84 -TRAILING TYPE CR                                         40 +LOOP                                                     1+ DUP 3 = IF DROP 0 -COMP .BANNER COMP FORMF EMIT THEN      2 +LOOP -COMP ?DUP IF 3 SWAP - 13 * 0 DO CR LOOP .BANNER THEN    FORMF EMIT CONSOLE ;                                                                                                           DECIMAL -->                                                                                                                    ( #7 TRIAD SHOW SHOWL                                02/05/89 ) : TRIAD         DEPTH 1 < 1 ?ERROR ?DECIMAL                                     3 / 3 * 3 OVER + SWAP DO CR I LIST                              LOOP CR CR 0 OUT ! .BANNER                                      CR ?DEVICE IF 12 EMIT THEN ;                    : SHOW          DEPTH 2 < 1 ?ERROR ?DECIMAL                                     PRINTER ASCII C ESC-SEQ 0 EMIT 11 EMIT                          1+ SWAP DO I TRIAD ?TERMINAL                                    IF KEY DROP LEAVE THEN 3 +LOOP CONSOLE ;        : SHOWL ( first last --- )                                                      PRINTER 27 EMIT 8 EMIT                                          1+ SWAP DO I LIST CR I 1+ LIST CR                                          I 2+ LIST CR .BANNER KEY DROP                             3 +LOOP 27 EMIT 9 EMIT CONSOLE ;           ;S                                                                                                                              ( #8  Input number from console and leave on stack   02/05/89 ) FORTH DEFINITIONS DECIMAL                                                                                                       : #IN  ( --- n )                                                  0 BEGIN                                                         KEY                                                             DUP 13 =  IF DROP EXIT THEN                                     DUP 8 =   IF EMIT 32 EMIT 8 EMIT 10 / ELSE                                   DUP 48 < OVER 57 > OR IF DROP 7 EMIT                            ELSE DUP EMIT 48 - SWAP 10 * + THEN THEN           AGAIN ;                                                       ;S                                                                                                                                                                                                                                                                                                                              ( #9  Source for DIR                                 02/08/89 ) HIDDEN DEFINITIONS HEX          HANDLE DIR-HANDLE               : ?DRIVE-ONLY ( handle_pars --- flag )                                  DROP 4 + DUP C@                                                 IF      DUP C@ 2 =  IF      2+ C@ ASCII : =                                         ELSE    DROP 0  THEN                        ELSE    DROP TRUE                                               THEN ;                                                  : ?DIRECTORY ( handle_pars --- flag )                                   GET-ATTRIB IF      FALSE                                                   ELSE    10 AND 10 =  THEN ;                  : ADDFSPEC ( addr handle_pars --- )                                     DROP 4 + SWAP COUNT >R OVER COUNT + R@ CMOVE                             DUP C@ R> + SWAP C! ;                          -->                                                                                                                             ( #10 Source for DIR, continued                      02/08/89 ) ( Initialize handle control block )                             : DIR-INIT      DIR-HANDLE [COMPILE] FILENAME                                   DIR-HANDLE ?DRIVE-ONLY                                          IF      LIT" *.*" DIR-HANDLE ADDFSPEC                           ELSE    DIR-HANDLE ?DIRECTORY                                           IF LIT" \*.*" DIR-HANDLE ADDFSPEC THEN                  THEN ;                                          ( Search for first or next directory entry )                    : DIR-SCH-FST   DIR-HANDLE 10 SEARCH-FIRST ;                    ( format fully qualified filename from directory entry )        : DIR-PNAME     OUT @ 0= 0= IF 0B3 EMIT THEN                            BEGIN   DUP C@                                                  WHILE   DUP C@ EMIT 1+                                          REPEAT DROP ;  -->                                                                                                      ( #11 Source for DIR, continued                      02/08/89 ) : DIR-DISP      SCRATCH_BUFF DUP 1E + DIR-PNAME                                 0C OUT @ 14 MOD - SPACES DUP 15 + C@ 10 AND                     IF      ." <DIR> " DROP                                         ELSE    1A + @ 6 .R THEN ;                      ( print file directory for selected or default disk )           FORTH DEFINITIONS DECIMAL                                       : DIR   HIDDEN BASE @ >R DECIMAL                                        DIR-INIT DIR-SCH-FST 0=                                         IF   CR CR ." Directory of " DIR-HANDLE .FILENAME CR                 DIR-DISP                                                        BEGIN SEARCH-NEXT 0=                                            WHILE DIR-DISP OUT @ 65 >                                          IF CR THEN                                                REPEAT                                                        THEN CR CR R> BASE !  FORTH ;   ;S                      ( #12 Memory allocation map                          02/05/89 )  FORTH DEFINITIONS HEX                                                                                                          : H.  BASE @ >R HEX 5 .R ." H" R> BASE ! ;                      : MAP   CR DECIMAL                                                CR ." Start of terminal input buffer =  " TIB DUP H. 10 .R      CR ." Base of data stack =              " S0 @ DUP H. 10 .R     CR ." Size of data stack =              " S0 @ TIB 50 + - DUP                 H. 10 .R 2 SPACES ." bytes"                       CR ." Base of return stack =            " R0 @ DUP H. 10 .R     CR ." Size of return stack =            " R0 @ S0 @ - DUP                     H. 10 .R 2 SPACES ." bytes"                       CR ." Address of NEXT =                 " NEXT-LINK DUP                       H. 10 .R                                          CR ." Top of dictionary =               " DP @ DUP H. 10 .R                                               -->                 ( #13 Memory allocation, continued                   02/08/89 )                                                                   CR ." Available room in dictionary =    " 2 H@ ?fs: -          10 * DP @ - DUP H. 10 .R 2 SPACES ." bytes"                      CR ." Size of terminal buffer =         " BOOT-AREA 0C + @                 DUP H. 10 .R 2 SPACES ." bytes"                      CR ." Disk buffers available =          " #BUFF DUP H. 10 .R    CR ." Disk buffer size =                " B/BUF DUP H. 10 .R                            2 SPACES ." bytes"                      CR ." Disk buffers per screen =         " B/SCR DUP H. 10 .R    CR CR ;   DECIMAL ;S                                                                                                                                                                                                                                                                                                                                                                          ( #14 FREEMEM GETMEM parse-filename                  10/23/89 ) HEX                                                             : FREEMEM ( --- )                                                 HERE 0F + 10 / $BX H! ?fs: $ES H!                               4A $AX 1+ C! DOSINT DROP ;                                    : GETMEM ( --- )                                                  02 H@ ?fs: - $BX H! ?fs: $ES H! 4A $AX 1+ C! DOSINT 0=          IF ." Not enough memory" $BX H! . ." available" THEN ;        : parse-filename ( addr-name fcb options --- flag )               $AX C! 29 $AX 1+ C! ADDR>S&O DUP H>< $ES H! $DI H!              ADDR>S&O DUP H>< $DS H! $SI H! DOSINT ;                       : COUNTZ ( addr --- addr l )                                            DUP 0 SCAN DROP OVER - ;                                -->                                                                                                                                                                                             ( #15 MS-DOS RUN command                             02/06/89 )                                                                 HIDDEN DEFINITIONS DECIMAL                                                                                                      VARIABLE PGM_NAME 60 ALLOT                                      VARIABLE FCB1 33 ALLOT                                          VARIABLE FCB2 33 ALLOT                                          VARIABLE CMD_LINE 60 ALLOT                                      VARIABLE PAR_BLK 12 ALLOT                                       : FILL_PAR ( env_seg --- )                                         PAR_BLK SWAP OVER H! 2+      ( 0,1 = environment descr )        CMD_LINE ADDR>S&O OVER ! 4 + ( offset, segment command line)    FCB1     ADDR>S&O OVER ! 4 + ( offset, segment FCB for 5CH )    FCB2     ADDR>S&O SWAP !     ( offset, segment FCB for 6CH ) ;                                                               -->                                                             ( #16 MS-DOS RUN command                             02/08/89 ) : exec-run ( env_seg --- )                                              CR CR 13 CMD_LINE COUNT + C!                                    FCB1 37 ERASE       FCB2 37 ERASE                               FCB1 1+ 11 BLANK    FCB2 1+ 11 BLANK                            CMD_LINE 1+ FCB1 1 parse-filename DROP                          FILL_PAR FREEMEM                                                PGM_NAME ADDR>S&O PAR_BLK ADDR>S&O run GETMEM                   CASE                                                                0  OF ( 0 24 GOTOXY )              ENDOF                        2  OF CR ." Program " PGM_NAME COUNTZ TYPE                            ."  not found"     ENDOF                                     ( default case )                                                CR ." Program load failed"                               ENDCASE CR CR ;  -->                                                                                                    ( #17 MS-DOS RUN command, EDIT                       02/08/89 ) FORTH DEFINITIONS                                               : RUN ( --- |used in the form RUN <program> [<parameter>] )        ?EXEC HIDDEN                                                         PGM_NAME 64 ERASE   CMD_LINE 64 ERASE                      BL WORD COUNT PGM_NAME SWAP CMOVE                               BL WORD DUP C@ 1+ CMD_LINE SWAP CMOVE                           0 exec-run FORTH ;                                           : EDIT ( --- |used EDIT )                                          HIDDEN LIT" NUL.SCR" DUP C@ 1+ PREV-FILE SWAP CMOVE             FLUSH SCREEN-HANDLE CLOSE-FILE DROP                                  PGM_NAME 64 ERASE   CMD_LINE 64 ERASE                      LIT" EDIT.COM" COUNT PGM_NAME SWAP CMOVE                        SCREEN-HANDLE DROP 4 + DUP C@ 1+ CMD_LINE SWAP CMOVE            0 exec-run using FORTH ;                                     -->                                                             ( #18 SCOPY                                          02/10/89 ) : SCOPY ( --- )                                                    HIDDEN LIT" NUL.SCR" DUP C@ 1+ PREV-FILE SWAP CMOVE             FLUSH SCREEN-HANDLE CLOSE-FILE DROP                                  PGM_NAME 64 ERASE   CMD_LINE 64 ERASE                      LIT" SCOPY.COM" COUNT PGM_NAME SWAP CMOVE                       SCREEN-HANDLE DROP 4 + DUP C@ 1+ CMD_LINE SWAP CMOVE            0 exec-run using FORTH ;                                     : NED   ( --- |used NED [<filename>] )                             HIDDEN LIT" NUL.SCR" DUP C@ 1+ PREV-FILE SWAP CMOVE             FLUSH SCREEN-HANDLE CLOSE-FILE DROP                                  PGM_NAME 64 ERASE   CMD_LINE 64 ERASE                      LIT" NED.COM" COUNT PGM_NAME SWAP CMOVE                         BL WORD DUP C@ 1+ CMD_LINE SWAP CMOVE                           0 exec-run using FORTH ;                                      ;S                                                             ( #19 Debugging tool to list vocabulary linkages     02/08/89 )                                                                 : VOCS          CURRENT @ 10 - >NAME                                            CR CR ." Current voc = " .NAME                                  CONTEXT @ 10 - >NAME                                            CR ." Context voc = " .NAME                                     CR ." Default voc = FORTH"                                      BASE @ >R HEX VOC-LINK                                          CR CR ." Defined vocabularies:"                                 CR CR ."  link    nfa    name"                                  BEGIN   @ DUP                                                   WHILE   CR DUP  5  U.R 2 SPACES                                         DUP 14 - >NAME                                                  DUP 5 U.R 4 SPACES .NAME                                REPEAT  DROP R> BASE ! CR CR ;                                                                                  ( #20 Words                                          02/08/89 ) HEX                                                             : WORDS    BASE @ >R HEX CR CR CONTEXT @ @ ?DUP                            IF   BEGIN                                                             DUP DUP 0 <# # # # # # #> TYPE                                  DUP 1+ C@                                                       IF   SPACE .NAME                                                ELSE ."  null"  DROP                                            THEN OUT @ 3C >                                                 IF   CR 0 OUT !                                                 ELSE 14 OUT @ OVER MOD - SPACES                                 THEN N>LINK @ DUP 0=                                            ?TERMINAL DUP IF KEY DROP THEN OR                             UNTIL DROP                                                  ELSE ." Empty vocabulary."                                      THEN CR CR R> BASE ! ;                              ( #21 MSDOS Change subdirectory command              02/08/89 )                                                                 ( --- ; used in the form CHDIR name )                           : CHDIR    BL WORD 0 OVER DUP C@ + 1+ C! 1+                                chdir IF                                                                 CR ." Current directory is "                                    HERE COUNT TYPE                                              ELSE 1 =                                                           IF CR ." Need PC-DOS 2.0 "                                      ELSE  CR ." Path not found"                                     THEN                                                         THEN CR CR ;                                                                                                                                                                                                                                                                                                   ( #22 MSDOS Change disk command                      02/08/89 ) DECIMAL                                                         ( used in the form:  CHDISK unit )                              : CHDISK        BL WORD 1+ C@ ASCII A - 0 MAX 63 MIN DUP                        14 SWAP FDOS DROP 255 AND >=                                    IF   CR ." Illegal driveouble precision extensions                    02/09/89 ) : 2! ( d addr --- ) SWAP OVER 4 + ! ! ;                         : 2@ ( addr --- d ) DUP @ SWAP 4 + @ ;                          : 2VARIABLE     VARIABLE 0 , ;                                  : 2CONSTANT     <BUILDS HERE 2! 8 ALLOT                                         DOES> 2@ ;                                      : D*            ( d u --- d )                                                   DUP ROT * ROT ROT UM* ROT + ;                   : D/            ( d u --- d )                                                   SWAP OVER /MOD >R SWAP UM/MOD                                   SWAP DROP R> ;                                  : D- ( d d --- d ) DNEGATE D+ ;                                 : D0=           OR 0= ;                                         -->                                                                                                                                                                                             ( #24 Double precision extensions                    02/09/89 )                                                                 : D= ( d d --- f ) D- D0= ;                                     : D<> D= NOT ;                                                  : DU<           ROT SWAP 2DUP U<                                                IF 2DROP 2DROP TRUE                                             ELSE <>                                                              IF 2DROP FALSE                                                  ELSE U<                                                         THEN                                                       THEN ;                                          -->                                                                                                                                                                                                                                                                                                                             ( #25 Double precision extensions                    02/10/89 ) : D<           ROT SWAP 2DUP <                                                  IF 2DROP 2DROP TRUE                                             ELSE <>                                                              IF 2DROP FALSE                                                  ELSE <                                                          THEN                                                       THEN ;                                          : D> 2SWAP D< ;                                                 : D<=           D>  NOT  ;                                      : D>=           D<  NOT  ;                                      : DMIN          2OVER 2OVER D> IF 2SWAP THEN 2DROP ;            : DMAX          2OVER 2OVER D< IF 2SWAP THEN 2DROP ;             ;S                                                                                                                                                                                             ( Multi-tasker, cont.                                01/04/80 ) 10 CONSTANT #TASKS                                              VARIABLE TASK_LIST #TASKS 1- 4 * ALLOT                          VARIABLE TASK_AKT 0 TASK_AKT ! TASK_LIST #TASKS 4 * ERASE       VARIABLE TASK_ALL  0 TASK_ALL !                                  HEX : UKEY BEGIN ?KEY IF KEY EXIT  ELSE                                                 TASK_LIST TASK_AKT @ 4 * + @              ?DUP IF EXECUTE THEN 1 TASK_AKT +! TASK_AKT @ #TASKS =             IF 0 TASK_AKT ! THEN THEN AGAIN ;                                                                                          : NEXPECT 0 SPAN ! 0 ?DO UKEY DUP 8    = IF DROP SPAN @              IF -1 SPAN +! 8 EMIT 20 EMIT 8 EMIT ELSE 7 EMIT THEN            R> 2- >R ELSE DUP 0D = IF DROP 20 EMIT LEAVE ELSE               DUP EMIT OVER SPAN @ + C! 1 SPAN +! THEN THEN LOOP              0 SWAP SPAN @ + C! ;                                       DECIMAL   -->                                                  ( task                                              01/04/80 )   : FIND-TASK ?DUP                                                    IF ( KILL )                                                         0 SWAP #TASKS 1+ 0 DO                                            I #TASKS =                                                     IF DROP LEAVE THEN DUP TASK_LIST I 4 * + DUP @ ROT                = IF 4 ERASE SWAP DROP LEAVE ELSE DROP THEN                   LOOP                                                        ELSE ( START )                                                      0 #TASKS 0 DO TASK_LIST I 4 * + DUP @ IF DROP ELSE              ROT  SWAP ! 1+ LEAVE THEN LOOP                              THEN ;     -->                                                                                                                                                                                                                                                                                                             ( Background tasker support                          12/01/82 )                                                                 ( display names of active tasks )                               : .TASKS         CLEARSCREEN ." Active tasks:"                                  TASK_ALL @ IF                   #TASKS 0                        DO  I 4 * TASK_LIST + @ ?DUP                                        IF   0 I 2 + GOTOXY I 1+ 2 .R  2 SPACES                              >NAME  .NAME   THEN                                    LOOP ELSE CR ." no tasks" THEN  CR  ;           -->                                                                                                                                                                                                                                                                                                                                                                                                                                                             ( Multi-tasker, cont.                                12/01/82 )                                                                 : START         ( --- )                                                 BL WORD DUP COUNT   REVERSE  TYPE   REVERSE-OFF  FIND           IF   0 FIND-TASK                                                     IF 1 TASK_ALL +! ( store CFA into task table )                      ."  --- added to task list"                                 TASK_ALL @ 1 = IF ['] NEXPECT UEXPECT ! THEN                    ELSE ."  --- too many tasks" DROP                               THEN                                                       ELSE ."  --- not in dictionary"                                 THEN CR ;                                               -->                                                                                                                                                                                                                                                             ( Multi-tasker, cont.                                08/07/83 )                                                                 : KILL                                                                  BL WORD DUP COUNT   REVERSE  TYPE   REVERSE-OFF  FIND           IF  FIND-TASK                                                       IF  -1 TASK_ALL +!                                               TASK_ALL @  0= IF ['] EXPECT UEXPECT ! THEN                          ."  --- removed from task list"                           ELSE  ."  --- not in task list"                                 THEN                                                        ELSE      ."  --- not in dictionary"                            THEN CR ;                                                                                                               : KILL-TASKS 0 TASK_ALL ! ." Task list erased "                                 TASK_LIST #TASKS 4 * ERASE ;                     ;S                                                             