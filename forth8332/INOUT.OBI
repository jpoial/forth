SOURCE$ C:\RELPASS\INOUT.MOD IMODULE$ InOut MODTAB$ InOut SET-IMPL IMPORT-ON IMPORT$ IO IMPORT$ Str IMPORT$ Terminal IMPORT$ ASCII IMPORT-OFF STR' CON ' ALLOT-STR BENUM CONST$ RestoreDev PRTAB$ AddExt 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ fn INCPNUM&!TAB TYPE-DROP VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ ext INCPNUM&!TAB TYPE-DROP NOOP ~ CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ p TYPE-DROP STR' \ ' SYS-STR$ &C:\R001 STR' . ' SYS-STR$ &C:\R002 STR' . ' SYS-STR$ &C:\R003 : &C:\R004 BEGIN CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 ] BIN-OP SV+ [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 5 I/C ] CONSTTABLE [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP [ fn ] IDENTIFIER M-ARRAY SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 10 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R001 ] $STRINGCONST [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Append ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ &C:\R002 ] $STRINGCONST NEXTCOMP PROCEND [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Append ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ ext ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND 0RETURN ENDOF ESAC CASE SV0 [ fn ] IDENTIFIER M-ARRAY SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 10 ] BIN-OP MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R003 ] $STRINGCONST [ 1 ] BIN-OP BOOLEAN? => 0RETURN ENDOF ESAC [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND AGAIN ; : &C:\R005 BODY-BEGIN A-STACK-0 SV0 [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Length ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK AGRNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ p ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 1 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &C:\R004 BODY-END ; BLBODY$ &C:\R005 END-BLOCK NPAIRS$ AddExt AddExt PRTAB$ OpenInput 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ defext INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 79 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ fn TYPE-DROP : &C:\R006 BODY-BEGIN [ ReadString ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ AddExt ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ defext ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ RedirectInput ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R006 END-BLOCK NPAIRS$ OpenInput OpenInput PRTAB$ OpenOutput 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ defext INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 79 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ fn TYPE-DROP : &C:\R007 BODY-BEGIN [ ReadString ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ AddExt ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ defext ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ RedirectOutput ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ fn ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R007 END-BLOCK NPAIRS$ OpenOutput OpenOutput PRTAB$ CloseInput NOOP ~ : &C:\R008 BODY-BEGIN [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ RedirectInput ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ RestoreDev ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R008 END-BLOCK NPAIRS$ CloseInput CloseInput PRTAB$ CloseOutput NOOP ~ : &C:\R009 BODY-BEGIN [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ RedirectOutput ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ RestoreDev ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R009 END-BLOCK NPAIRS$ CloseOutput CloseOutput PRTAB$ Read 0PNUM! VAR-SECT CHAR TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP NOOP ~ BOOLEAN TYPE-DUP VAR$ b TYPE-DROP : &C:\R010 BODY-BEGIN BEGIN [ Terminal ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Read ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ ASCII ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ lf ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 2 ] BIN-OP BOOLEAN? UNTIL CASE SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ ASCII ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ cr ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ EOL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ v ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC [ Write ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R010 END-BLOCK NPAIRS$ Read Read PRTAB$ ReadString 0PNUM! VAR-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP NOOP ~ CHAR TYPE-DUP VAR$ c TYPE-DROP 0 I/C BENUM 255 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ line TYPE-DROP CARDINAL TYPE-DUP VAR$ p TYPE-DROP STR'   ' SYS-STR$ &C:\R011 STR'   ' SYS-STR$ &C:\R012 STR'   ' SYS-STR$ &C:\R013 : &C:\R014 BEGIN CASE SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ ASCII ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ bs ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP SV+ [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ ASCII ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ del ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP SV+ [ 7 ] BIN-OP BOOLEAN? => CASE SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 0 I/C ] CONSTTABLE [ 5 ] BIN-OP BOOLEAN? => [ DEC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrChar ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ &C:\R012 ] $STRINGCONST NEXTCOMP PROCEND [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrChar ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ ASCII ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ bs ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ENDOF ESAC ENDOF SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R013 ] $STRINGCONST [ 5 ] BIN-OP SV+ BOOLEAN? => CASE SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ line ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ line ] IDENTIFIER M-ARRAY SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND ENDOF ESAC ENDOF EXIT ESAC [ Read ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND AGAIN ; : &C:\R015 BODY-BEGIN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ p ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BEGIN [ Read ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ &C:\R011 ] $STRINGCONST [ 2 ] BIN-OP BOOLEAN? UNTIL &C:\R014 A-STACK-0 SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ termCH ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN CASE SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ line ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 3 ] BIN-OP BOOLEAN? => A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ line ] IDENTIFIER M-ARRAY SV0 [ p ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ Copy ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ line ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R015 END-BLOCK NPAIRS$ ReadString ReadString PRTAB$ ReadCard 0PNUM! VAR-SECT CARDINAL TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 79 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ line TYPE-DROP : &C:\R016 BODY-BEGIN [ ReadString ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ line ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ StrToCard ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK AGRNAME SV0 [ line ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ v ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R016 END-BLOCK NPAIRS$ ReadCard ReadCard PRTAB$ ReadInt 0PNUM! VAR-SECT INTEGER TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 79 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ line TYPE-DROP : &C:\R017 BODY-BEGIN [ ReadString ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ line ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND A-STACK-0 SV0 [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ StrToInt ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK AGRNAME SV0 [ line ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 10 I/C ] CONSTTABLE NEXTCOMP SV0 [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND AGR-ADDR [ v ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R017 END-BLOCK NPAIRS$ ReadInt ReadInt PRTAB$ Write 0PNUM! VALUE-SECT CHAR TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R018 BODY-BEGIN CASE SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ EOL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP BOOLEAN? => [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrLn ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrChar ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND ESAC A-STACK-0 SV0 [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ OK ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R018 END-BLOCK NPAIRS$ Write Write PRTAB$ WriteLn NOOP ~ : &C:\R019 BODY-BEGIN [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrLn ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME PROCEND A-STACK-0 SV0 [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ OK ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R019 END-BLOCK NPAIRS$ WriteLn WriteLn PRTAB$ WriteString 0PNUM! VALUE-SECT CHAR $ARRAY-OF TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 256 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ buff TYPE-DROP CARDINAL TYPE-DUP VAR$ i TYPE-DUP VAR$ j TYPE-DROP CHAR TYPE-DUP VAR$ c TYPE-DROP PRTAB$ OutBuff NOOP ~ : &C:\R020 BODY-BEGIN A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ buff ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrStr ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ buff ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ OK ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH COMPILE-NOT BOOLEAN? => A-STACK-0 SV0 [ FALSE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ j ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R020 END-BLOCK NPAIRS$ OutBuff OutBuff : &C:\R021 BEGIN CASE SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ HIGH ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 5 ] BIN-OP BOOLEAN? => [ OutBuff ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND 0RETURN ENDOF ESAC A-STACK-0 SV0 [ v ] IDENTIFIER M-ARRAY SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ c ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ i ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND CASE SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND [ 1 ] BIN-OP BOOLEAN? => [ OutBuff ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND 0RETURN ENDOF ESAC CASE SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ EOL ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ 1 ] BIN-OP BOOLEAN? => [ OutBuff ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND [ WriteLn ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF A-STACK-0 SV0 [ c ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ buff ] IDENTIFIER M-ARRAY SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH MINDEX -LEVEL RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN [ INC ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 1 I/C ] CONSTTABLE NEXTCOMP PROCEND CASE SV0 [ j ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH [ SIZE ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ buff ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND [ 1 I/C ] CONSTTABLE [ 10 ] BIN-OP [ 1 ] BIN-OP BOOLEAN? => [ OutBuff ] IDENTIFIER RES-CONTEXT REC-CHECK PROCNAME PROCEND ENDOF ESAC ESAC AGAIN ; : &C:\R022 BODY-BEGIN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ i ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ 0 I/C ] CONSTTABLE AGR-ADDR [ j ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN &C:\R021 BODY-END ; BLBODY$ &C:\R022 END-BLOCK NPAIRS$ WriteString WriteString PRTAB$ WriteCard 0PNUM! VALUE-SECT CARDINAL TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ w INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R023 BODY-BEGIN [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrCard ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ w ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND NEXTCOMP PROCEND A-STACK-0 SV0 [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ OK ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R023 END-BLOCK NPAIRS$ WriteCard WriteCard PRTAB$ WriteInt 0PNUM! VALUE-SECT INTEGER TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ w INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R024 BODY-BEGIN [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrInt ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ w ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND NEXTCOMP PROCEND A-STACK-0 SV0 [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ OK ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R024 END-BLOCK NPAIRS$ WriteInt WriteInt PRTAB$ WriteOct 0PNUM! VALUE-SECT CARDINAL TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ w INCPNUM&!TAB TYPE-DROP NOOP ~ 0 I/C BENUM 80 I/C BENUM CRROOT RANGE-TAB CHAR ARRAY-TAB TYPE-DUP VAR$ s TYPE-DROP : &C:\R025 BODY-BEGIN [ Str ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ CardToStr ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ 8 I/C ] CONSTTABLE NEXTCOMP SV0 [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP PROCEND CASE SV0 [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH BOOLEAN? => [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrStrAdj ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ s ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ w ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND NEXTCOMP PROCEND A-STACK-0 SV0 [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ OK ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN ENDOF ESAC BODY-END ; BLBODY$ &C:\R025 END-BLOCK NPAIRS$ WriteOct WriteOct PRTAB$ WriteHex 0PNUM! VALUE-SECT CARDINAL TYPE-DUP VAR$ v INCPNUM&!TAB TYPE-DROP VALUE-SECT CARDINAL TYPE-DUP VAR$ w INCPNUM&!TAB TYPE-DROP NOOP ~ : &C:\R026 BODY-BEGIN [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ WrHex ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK PROCNAME SV0 [ v ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP SV0 [ INTEGER ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ w ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH NEXTCOMP AGREND NEXTCOMP PROCEND A-STACK-0 SV0 [ IO ] IDENTIFIER I*ALSO OP-REC WPUSH+ [ OK ] IDENTIFIER WPOP- CT? I*PREV RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R026 END-BLOCK NPAIRS$ WriteHex WriteHex : &C:\R027 BODY-BEGIN A-STACK-0 SV0 [ TRUE ] IDENTIFIER RES-CONTEXT REC-CHECK COMPILE-FETCH AGR-ADDR [ Done ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN A-STACK-0 SV0 [ CHR ] IDENTIFIER RES-CONTEXT REC-CHECK AGRNAME SV0 [ 0 I/C ] CONSTTABLE NEXTCOMP AGREND AGR-ADDR [ termCH ] IDENTIFIER RES-CONTEXT REC-CHECK RECIPIENT? COMPILE-ASSIGN BODY-END ; BLBODY$ &C:\R027 END-BLOCK NPAIRS$ InOut InOut CUNIT$ InOut ;S NOSOURCE   